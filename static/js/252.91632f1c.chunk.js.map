{"version":3,"file":"static/js/252.91632f1c.chunk.js","mappings":"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","sources":["proto_js/ColinkServiceClientPb.ts","lib.ts","proto_js/colink_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for colink\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as proto_colink_pb from './colink_pb';\n\n\nexport class CoLinkClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname;\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorGenerateToken = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/GenerateToken',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.GenerateTokenRequest,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.GenerateTokenRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/GenerateToken',\n        request,\n        metadata || {},\n        this.methodDescriptorGenerateToken,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/GenerateToken',\n    request,\n    metadata || {},\n    this.methodDescriptorGenerateToken);\n  }\n\n  methodDescriptorImportUser = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ImportUser',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.UserConsent,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.UserConsent) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ImportUser',\n        request,\n        metadata || {},\n        this.methodDescriptorImportUser,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ImportUser',\n    request,\n    metadata || {},\n    this.methodDescriptorImportUser);\n  }\n\n  methodDescriptorCreateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateEntry);\n  }\n\n  methodDescriptorReadEntries = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadEntries',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntries,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.StorageEntries) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadEntries',\n        request,\n        metadata || {},\n        this.methodDescriptorReadEntries,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadEntries',\n    request,\n    metadata || {},\n    this.methodDescriptorReadEntries);\n  }\n\n  methodDescriptorUpdateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/UpdateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/UpdateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorUpdateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/UpdateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorUpdateEntry);\n  }\n\n  methodDescriptorDeleteEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/DeleteEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/DeleteEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorDeleteEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/DeleteEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorDeleteEntry);\n  }\n\n  methodDescriptorReadKeys = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadKeys',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ReadKeysRequest,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.ReadKeysRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadKeys',\n        request,\n        metadata || {},\n        this.methodDescriptorReadKeys,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadKeys',\n    request,\n    metadata || {},\n    this.methodDescriptorReadKeys);\n  }\n\n  methodDescriptorCreateTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateTask',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateTask',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateTask);\n  }\n\n  methodDescriptorConfirmTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ConfirmTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ConfirmTaskRequest,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ConfirmTaskRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ConfirmTask',\n        request,\n        metadata || {},\n        this.methodDescriptorConfirmTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ConfirmTask',\n    request,\n    metadata || {},\n    this.methodDescriptorConfirmTask);\n  }\n\n  methodDescriptorFinishTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/FinishTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/FinishTask',\n        request,\n        metadata || {},\n        this.methodDescriptorFinishTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/FinishTask',\n    request,\n    metadata || {},\n    this.methodDescriptorFinishTask);\n  }\n\n  methodDescriptorRequestInfo = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/RequestInfo',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Empty,\n    proto_colink_pb.RequestInfoResponse,\n    (request: proto_colink_pb.Empty) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.RequestInfoResponse.deserializeBinary\n  );\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void): grpcWeb.ClientReadableStream<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/RequestInfo',\n        request,\n        metadata || {},\n        this.methodDescriptorRequestInfo,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/RequestInfo',\n    request,\n    metadata || {},\n    this.methodDescriptorRequestInfo);\n  }\n\n  methodDescriptorSubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Subscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.SubscribeRequest,\n    proto_colink_pb.MQQueueName,\n    (request: proto_colink_pb.SubscribeRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.MQQueueName.deserializeBinary\n  );\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void): grpcWeb.ClientReadableStream<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Subscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorSubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Subscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorSubscribe);\n  }\n\n  methodDescriptorUnsubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Unsubscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.MQQueueName,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.MQQueueName) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Unsubscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorUnsubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Unsubscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorUnsubscribe);\n  }\n\n  methodDescriptorStartProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StartProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StartProtocolOperatorRequest,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    (request: proto_colink_pb.StartProtocolOperatorRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.ProtocolOperatorInstanceId.deserializeBinary\n  );\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void): grpcWeb.ClientReadableStream<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StartProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStartProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StartProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStartProtocolOperator);\n  }\n\n  methodDescriptorStopProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StopProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ProtocolOperatorInstanceId) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StopProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStopProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StopProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStopProtocolOperator);\n  }\n\n  methodDescriptorInterCoreSyncTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/InterCoreSyncTask',\n        request,\n        metadata || {},\n        this.methodDescriptorInterCoreSyncTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/InterCoreSyncTask',\n    request,\n    metadata || {},\n    this.methodDescriptorInterCoreSyncTask);\n  }\n\n  methodDescriptorInterCoreSyncTaskWithReverseConnection = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n    grpcWeb.MethodType.SERVER_STREAMING,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  interCoreSyncTaskWithReverseConnection(\n    request: proto_colink_pb.Task,\n    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<proto_colink_pb.Task> {\n    return this.client_.serverStreaming(\n      this.hostname_ +\n        '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n      request,\n      metadata || {},\n      this.methodDescriptorInterCoreSyncTaskWithReverseConnection);\n  }\n\n}\n\n","/* TEMPORARY FILE - will convert to npm package in the future via colink-sdk-a-js-dev */\n\nimport {\n  RequestInfoResponse,\n  Empty,\n  UserConsent,\n  Jwt,\n  GenerateTokenRequest,\n  StorageEntry,\n  StorageEntries,\n  ReadKeysRequest,\n} from './proto_js/colink_pb'\nimport { CoLinkClient } from './proto_js/ColinkServiceClientPb'\nimport secp256k1 from 'secp256k1'\nimport { Buffer } from 'buffer'\nimport crypto from 'crypto'\nimport { ethers } from 'ethers'\nimport { Metadata } from 'grpc-web'\n\n// Required for grpc-web on SSR\nglobal.XMLHttpRequest = require('xhr2')\n\n// Required for MetaMask wallet detection\ndeclare let window: any\n\n/* Utility functions */\nfunction getClient(input: string | CoLinkClient): CoLinkClient {\n  if (typeof input === 'string') {\n    return new CoLinkClient(input)\n  } else {\n    return input\n  }\n}\n\nexport async function verifyClient(input: string | CoLinkClient): Promise<boolean> {\n  let client: CoLinkClient\n  if (typeof input === 'string') {\n    client = new CoLinkClient(input)\n  } else {\n    client = input\n  }\n\n  let response: boolean = false\n  let coreReq: Empty = new Empty()\n  await client\n    .requestInfo(coreReq, getMetadata(''))\n    .then((resp: RequestInfoResponse) => {\n      response = true\n    })\n    .catch((err: Error) => {\n      response = false\n    })\n  return Promise.resolve(response)\n}\n\nfunction getMetadata(jwt: string): {} {\n  // set metadata with admin token\n  let meta = { authorization: jwt }\n  return meta\n}\n\nfunction getNameEntry(input: string | StorageEntry): StorageEntry {\n  if (typeof input === 'string') {\n    let entry: StorageEntry = new StorageEntry()\n    entry.setKeyName(input)\n    return entry\n  } else {\n    return input\n  }\n}\n\nfunction getUserId(jwt: string): string {\n  let encodedId: string = jwt.split('.')[1]\n  let userId: string = JSON.parse(Buffer.from(encodedId, 'base64').toString()).user_id\n  return userId\n}\n\nfunction i2hex(i: Uint8Array): string {\n  return Buffer.from(i).toString('hex')\n}\n\n/* Handles USER DATA (private keys, Jwts, etc) */\nexport class UserData {\n  privateKey: string\n  userJwt: string\n\n  constructor(pk: string, jwt: string) {\n    this.privateKey = pk\n    this.userJwt = jwt\n  }\n}\n\nexport class Consent {\n  consent: UserConsent\n\n  constructor(c: UserConsent) {\n    this.consent = c\n  }\n}\n\nasync function getUserConsentPK(\n  client: CoLinkClient,\n  meta: Metadata | null,\n  pubKey: Uint8Array,\n  privKey: Uint8Array,\n  expirationTimestamp?: number,\n): Promise<UserConsent> {\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeBuf: Buffer = Buffer.alloc(8)\n  sigTimeBuf.writeBigUInt64LE(BigInt(sigTime))\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n\n  let expTimeBuf: Buffer = Buffer.alloc(8)\n  expTimeBuf.writeBigUInt64LE(BigInt(expTime))\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: Uint8Array = response.getCorePublicKey_asU8()\n\n  // prep signature + request\n  let msg: Buffer = Buffer.concat([pubKey, sigTimeBuf, expTimeBuf, corePubKey])\n  let hash = crypto.createHash('sha256').update(msg).digest('hex')\n  let signature: Uint8Array = secp256k1.ecdsaSign(Buffer.from(hash, 'hex'), privKey).signature\n  let request: UserConsent = new UserConsent()\n  request.setPublicKey(pubKey)\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(signature)\n  request.setExpirationTimestamp(expTime)\n\n  return request\n}\n\nexport async function getUserConsentMM(\n  address: CoLinkClient | string,\n  meta: Metadata | null,\n  expirationTimestamp?: number,\n): Promise<Consent> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // connect to MetaMask wallet\n  if (!window.ethereum) throw new Error('No crypto wallet found. Please install it.')\n\n  await window.ethereum.request({\n    method: 'eth_requestAccounts',\n  })\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeStr: string = sigTime.toString()\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n  let expTimeStr: string = expTime.toString()\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: string = i2hex(response.getCorePublicKey_asU8())\n\n  // prep signature + request\n  let msg: string = `sigTime: ${sigTimeStr}\\nexpTime: ${expTimeStr}\\ncorePubKey: ${corePubKey}\\n`\n\n  let signature = await signer.signMessage(msg)\n  let sigBuf = Buffer.from(signature.slice(2), 'hex')\n\n  let request: UserConsent = new UserConsent()\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(sigBuf)\n  request.setExpirationTimestamp(expTime)\n\n  return new Consent(request)\n}\n\nexport async function generateKeyAndJwt(\n  address: string | CoLinkClient,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  let privateKey: string = Buffer.from(crypto.randomBytes(32)).toString('hex')\n  return generateJwtFromKey(address, privateKey, hostToken, expirationTimestamp)\n}\n\nexport async function generateJwtFromKey(\n  address: string | CoLinkClient,\n  privateKey: string,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n\n  // generate new (pubKey, privKey) pair with privateKey\n  let privKey: Uint8Array = Uint8Array.from(Buffer.from(privateKey, 'hex'))\n  let pubKey: Uint8Array = secp256k1.publicKeyCreate(privKey, true)\n\n  let request: UserConsent = await getUserConsentPK(\n    client,\n    meta,\n    pubKey,\n    privKey,\n    expirationTimestamp,\n  )\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client.importUser(request, meta).then((jwt: Jwt) => {\n    jwtToken = jwt.getJwt()\n  })\n\n  return Promise.resolve(new UserData(privateKey, jwtToken))\n}\n\nexport async function generateJwtMetaMask(\n  address: string | CoLinkClient,\n  hostToken: string,\n  consent?: Consent,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n  let request: UserConsent\n\n  if (typeof consent === 'undefined') {\n    request = (await getUserConsentMM(client, meta, expirationTimestamp)).consent\n  } else {\n    request = consent.consent\n  }\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client\n    .importUser(request, meta)\n    .then((jwt: Jwt) => {\n      jwtToken = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      alert(err)\n    })\n\n  return Promise.resolve(new UserData('', jwtToken))\n}\n\nexport async function generateToken(\n  address: string | CoLinkClient,\n  oldJwt: string,\n  consent?: Consent,\n  expirationTime?: number,\n): Promise<string> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  let meta: Metadata = getMetadata(oldJwt)\n\n  let request: GenerateTokenRequest = new GenerateTokenRequest()\n  if (typeof expirationTime !== 'undefined') {\n    request.setExpirationTime(expirationTime)\n  } else {\n    request.setExpirationTime(daysToTimestamp(31)) // 31 day default\n  }\n\n  if (typeof consent !== 'undefined') {\n    request.setUserConsent(consent.consent)\n  }\n\n  request.setPrivilege('user')\n\n  let newJwt: string = ''\n  await client\n    .generateToken(request, meta)\n    .then((jwt: Jwt) => {\n      newJwt = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return Promise.resolve(newJwt)\n}\n\nexport async function validateJwtAndPrivilege(\n  address: string | CoLinkClient,\n  jwt: string,\n): Promise<string> {\n  let meta = getMetadata(jwt)\n  let client: CoLinkClient = getClient(address)\n  let coreReq: Empty = new Empty()\n  try {\n    let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n    if (response.getMqUri().length > 0) {\n      return 'user'\n    } else {\n      return 'host'\n    }\n  } catch (err) {\n    return 'invalid'\n  }\n}\n\nexport function daysToTimestamp(days: number) {\n  let currentTime: number = parseInt((Date.now() / 1000).toFixed()) // convert milliseconds to seconds\n  return currentTime + 86400 * days\n}\n\n/* Handles STORAGE OPERATIONS (read, write, update, etc.) */\nexport function storageEntryToJSON(entry: StorageEntry, isString: boolean) {\n  let payload: string\n  if (isString) {\n    payload = new TextDecoder().decode(entry.getPayload_asU8())\n  } else {\n    payload = i2hex(entry.getPayload_asU8())\n  }\n  return {\n    name: keyNameFromPath(entry.getKeyPath()),\n    keyPath: entry.getKeyPath(),\n    payload: payload,\n  }\n}\n\nexport function keyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    return matches[1]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport function lastKeyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    let match: string = matches[1]\n    if (match.split(':').length === 1) {\n      return match\n    }\n    return match.split(':').slice(-1)[0]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport async function createEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  keyname: string,\n  payload: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  request.setKeyName(keyname)\n  request.setPayload(payload)\n\n  let meta = getMetadata(jwt)\n\n  let newEntry: StorageEntry = new StorageEntry()\n  await client\n    .createEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      newEntry = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(newEntry)\n}\n\nexport async function readEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  entry: string | StorageEntry,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n  let nameEntry: StorageEntry = getNameEntry(entry)\n\n  let request: StorageEntries = new StorageEntries()\n  request.addEntries(nameEntry)\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .readEntries(request, meta)\n    .then((entriesList: StorageEntries) => {\n      response = entriesList.getEntriesList()[0]\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function updateEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n  newContents: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n  request.setPayload(newContents)\n\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .updateEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      response = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function deleteEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n) {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n\n  let meta = getMetadata(jwt)\n\n  await client.deleteEntry(request, meta).catch((err: Error) => {\n    alert(err)\n  })\n}\n\nexport async function getUserStorageEntries(\n  address: string | CoLinkClient,\n  jwt: string,\n  prefix?: string,\n): Promise<StorageEntry[]> {\n  let client: CoLinkClient = getClient(address)\n\n  let entries: StorageEntry[] = []\n  let meta = getMetadata(jwt)\n\n  async function updateEntries(prefix: string): Promise<string[]> {\n    let req: ReadKeysRequest = new ReadKeysRequest()\n    req.setPrefix(prefix)\n    req.setIncludeHistory(false)\n\n    let newPrefixes: string[] = []\n    await client\n      .readKeys(req, meta)\n      .then((response) => {\n        let newEntries: StorageEntry[] = response.getEntriesList()\n        entries = entries.concat(newEntries)\n        newPrefixes = newEntries.map((entry: StorageEntry) => {\n          return prefix + ':' + lastKeyNameFromPath(entry.getKeyPath())\n        })\n      })\n      .catch((err) => {\n        alert(err)\n      })\n\n    return newPrefixes\n  }\n\n  let keyPrefixes: string[]\n  if (typeof prefix !== 'undefined') {\n    keyPrefixes = [prefix]\n  } else {\n    let userId: string = getUserId(jwt)\n    keyPrefixes = [userId + ':']\n  }\n\n  /* Generates all layers psuedo-recursively */\n  // while (keyPrefixes.length > 0) {\n  //     for (let prefix of keyPrefixes) {\n  //         let newKeys: string[] = await updateEntries(prefix);\n  //         keyPrefixes = keyPrefixes.concat(newKeys).slice(1);\n  //     }\n  // }\n\n  /* Generates one layer */\n  for (let prefix of keyPrefixes) {\n    keyPrefixes = keyPrefixes.concat(await updateEntries(prefix)).slice(1)\n  }\n\n  entries.sort((a, b) => {\n    return keyNameFromPath(a.getKeyPath()) < keyNameFromPath(b.getKeyPath()) ? -1 : 1\n  })\n  return Promise.resolve(entries)\n}\n","// source: proto/colink.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDList', null, global);\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDWithKeyPath', null, global);\ngoog.exportSymbol('proto.colink.ConfirmTaskRequest', null, global);\ngoog.exportSymbol('proto.colink.Decision', null, global);\ngoog.exportSymbol('proto.colink.Empty', null, global);\ngoog.exportSymbol('proto.colink.GenerateTokenRequest', null, global);\ngoog.exportSymbol('proto.colink.Jwt', null, global);\ngoog.exportSymbol('proto.colink.ListOfBool', null, global);\ngoog.exportSymbol('proto.colink.ListOfBytes', null, global);\ngoog.exportSymbol('proto.colink.ListOfFloat', null, global);\ngoog.exportSymbol('proto.colink.ListOfInt64', null, global);\ngoog.exportSymbol('proto.colink.ListOfString', null, global);\ngoog.exportSymbol('proto.colink.MQQueueName', null, global);\ngoog.exportSymbol('proto.colink.Participant', null, global);\ngoog.exportSymbol('proto.colink.ProtocolOperatorInstanceId', null, global);\ngoog.exportSymbol('proto.colink.ReadKeysRequest', null, global);\ngoog.exportSymbol('proto.colink.RequestInfoResponse', null, global);\ngoog.exportSymbol('proto.colink.StartProtocolOperatorRequest', null, global);\ngoog.exportSymbol('proto.colink.StorageEntries', null, global);\ngoog.exportSymbol('proto.colink.StorageEntry', null, global);\ngoog.exportSymbol('proto.colink.SubscribeRequest', null, global);\ngoog.exportSymbol('proto.colink.SubscriptionMessage', null, global);\ngoog.exportSymbol('proto.colink.Task', null, global);\ngoog.exportSymbol('proto.colink.UserConsent', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Empty.displayName = 'proto.colink.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfString.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfString.displayName = 'proto.colink.ListOfString';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBytes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBytes.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBytes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBytes.displayName = 'proto.colink.ListOfBytes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfInt64 = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfInt64.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfInt64, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfInt64.displayName = 'proto.colink.ListOfInt64';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfFloat = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfFloat.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfFloat, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfFloat.displayName = 'proto.colink.ListOfFloat';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBool = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBool.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBool, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBool.displayName = 'proto.colink.ListOfBool';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Jwt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Jwt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Jwt.displayName = 'proto.colink.Jwt';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StorageEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntry.displayName = 'proto.colink.StorageEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntries = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.StorageEntries.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.StorageEntries, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntries.displayName = 'proto.colink.StorageEntries';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.GenerateTokenRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.GenerateTokenRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.GenerateTokenRequest.displayName = 'proto.colink.GenerateTokenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.UserConsent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.UserConsent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.UserConsent.displayName = 'proto.colink.UserConsent';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ReadKeysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ReadKeysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ReadKeysRequest.displayName = 'proto.colink.ReadKeysRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Participant = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Participant, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Participant.displayName = 'proto.colink.Participant';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Decision = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Decision, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Decision.displayName = 'proto.colink.Decision';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Task = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.Task.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.Task, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Task.displayName = 'proto.colink.Task';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ConfirmTaskRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ConfirmTaskRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ConfirmTaskRequest.displayName = 'proto.colink.ConfirmTaskRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.RequestInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.RequestInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.RequestInfoResponse.displayName = 'proto.colink.RequestInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscribeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscribeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscribeRequest.displayName = 'proto.colink.SubscribeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscriptionMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscriptionMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscriptionMessage.displayName = 'proto.colink.SubscriptionMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.MQQueueName = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.MQQueueName, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.MQQueueName.displayName = 'proto.colink.MQQueueName';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDWithKeyPath, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.displayName = 'proto.colink.CoLinkInternalTaskIDWithKeyPath';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.CoLinkInternalTaskIDList.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDList.displayName = 'proto.colink.CoLinkInternalTaskIDList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StartProtocolOperatorRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StartProtocolOperatorRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StartProtocolOperatorRequest.displayName = 'proto.colink.StartProtocolOperatorRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ProtocolOperatorInstanceId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ProtocolOperatorInstanceId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ProtocolOperatorInstanceId.displayName = 'proto.colink.ProtocolOperatorInstanceId';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Empty;\n  return proto.colink.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfString.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfString.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfString;\n  return proto.colink.ListOfString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfString.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBytes.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBytes.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBytes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBytes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: msg.getListList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBytes;\n  return proto.colink.ListOfBytes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBytes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBytes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBytes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBytes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes list = 1;\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getListList()));\n};\n\n\n/**\n * repeated bytes list = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getListList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfInt64.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfInt64.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfInt64.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfInt64} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfInt64;\n  return proto.colink.ListOfInt64.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfInt64} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfInt64.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfInt64.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfInt64} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int64 list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfInt64.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfFloat.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfFloat.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfFloat.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfFloat} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfFloat;\n  return proto.colink.ListOfFloat.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfFloat} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfFloat.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfFloat.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfFloat} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedFloat(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated float list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfFloat.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBool.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBool.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBool.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBool} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBool;\n  return proto.colink.ListOfBool.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBool} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBool.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBool.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBool} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bool list = 1;\n * @return {!Array<boolean>}\n */\nproto.colink.ListOfBool.prototype.getListList = function() {\n  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));\n};\n\n\n/**\n * @param {!Array<boolean>} value\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {boolean} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Jwt.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Jwt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Jwt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jwt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Jwt;\n  return proto.colink.Jwt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Jwt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJwt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Jwt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Jwt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Jwt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJwt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string jwt = 1;\n * @return {string}\n */\nproto.colink.Jwt.prototype.getJwt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Jwt} returns this\n */\nproto.colink.Jwt.prototype.setJwt = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntry;\n  return proto.colink.StorageEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.StorageEntries.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntries.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntries.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntries} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),\n    proto.colink.StorageEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntries;\n  return proto.colink.StorageEntries.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntries} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.StorageEntry;\n      reader.readMessage(value,proto.colink.StorageEntry.deserializeBinaryFromReader);\n      msg.addEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntries.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntries.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntries} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.StorageEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated StorageEntry entries = 1;\n * @return {!Array<!proto.colink.StorageEntry>}\n */\nproto.colink.StorageEntries.prototype.getEntriesList = function() {\n  return /** @type{!Array<!proto.colink.StorageEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.StorageEntry, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.StorageEntry>} value\n * @return {!proto.colink.StorageEntries} returns this\n*/\nproto.colink.StorageEntries.prototype.setEntriesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.StorageEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntries.prototype.addEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.StorageEntry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.StorageEntries} returns this\n */\nproto.colink.StorageEntries.prototype.clearEntriesList = function() {\n  return this.setEntriesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.GenerateTokenRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.GenerateTokenRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.GenerateTokenRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    privilege: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.GenerateTokenRequest;\n  return proto.colink.GenerateTokenRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.GenerateTokenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivilege(value);\n      break;\n    case 3:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.GenerateTokenRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.GenerateTokenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.GenerateTokenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPrivilege();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 expiration_time = 1;\n * @return {number}\n */\nproto.colink.GenerateTokenRequest.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string privilege = 2;\n * @return {string}\n */\nproto.colink.GenerateTokenRequest.prototype.getPrivilege = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setPrivilege = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 3;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.GenerateTokenRequest.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 3));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n*/\nproto.colink.GenerateTokenRequest.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.GenerateTokenRequest.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.UserConsent.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.UserConsent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.UserConsent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: msg.getPublicKey_asB64(),\n    signatureTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.UserConsent;\n  return proto.colink.UserConsent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.UserConsent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSignatureTimestamp(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTimestamp(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.UserConsent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.UserConsent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignatureTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getExpirationTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes public_key = 1;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setPublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 signature_timestamp = 2;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getSignatureTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignatureTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 expiration_timestamp = 4;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getExpirationTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setExpirationTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ReadKeysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ReadKeysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ReadKeysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    prefix: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeHistory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ReadKeysRequest;\n  return proto.colink.ReadKeysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ReadKeysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrefix(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeHistory(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ReadKeysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ReadKeysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ReadKeysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrefix();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeHistory();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string prefix = 1;\n * @return {string}\n */\nproto.colink.ReadKeysRequest.prototype.getPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setPrefix = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool include_history = 2;\n * @return {boolean}\n */\nproto.colink.ReadKeysRequest.prototype.getIncludeHistory = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setIncludeHistory = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Participant.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Participant.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Participant} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    role: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Participant;\n  return proto.colink.Participant.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Participant} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Participant.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Participant.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Participant} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string user_id = 1;\n * @return {string}\n */\nproto.colink.Participant.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.colink.Participant.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setRole = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Decision.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Decision.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Decision} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    isApproved: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    isRejected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    reason: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    signature: msg.getSignature_asB64(),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Decision;\n  return proto.colink.Decision.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Decision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsApproved(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRejected(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReason(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 6:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Decision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Decision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIsApproved();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIsRejected();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getReason();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool is_approved = 1;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsApproved = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsApproved = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool is_rejected = 2;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsRejected = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsRejected = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional string reason = 3;\n * @return {string}\n */\nproto.colink.Decision.prototype.getReason = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setReason = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes signature = 4;\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes signature = 4;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 6;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.Decision.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 6));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.Decision} returns this\n*/\nproto.colink.Decision.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.Decision.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.Task.repeatedFields_ = [4,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Task.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Task.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Task} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    protocolName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    protocolParam: msg.getProtocolParam_asB64(),\n    participantsList: jspb.Message.toObjectList(msg.getParticipantsList(),\n    proto.colink.Participant.toObject, includeInstance),\n    parentTask: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    requireAgreement: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),\n    decisionsList: jspb.Message.toObjectList(msg.getDecisionsList(),\n    proto.colink.Decision.toObject, includeInstance),\n    status: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Task;\n  return proto.colink.Task.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Task} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProtocolParam(value);\n      break;\n    case 4:\n      var value = new proto.colink.Participant;\n      reader.readMessage(value,proto.colink.Participant.deserializeBinaryFromReader);\n      msg.addParticipants(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setParentTask(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequireAgreement(value);\n      break;\n    case 6:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.addDecisions(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Task.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Task} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getProtocolParam_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.colink.Participant.serializeBinaryToWriter\n    );\n  }\n  f = message.getParentTask();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getRequireAgreement();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getDecisionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.Task.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string protocol_name = 2;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProtocolParam()));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.getProtocolParam_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProtocolParam()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolParam = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * repeated Participant participants = 4;\n * @return {!Array<!proto.colink.Participant>}\n */\nproto.colink.Task.prototype.getParticipantsList = function() {\n  return /** @type{!Array<!proto.colink.Participant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Participant, 4));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Participant>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setParticipantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.colink.Participant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Participant}\n */\nproto.colink.Task.prototype.addParticipants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.colink.Participant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearParticipantsList = function() {\n  return this.setParticipantsList([]);\n};\n\n\n/**\n * optional string parent_task = 5;\n * @return {string}\n */\nproto.colink.Task.prototype.getParentTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setParentTask = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional bool require_agreement = 9;\n * @return {boolean}\n */\nproto.colink.Task.prototype.getRequireAgreement = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setRequireAgreement = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n/**\n * repeated Decision decisions = 6;\n * @return {!Array<!proto.colink.Decision>}\n */\nproto.colink.Task.prototype.getDecisionsList = function() {\n  return /** @type{!Array<!proto.colink.Decision>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Decision, 6));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Decision>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setDecisionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.colink.Decision=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Decision}\n */\nproto.colink.Task.prototype.addDecisions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.colink.Decision, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearDecisionsList = function() {\n  return this.setDecisionsList([]);\n};\n\n\n/**\n * optional string status = 7;\n * @return {string}\n */\nproto.colink.Task.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int64 expiration_time = 8;\n * @return {number}\n */\nproto.colink.Task.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ConfirmTaskRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ConfirmTaskRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ConfirmTaskRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    decision: (f = msg.getDecision()) && proto.colink.Decision.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ConfirmTaskRequest;\n  return proto.colink.ConfirmTaskRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ConfirmTaskRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.setDecision(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ConfirmTaskRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ConfirmTaskRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ConfirmTaskRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDecision();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.ConfirmTaskRequest.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Decision decision = 2;\n * @return {?proto.colink.Decision}\n */\nproto.colink.ConfirmTaskRequest.prototype.getDecision = function() {\n  return /** @type{?proto.colink.Decision} */ (\n    jspb.Message.getWrapperField(this, proto.colink.Decision, 2));\n};\n\n\n/**\n * @param {?proto.colink.Decision|undefined} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n*/\nproto.colink.ConfirmTaskRequest.prototype.setDecision = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.clearDecision = function() {\n  return this.setDecision(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.ConfirmTaskRequest.prototype.hasDecision = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.RequestInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.RequestInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.RequestInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mqUri: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    requestorIp: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.RequestInfoResponse;\n  return proto.colink.RequestInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.RequestInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMqUri(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequestorIp(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.RequestInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.RequestInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMqUri();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRequestorIp();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string mq_uri = 1;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getMqUri = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setMqUri = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string requestor_ip = 3;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getRequestorIp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setRequestorIp = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string version = 4;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscribeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscribeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    startTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscribeRequest;\n  return proto.colink.SubscribeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscribeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscribeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscribeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscribeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStartTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.SubscribeRequest.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 start_timestamp = 2;\n * @return {number}\n */\nproto.colink.SubscribeRequest.prototype.getStartTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setStartTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscriptionMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscriptionMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscriptionMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    changeType: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscriptionMessage;\n  return proto.colink.SubscriptionMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscriptionMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChangeType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscriptionMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscriptionMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChangeType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string change_type = 1;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getChangeType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setChangeType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.MQQueueName.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.MQQueueName.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.MQQueueName} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    queueName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.MQQueueName;\n  return proto.colink.MQQueueName.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.MQQueueName} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQueueName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.MQQueueName.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.MQQueueName.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.MQQueueName} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getQueueName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string queue_name = 1;\n * @return {string}\n */\nproto.colink.MQQueueName.prototype.getQueueName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.MQQueueName} returns this\n */\nproto.colink.MQQueueName.prototype.setQueueName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyPath: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    taskId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_path = 1;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string task_id = 2;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.CoLinkInternalTaskIDList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskIdsWithKeyPathsList: jspb.Message.toObjectList(msg.getTaskIdsWithKeyPathsList(),\n    proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDList;\n  return proto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n      reader.readMessage(value,proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader);\n      msg.addTaskIdsWithKeyPaths(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskIdsWithKeyPathsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CoLinkInternalTaskIDWithKeyPath task_ids_with_key_paths = 1;\n * @return {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.getTaskIdsWithKeyPathsList = function() {\n  return /** @type{!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.CoLinkInternalTaskIDWithKeyPath, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} value\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n*/\nproto.colink.CoLinkInternalTaskIDList.prototype.setTaskIdsWithKeyPathsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.addTaskIdsWithKeyPaths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.CoLinkInternalTaskIDWithKeyPath, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.clearTaskIdsWithKeyPathsList = function() {\n  return this.setTaskIdsWithKeyPathsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StartProtocolOperatorRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    protocolName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    userId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    upgrade: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StartProtocolOperatorRequest;\n  return proto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUpgrade(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StartProtocolOperatorRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpgrade();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string protocol_name = 1;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string user_id = 2;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool upgrade = 3;\n * @return {boolean}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUpgrade = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUpgrade = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ProtocolOperatorInstanceId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instanceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ProtocolOperatorInstanceId;\n  return proto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ProtocolOperatorInstanceId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstanceId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string instance_id = 1;\n * @return {string}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.getInstanceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ProtocolOperatorInstanceId} returns this\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.setInstanceId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.colink);\n"],"names":["CoLinkClient","hostname","credentials","options","client_","hostname_","credentials_","options_","methodDescriptorGenerateToken","grpcWeb","proto_colink_pb","request","serializeBinary","methodDescriptorImportUser","methodDescriptorCreateEntry","methodDescriptorReadEntries","methodDescriptorUpdateEntry","methodDescriptorDeleteEntry","methodDescriptorReadKeys","methodDescriptorCreateTask","methodDescriptorConfirmTask","methodDescriptorFinishTask","methodDescriptorRequestInfo","methodDescriptorSubscribe","methodDescriptorUnsubscribe","methodDescriptorStartProtocolOperator","methodDescriptorStopProtocolOperator","methodDescriptorInterCoreSyncTask","methodDescriptorInterCoreSyncTaskWithReverseConnection","this","metadata","callback","undefined","rpcCall","unaryCall","serverStreaming","getClient","input","verifyClient","client","response","coreReq","Empty","requestInfo","getMetadata","then","resp","catch","err","Promise","resolve","jwt","authorization","getNameEntry","entry","StorageEntry","setKeyName","getUserId","encodedId","split","JSON","parse","Buffer","toString","user_id","i2hex","i","global","XMLHttpRequest","require","UserData","pk","privateKey","userJwt","Consent","c","consent","getUserConsentMM","address","meta","expirationTimestamp","window","ethereum","Error","method","provider","ethers","signer","getSigner","sigTime","parseInt","Date","now","toFixed","sigTimeStr","expTimeStr","expTime","corePubKey","getCorePublicKey_asU8","msg","signMessage","signature","sigBuf","slice","UserConsent","setSignatureTimestamp","setSignature","setExpirationTimestamp","generateJwtMetaMask","hostToken","jwtToken","importUser","getJwt","alert","generateToken","oldJwt","expirationTime","GenerateTokenRequest","setExpirationTime","daysToTimestamp","setUserConsent","setPrivilege","newJwt","validateJwtAndPrivilege","getMqUri","length","days","storageEntryToJSON","isString","payload","TextDecoder","decode","getPayload_asU8","name","keyNameFromPath","getKeyPath","keyPath","matches","match","lastKeyNameFromPath","readEntry","nameEntry","StorageEntries","addEntries","readEntries","entriesList","getEntriesList","getUserStorageEntries","prefix","updateEntries","req","ReadKeysRequest","setPrefix","setIncludeHistory","newPrefixes","readKeys","newEntries","entries","concat","map","keyPrefixes","userId","sort","a","b","jspb","goog","self","Function","call","exportSymbol","proto","colink","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ListOfString","repeatedFields_","ListOfBytes","ListOfInt64","ListOfFloat","ListOfBool","Jwt","Participant","Decision","Task","ConfirmTaskRequest","RequestInfoResponse","SubscribeRequest","SubscriptionMessage","MQQueueName","CoLinkInternalTaskIDWithKeyPath","CoLinkInternalTaskIDList","StartProtocolOperatorRequest","ProtocolOperatorInstanceId","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","listList","getRepeatedField","value","readString","addList","getListList","writeRepeatedString","setListList","setField","opt_index","addToRepeatedField","clearListList","getListList_asB64","readBytes","getListList_asU8","writeRepeatedBytes","bytesListAsB64","bytesListAsU8","values","isDelimited","readPackedInt64","readInt64","writePackedInt64","getRepeatedFloatingPointField","readPackedFloat","readFloat","writePackedFloat","getRepeatedBooleanField","readPackedBool","readBool","writePackedBool","getFieldWithDefault","setJwt","writeString","setProto3StringField","keyName","getPayload_asB64","setKeyPath","setPayload","getKeyName","writeBytes","getPayload","bytesAsB64","bytesAsU8","setProto3BytesField","toObjectList","readMessage","writeRepeatedMessage","getRepeatedWrapperField","setEntriesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearEntriesList","privilege","userConsent","getUserConsent","getExpirationTime","writeInt64","getPrivilege","writeMessage","setProto3IntField","getWrapperField","setWrapperField","clearUserConsent","hasUserConsent","getField","publicKey","getPublicKey_asB64","signatureTimestamp","getSignature_asB64","setPublicKey","getPublicKey_asU8","getSignatureTimestamp","getExpirationTimestamp","getSignature_asU8","getPublicKey","getSignature","includeHistory","getBooleanFieldWithDefault","getPrefix","getIncludeHistory","writeBool","setProto3BooleanField","role","setUserId","setRole","getRole","isApproved","isRejected","reason","corePublicKey","getCorePublicKey_asB64","setIsApproved","setIsRejected","setReason","setCorePublicKey","getIsApproved","getIsRejected","getReason","getCorePublicKey","taskId","protocolName","protocolParam","getProtocolParam_asB64","participantsList","getParticipantsList","parentTask","requireAgreement","decisionsList","getDecisionsList","status","setTaskId","setProtocolName","setProtocolParam","addParticipants","setParentTask","setRequireAgreement","addDecisions","setStatus","getTaskId","getProtocolName","getProtocolParam_asU8","getParentTask","getRequireAgreement","getStatus","getProtocolParam","setParticipantsList","clearParticipantsList","setDecisionsList","clearDecisionsList","decision","getDecision","setDecision","clearDecision","hasDecision","mqUri","requestorIp","version","setMqUri","setRequestorIp","setVersion","getRequestorIp","getVersion","startTimestamp","setStartTimestamp","getStartTimestamp","changeType","setChangeType","getChangeType","queueName","setQueueName","getQueueName","taskIdsWithKeyPathsList","getTaskIdsWithKeyPathsList","addTaskIdsWithKeyPaths","setTaskIdsWithKeyPathsList","clearTaskIdsWithKeyPathsList","upgrade","setUpgrade","getUpgrade","instanceId","setInstanceId","getInstanceId","object","extend","exports"],"sourceRoot":""}