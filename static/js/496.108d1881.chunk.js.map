{"version":3,"file":"static/js/496.108d1881.chunk.js","mappings":"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","sources":["proto_js/colink_pb.js","proto_js/ColinkServiceClientPb.ts","lib.ts","views/pages/login/Login.tsx"],"sourcesContent":["// source: proto/colink.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDList', null, global);\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDWithKeyPath', null, global);\ngoog.exportSymbol('proto.colink.ConfirmTaskRequest', null, global);\ngoog.exportSymbol('proto.colink.Decision', null, global);\ngoog.exportSymbol('proto.colink.Empty', null, global);\ngoog.exportSymbol('proto.colink.GenerateTokenRequest', null, global);\ngoog.exportSymbol('proto.colink.Jwt', null, global);\ngoog.exportSymbol('proto.colink.ListOfBool', null, global);\ngoog.exportSymbol('proto.colink.ListOfBytes', null, global);\ngoog.exportSymbol('proto.colink.ListOfFloat', null, global);\ngoog.exportSymbol('proto.colink.ListOfInt64', null, global);\ngoog.exportSymbol('proto.colink.ListOfString', null, global);\ngoog.exportSymbol('proto.colink.MQQueueName', null, global);\ngoog.exportSymbol('proto.colink.Participant', null, global);\ngoog.exportSymbol('proto.colink.ProtocolOperatorInstanceId', null, global);\ngoog.exportSymbol('proto.colink.ReadKeysRequest', null, global);\ngoog.exportSymbol('proto.colink.RequestInfoResponse', null, global);\ngoog.exportSymbol('proto.colink.StartProtocolOperatorRequest', null, global);\ngoog.exportSymbol('proto.colink.StorageEntries', null, global);\ngoog.exportSymbol('proto.colink.StorageEntry', null, global);\ngoog.exportSymbol('proto.colink.SubscribeRequest', null, global);\ngoog.exportSymbol('proto.colink.SubscriptionMessage', null, global);\ngoog.exportSymbol('proto.colink.Task', null, global);\ngoog.exportSymbol('proto.colink.UserConsent', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Empty.displayName = 'proto.colink.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfString.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfString.displayName = 'proto.colink.ListOfString';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBytes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBytes.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBytes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBytes.displayName = 'proto.colink.ListOfBytes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfInt64 = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfInt64.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfInt64, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfInt64.displayName = 'proto.colink.ListOfInt64';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfFloat = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfFloat.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfFloat, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfFloat.displayName = 'proto.colink.ListOfFloat';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBool = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBool.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBool, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBool.displayName = 'proto.colink.ListOfBool';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Jwt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Jwt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Jwt.displayName = 'proto.colink.Jwt';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StorageEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntry.displayName = 'proto.colink.StorageEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntries = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.StorageEntries.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.StorageEntries, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntries.displayName = 'proto.colink.StorageEntries';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.GenerateTokenRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.GenerateTokenRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.GenerateTokenRequest.displayName = 'proto.colink.GenerateTokenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.UserConsent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.UserConsent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.UserConsent.displayName = 'proto.colink.UserConsent';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ReadKeysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ReadKeysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ReadKeysRequest.displayName = 'proto.colink.ReadKeysRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Participant = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Participant, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Participant.displayName = 'proto.colink.Participant';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Decision = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Decision, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Decision.displayName = 'proto.colink.Decision';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Task = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.Task.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.Task, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Task.displayName = 'proto.colink.Task';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ConfirmTaskRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ConfirmTaskRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ConfirmTaskRequest.displayName = 'proto.colink.ConfirmTaskRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.RequestInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.RequestInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.RequestInfoResponse.displayName = 'proto.colink.RequestInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscribeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscribeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscribeRequest.displayName = 'proto.colink.SubscribeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscriptionMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscriptionMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscriptionMessage.displayName = 'proto.colink.SubscriptionMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.MQQueueName = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.MQQueueName, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.MQQueueName.displayName = 'proto.colink.MQQueueName';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDWithKeyPath, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.displayName = 'proto.colink.CoLinkInternalTaskIDWithKeyPath';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.CoLinkInternalTaskIDList.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDList.displayName = 'proto.colink.CoLinkInternalTaskIDList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StartProtocolOperatorRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StartProtocolOperatorRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StartProtocolOperatorRequest.displayName = 'proto.colink.StartProtocolOperatorRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ProtocolOperatorInstanceId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ProtocolOperatorInstanceId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ProtocolOperatorInstanceId.displayName = 'proto.colink.ProtocolOperatorInstanceId';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Empty;\n  return proto.colink.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfString.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfString.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfString;\n  return proto.colink.ListOfString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfString.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBytes.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBytes.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBytes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBytes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: msg.getListList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBytes;\n  return proto.colink.ListOfBytes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBytes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBytes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBytes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBytes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes list = 1;\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getListList()));\n};\n\n\n/**\n * repeated bytes list = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getListList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfInt64.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfInt64.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfInt64.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfInt64} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfInt64;\n  return proto.colink.ListOfInt64.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfInt64} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfInt64.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfInt64.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfInt64} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int64 list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfInt64.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfFloat.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfFloat.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfFloat.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfFloat} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfFloat;\n  return proto.colink.ListOfFloat.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfFloat} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfFloat.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfFloat.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfFloat} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedFloat(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated float list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfFloat.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBool.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBool.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBool.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBool} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBool;\n  return proto.colink.ListOfBool.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBool} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBool.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBool.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBool} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bool list = 1;\n * @return {!Array<boolean>}\n */\nproto.colink.ListOfBool.prototype.getListList = function() {\n  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));\n};\n\n\n/**\n * @param {!Array<boolean>} value\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {boolean} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Jwt.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Jwt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Jwt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jwt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Jwt;\n  return proto.colink.Jwt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Jwt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJwt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Jwt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Jwt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Jwt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJwt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string jwt = 1;\n * @return {string}\n */\nproto.colink.Jwt.prototype.getJwt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Jwt} returns this\n */\nproto.colink.Jwt.prototype.setJwt = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntry;\n  return proto.colink.StorageEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.StorageEntries.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntries.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntries.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntries} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),\n    proto.colink.StorageEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntries;\n  return proto.colink.StorageEntries.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntries} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.StorageEntry;\n      reader.readMessage(value,proto.colink.StorageEntry.deserializeBinaryFromReader);\n      msg.addEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntries.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntries.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntries} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.StorageEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated StorageEntry entries = 1;\n * @return {!Array<!proto.colink.StorageEntry>}\n */\nproto.colink.StorageEntries.prototype.getEntriesList = function() {\n  return /** @type{!Array<!proto.colink.StorageEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.StorageEntry, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.StorageEntry>} value\n * @return {!proto.colink.StorageEntries} returns this\n*/\nproto.colink.StorageEntries.prototype.setEntriesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.StorageEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntries.prototype.addEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.StorageEntry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.StorageEntries} returns this\n */\nproto.colink.StorageEntries.prototype.clearEntriesList = function() {\n  return this.setEntriesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.GenerateTokenRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.GenerateTokenRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.GenerateTokenRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    privilege: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.GenerateTokenRequest;\n  return proto.colink.GenerateTokenRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.GenerateTokenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivilege(value);\n      break;\n    case 3:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.GenerateTokenRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.GenerateTokenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.GenerateTokenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPrivilege();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 expiration_time = 1;\n * @return {number}\n */\nproto.colink.GenerateTokenRequest.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string privilege = 2;\n * @return {string}\n */\nproto.colink.GenerateTokenRequest.prototype.getPrivilege = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setPrivilege = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 3;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.GenerateTokenRequest.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 3));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n*/\nproto.colink.GenerateTokenRequest.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.GenerateTokenRequest.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.UserConsent.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.UserConsent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.UserConsent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: msg.getPublicKey_asB64(),\n    signatureTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.UserConsent;\n  return proto.colink.UserConsent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.UserConsent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSignatureTimestamp(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTimestamp(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.UserConsent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.UserConsent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignatureTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getExpirationTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes public_key = 1;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setPublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 signature_timestamp = 2;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getSignatureTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignatureTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 expiration_timestamp = 4;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getExpirationTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setExpirationTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ReadKeysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ReadKeysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ReadKeysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    prefix: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeHistory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ReadKeysRequest;\n  return proto.colink.ReadKeysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ReadKeysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrefix(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeHistory(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ReadKeysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ReadKeysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ReadKeysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrefix();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeHistory();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string prefix = 1;\n * @return {string}\n */\nproto.colink.ReadKeysRequest.prototype.getPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setPrefix = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool include_history = 2;\n * @return {boolean}\n */\nproto.colink.ReadKeysRequest.prototype.getIncludeHistory = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setIncludeHistory = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Participant.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Participant.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Participant} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    role: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Participant;\n  return proto.colink.Participant.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Participant} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Participant.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Participant.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Participant} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string user_id = 1;\n * @return {string}\n */\nproto.colink.Participant.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.colink.Participant.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setRole = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Decision.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Decision.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Decision} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    isApproved: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    isRejected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    reason: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    signature: msg.getSignature_asB64(),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Decision;\n  return proto.colink.Decision.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Decision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsApproved(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRejected(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReason(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 6:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Decision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Decision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIsApproved();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIsRejected();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getReason();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool is_approved = 1;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsApproved = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsApproved = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool is_rejected = 2;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsRejected = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsRejected = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional string reason = 3;\n * @return {string}\n */\nproto.colink.Decision.prototype.getReason = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setReason = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes signature = 4;\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes signature = 4;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 6;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.Decision.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 6));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.Decision} returns this\n*/\nproto.colink.Decision.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.Decision.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.Task.repeatedFields_ = [4,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Task.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Task.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Task} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    protocolName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    protocolParam: msg.getProtocolParam_asB64(),\n    participantsList: jspb.Message.toObjectList(msg.getParticipantsList(),\n    proto.colink.Participant.toObject, includeInstance),\n    parentTask: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    requireAgreement: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),\n    decisionsList: jspb.Message.toObjectList(msg.getDecisionsList(),\n    proto.colink.Decision.toObject, includeInstance),\n    status: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Task;\n  return proto.colink.Task.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Task} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProtocolParam(value);\n      break;\n    case 4:\n      var value = new proto.colink.Participant;\n      reader.readMessage(value,proto.colink.Participant.deserializeBinaryFromReader);\n      msg.addParticipants(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setParentTask(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequireAgreement(value);\n      break;\n    case 6:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.addDecisions(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Task.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Task} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getProtocolParam_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.colink.Participant.serializeBinaryToWriter\n    );\n  }\n  f = message.getParentTask();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getRequireAgreement();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getDecisionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.Task.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string protocol_name = 2;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProtocolParam()));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.getProtocolParam_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProtocolParam()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolParam = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * repeated Participant participants = 4;\n * @return {!Array<!proto.colink.Participant>}\n */\nproto.colink.Task.prototype.getParticipantsList = function() {\n  return /** @type{!Array<!proto.colink.Participant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Participant, 4));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Participant>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setParticipantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.colink.Participant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Participant}\n */\nproto.colink.Task.prototype.addParticipants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.colink.Participant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearParticipantsList = function() {\n  return this.setParticipantsList([]);\n};\n\n\n/**\n * optional string parent_task = 5;\n * @return {string}\n */\nproto.colink.Task.prototype.getParentTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setParentTask = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional bool require_agreement = 9;\n * @return {boolean}\n */\nproto.colink.Task.prototype.getRequireAgreement = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setRequireAgreement = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n/**\n * repeated Decision decisions = 6;\n * @return {!Array<!proto.colink.Decision>}\n */\nproto.colink.Task.prototype.getDecisionsList = function() {\n  return /** @type{!Array<!proto.colink.Decision>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Decision, 6));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Decision>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setDecisionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.colink.Decision=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Decision}\n */\nproto.colink.Task.prototype.addDecisions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.colink.Decision, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearDecisionsList = function() {\n  return this.setDecisionsList([]);\n};\n\n\n/**\n * optional string status = 7;\n * @return {string}\n */\nproto.colink.Task.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int64 expiration_time = 8;\n * @return {number}\n */\nproto.colink.Task.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ConfirmTaskRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ConfirmTaskRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ConfirmTaskRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    decision: (f = msg.getDecision()) && proto.colink.Decision.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ConfirmTaskRequest;\n  return proto.colink.ConfirmTaskRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ConfirmTaskRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.setDecision(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ConfirmTaskRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ConfirmTaskRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ConfirmTaskRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDecision();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.ConfirmTaskRequest.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Decision decision = 2;\n * @return {?proto.colink.Decision}\n */\nproto.colink.ConfirmTaskRequest.prototype.getDecision = function() {\n  return /** @type{?proto.colink.Decision} */ (\n    jspb.Message.getWrapperField(this, proto.colink.Decision, 2));\n};\n\n\n/**\n * @param {?proto.colink.Decision|undefined} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n*/\nproto.colink.ConfirmTaskRequest.prototype.setDecision = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.clearDecision = function() {\n  return this.setDecision(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.ConfirmTaskRequest.prototype.hasDecision = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.RequestInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.RequestInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.RequestInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mqUri: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    requestorIp: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.RequestInfoResponse;\n  return proto.colink.RequestInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.RequestInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMqUri(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequestorIp(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.RequestInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.RequestInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMqUri();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRequestorIp();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string mq_uri = 1;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getMqUri = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setMqUri = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string requestor_ip = 3;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getRequestorIp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setRequestorIp = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string version = 4;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscribeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscribeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    startTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscribeRequest;\n  return proto.colink.SubscribeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscribeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscribeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscribeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscribeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStartTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.SubscribeRequest.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 start_timestamp = 2;\n * @return {number}\n */\nproto.colink.SubscribeRequest.prototype.getStartTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setStartTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscriptionMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscriptionMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscriptionMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    changeType: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscriptionMessage;\n  return proto.colink.SubscriptionMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscriptionMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChangeType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscriptionMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscriptionMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChangeType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string change_type = 1;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getChangeType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setChangeType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.MQQueueName.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.MQQueueName.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.MQQueueName} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    queueName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.MQQueueName;\n  return proto.colink.MQQueueName.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.MQQueueName} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQueueName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.MQQueueName.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.MQQueueName.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.MQQueueName} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getQueueName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string queue_name = 1;\n * @return {string}\n */\nproto.colink.MQQueueName.prototype.getQueueName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.MQQueueName} returns this\n */\nproto.colink.MQQueueName.prototype.setQueueName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyPath: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    taskId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_path = 1;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string task_id = 2;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.CoLinkInternalTaskIDList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskIdsWithKeyPathsList: jspb.Message.toObjectList(msg.getTaskIdsWithKeyPathsList(),\n    proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDList;\n  return proto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n      reader.readMessage(value,proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader);\n      msg.addTaskIdsWithKeyPaths(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskIdsWithKeyPathsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CoLinkInternalTaskIDWithKeyPath task_ids_with_key_paths = 1;\n * @return {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.getTaskIdsWithKeyPathsList = function() {\n  return /** @type{!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.CoLinkInternalTaskIDWithKeyPath, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} value\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n*/\nproto.colink.CoLinkInternalTaskIDList.prototype.setTaskIdsWithKeyPathsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.addTaskIdsWithKeyPaths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.CoLinkInternalTaskIDWithKeyPath, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.clearTaskIdsWithKeyPathsList = function() {\n  return this.setTaskIdsWithKeyPathsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StartProtocolOperatorRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    protocolName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    userId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    upgrade: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StartProtocolOperatorRequest;\n  return proto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUpgrade(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StartProtocolOperatorRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpgrade();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string protocol_name = 1;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string user_id = 2;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool upgrade = 3;\n * @return {boolean}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUpgrade = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUpgrade = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ProtocolOperatorInstanceId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instanceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ProtocolOperatorInstanceId;\n  return proto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ProtocolOperatorInstanceId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstanceId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string instance_id = 1;\n * @return {string}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.getInstanceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ProtocolOperatorInstanceId} returns this\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.setInstanceId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.colink);\n","/**\n * @fileoverview gRPC-Web generated client stub for colink\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as proto_colink_pb from './colink_pb';\n\n\nexport class CoLinkClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname;\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorGenerateToken = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/GenerateToken',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.GenerateTokenRequest,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.GenerateTokenRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/GenerateToken',\n        request,\n        metadata || {},\n        this.methodDescriptorGenerateToken,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/GenerateToken',\n    request,\n    metadata || {},\n    this.methodDescriptorGenerateToken);\n  }\n\n  methodDescriptorImportUser = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ImportUser',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.UserConsent,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.UserConsent) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ImportUser',\n        request,\n        metadata || {},\n        this.methodDescriptorImportUser,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ImportUser',\n    request,\n    metadata || {},\n    this.methodDescriptorImportUser);\n  }\n\n  methodDescriptorCreateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateEntry);\n  }\n\n  methodDescriptorReadEntries = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadEntries',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntries,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.StorageEntries) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadEntries',\n        request,\n        metadata || {},\n        this.methodDescriptorReadEntries,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadEntries',\n    request,\n    metadata || {},\n    this.methodDescriptorReadEntries);\n  }\n\n  methodDescriptorUpdateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/UpdateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/UpdateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorUpdateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/UpdateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorUpdateEntry);\n  }\n\n  methodDescriptorDeleteEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/DeleteEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/DeleteEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorDeleteEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/DeleteEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorDeleteEntry);\n  }\n\n  methodDescriptorReadKeys = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadKeys',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ReadKeysRequest,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.ReadKeysRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadKeys',\n        request,\n        metadata || {},\n        this.methodDescriptorReadKeys,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadKeys',\n    request,\n    metadata || {},\n    this.methodDescriptorReadKeys);\n  }\n\n  methodDescriptorCreateTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateTask',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateTask',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateTask);\n  }\n\n  methodDescriptorConfirmTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ConfirmTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ConfirmTaskRequest,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ConfirmTaskRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ConfirmTask',\n        request,\n        metadata || {},\n        this.methodDescriptorConfirmTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ConfirmTask',\n    request,\n    metadata || {},\n    this.methodDescriptorConfirmTask);\n  }\n\n  methodDescriptorFinishTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/FinishTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/FinishTask',\n        request,\n        metadata || {},\n        this.methodDescriptorFinishTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/FinishTask',\n    request,\n    metadata || {},\n    this.methodDescriptorFinishTask);\n  }\n\n  methodDescriptorRequestInfo = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/RequestInfo',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Empty,\n    proto_colink_pb.RequestInfoResponse,\n    (request: proto_colink_pb.Empty) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.RequestInfoResponse.deserializeBinary\n  );\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void): grpcWeb.ClientReadableStream<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/RequestInfo',\n        request,\n        metadata || {},\n        this.methodDescriptorRequestInfo,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/RequestInfo',\n    request,\n    metadata || {},\n    this.methodDescriptorRequestInfo);\n  }\n\n  methodDescriptorSubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Subscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.SubscribeRequest,\n    proto_colink_pb.MQQueueName,\n    (request: proto_colink_pb.SubscribeRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.MQQueueName.deserializeBinary\n  );\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void): grpcWeb.ClientReadableStream<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Subscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorSubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Subscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorSubscribe);\n  }\n\n  methodDescriptorUnsubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Unsubscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.MQQueueName,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.MQQueueName) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Unsubscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorUnsubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Unsubscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorUnsubscribe);\n  }\n\n  methodDescriptorStartProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StartProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StartProtocolOperatorRequest,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    (request: proto_colink_pb.StartProtocolOperatorRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.ProtocolOperatorInstanceId.deserializeBinary\n  );\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void): grpcWeb.ClientReadableStream<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StartProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStartProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StartProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStartProtocolOperator);\n  }\n\n  methodDescriptorStopProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StopProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ProtocolOperatorInstanceId) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StopProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStopProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StopProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStopProtocolOperator);\n  }\n\n  methodDescriptorInterCoreSyncTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/InterCoreSyncTask',\n        request,\n        metadata || {},\n        this.methodDescriptorInterCoreSyncTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/InterCoreSyncTask',\n    request,\n    metadata || {},\n    this.methodDescriptorInterCoreSyncTask);\n  }\n\n  methodDescriptorInterCoreSyncTaskWithReverseConnection = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n    grpcWeb.MethodType.SERVER_STREAMING,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  interCoreSyncTaskWithReverseConnection(\n    request: proto_colink_pb.Task,\n    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<proto_colink_pb.Task> {\n    return this.client_.serverStreaming(\n      this.hostname_ +\n        '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n      request,\n      metadata || {},\n      this.methodDescriptorInterCoreSyncTaskWithReverseConnection);\n  }\n\n}\n\n","/* TEMPORARY FILE - will convert to npm package in the future via colink-sdk-a-js-dev */\n\nimport {\n  RequestInfoResponse,\n  Empty,\n  UserConsent,\n  Jwt,\n  GenerateTokenRequest,\n  StorageEntry,\n  StorageEntries,\n  ReadKeysRequest,\n} from './proto_js/colink_pb'\nimport { CoLinkClient } from './proto_js/ColinkServiceClientPb'\nimport secp256k1 from 'secp256k1'\nimport { Buffer } from 'buffer'\nimport crypto from 'crypto'\nimport { ethers } from 'ethers'\nimport { Metadata } from 'grpc-web'\n\n// Required for grpc-web on SSR\nglobal.XMLHttpRequest = require('xhr2')\n\n// Required for MetaMask wallet detection\ndeclare let window: any\n\n/* Utility functions */\nfunction getClient(input: string | CoLinkClient): CoLinkClient {\n  if (typeof input === 'string') {\n    return new CoLinkClient(input)\n  } else {\n    return input\n  }\n}\n\nfunction getMetadata(jwt: string): {} {\n  // set metadata with admin token\n  let meta = { authorization: jwt }\n  return meta\n}\n\nfunction getNameEntry(input: string | StorageEntry): StorageEntry {\n  if (typeof input === 'string') {\n    let entry: StorageEntry = new StorageEntry()\n    entry.setKeyName(input)\n    return entry\n  } else {\n    return input\n  }\n}\n\nfunction getUserId(jwt: string): string {\n  let encodedId: string = jwt.split('.')[1]\n  let userId: string = JSON.parse(Buffer.from(encodedId, 'base64').toString()).user_id\n  return userId\n}\n\nfunction i2hex(i: Uint8Array): string {\n  return Buffer.from(i).toString('hex')\n}\n\n/* Handles USER DATA (private keys, Jwts, etc) */\nexport class UserData {\n  privateKey: string\n  userJwt: string\n\n  constructor(pk: string, jwt: string) {\n    this.privateKey = pk\n    this.userJwt = jwt\n  }\n}\n\nexport class Consent {\n  consent: UserConsent\n\n  constructor(c: UserConsent) {\n    this.consent = c\n  }\n}\n\nasync function getUserConsentPK(\n  client: CoLinkClient,\n  meta: Metadata | null,\n  pubKey: Uint8Array,\n  privKey: Uint8Array,\n  expirationTimestamp?: number,\n): Promise<UserConsent> {\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeBuf: Buffer = Buffer.alloc(8)\n  sigTimeBuf.writeBigUInt64LE(BigInt(sigTime))\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n\n  let expTimeBuf: Buffer = Buffer.alloc(8)\n  expTimeBuf.writeBigUInt64LE(BigInt(expTime))\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: Uint8Array = response.getCorePublicKey_asU8()\n\n  // prep signature + request\n  let msg: Buffer = Buffer.concat([pubKey, sigTimeBuf, expTimeBuf, corePubKey])\n  let hash = crypto.createHash('sha256').update(msg).digest('hex')\n  let signature: Uint8Array = secp256k1.ecdsaSign(Buffer.from(hash, 'hex'), privKey).signature\n  let request: UserConsent = new UserConsent()\n  request.setPublicKey(pubKey)\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(signature)\n  request.setExpirationTimestamp(expTime)\n\n  return request\n}\n\nexport async function getUserConsentMM(\n  address: CoLinkClient | string,\n  meta: Metadata | null,\n  expirationTimestamp?: number,\n): Promise<Consent> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // connect to MetaMask wallet\n  if (!window.ethereum) throw new Error('No crypto wallet found. Please install it.')\n\n  await window.ethereum.request({\n    method: 'eth_requestAccounts',\n  })\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeStr: string = sigTime.toString()\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n  let expTimeStr: string = expTime.toString()\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: string = i2hex(response.getCorePublicKey_asU8())\n\n  // prep signature + request\n  let msg: string = `sigTime: ${sigTimeStr}\\nexpTime: ${expTimeStr}\\ncorePubKey: ${corePubKey}\\n`\n\n  let signature = await signer.signMessage(msg)\n  let sigBuf = Buffer.from(signature.slice(2), 'hex')\n\n  let request: UserConsent = new UserConsent()\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(sigBuf)\n  request.setExpirationTimestamp(expTime)\n\n  return new Consent(request)\n}\n\nexport async function generateKeyAndJwt(\n  address: string | CoLinkClient,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  let privateKey: string = Buffer.from(crypto.randomBytes(32)).toString('hex')\n  return generateJwtFromKey(address, privateKey, hostToken, expirationTimestamp)\n}\n\nexport async function generateJwtFromKey(\n  address: string | CoLinkClient,\n  privateKey: string,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n\n  // generate new (pubKey, privKey) pair with privateKey\n  let privKey: Uint8Array = Uint8Array.from(Buffer.from(privateKey, 'hex'))\n  let pubKey: Uint8Array = secp256k1.publicKeyCreate(privKey, true)\n\n  let request: UserConsent = await getUserConsentPK(\n    client,\n    meta,\n    pubKey,\n    privKey,\n    expirationTimestamp,\n  )\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client.importUser(request, meta).then((jwt: Jwt) => {\n    jwtToken = jwt.getJwt()\n  })\n\n  return Promise.resolve(new UserData(privateKey, jwtToken))\n}\n\nexport async function generateJwtMetaMask(\n  address: string | CoLinkClient,\n  hostToken: string,\n  consent?: Consent,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n  let request: UserConsent\n\n  if (typeof consent === 'undefined') {\n    request = (await getUserConsentMM(client, meta, expirationTimestamp)).consent\n  } else {\n    request = consent.consent\n  }\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client\n    .importUser(request, meta)\n    .then((jwt: Jwt) => {\n      jwtToken = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      alert(err)\n    })\n\n  return Promise.resolve(new UserData('', jwtToken))\n}\n\nexport async function generateToken(\n  address: string | CoLinkClient,\n  oldJwt: string,\n  consent?: Consent,\n  expirationTime?: number,\n): Promise<string> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  let meta: Metadata = getMetadata(oldJwt)\n\n  let request: GenerateTokenRequest = new GenerateTokenRequest()\n  if (typeof expirationTime !== 'undefined') {\n    request.setExpirationTime(expirationTime)\n  } else {\n    request.setExpirationTime(daysToTimestamp(31)) // 31 day default\n  }\n\n  if (typeof consent !== 'undefined') {\n    request.setUserConsent(consent.consent)\n  }\n\n  request.setPrivilege('user')\n\n  let newJwt: string = ''\n  await client\n    .generateToken(request, meta)\n    .then((jwt: Jwt) => {\n      newJwt = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return Promise.resolve(newJwt)\n}\n\nexport async function validateJwtAndPrivilege(\n  address: string | CoLinkClient,\n  jwt: string,\n): Promise<string> {\n  let meta = getMetadata(jwt)\n  let client: CoLinkClient = getClient(address)\n  let coreReq: Empty = new Empty()\n  try {\n    let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n    if (response.getMqUri().length > 0) {\n      return 'user'\n    } else {\n      return 'host'\n    }\n  } catch (err) {\n    return 'invalid'\n  }\n}\n\nexport function daysToTimestamp(days: number) {\n  let currentTime: number = parseInt((Date.now() / 1000).toFixed()) // convert milliseconds to seconds\n  return currentTime + 86400 * days\n}\n\n/* Handles STORAGE OPERATIONS (read, write, update, etc.) */\nexport function storageEntryToJSON(entry: StorageEntry, isString: boolean) {\n  let payload: string\n  if (isString) {\n    payload = new TextDecoder().decode(entry.getPayload_asU8())\n  } else {\n    payload = i2hex(entry.getPayload_asU8())\n  }\n  return {\n    name: keyNameFromPath(entry.getKeyPath()),\n    keyPath: entry.getKeyPath(),\n    payload: payload,\n  }\n}\n\nexport function keyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    return matches[1]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport function lastKeyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    let match: string = matches[1]\n    if (match.split(':').length === 1) {\n      return match\n    }\n    return match.split(':').slice(-1)[0]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport async function createEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  keyname: string,\n  payload: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  request.setKeyName(keyname)\n  request.setPayload(payload)\n\n  let meta = getMetadata(jwt)\n\n  let newEntry: StorageEntry = new StorageEntry()\n  await client\n    .createEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      newEntry = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(newEntry)\n}\n\nexport async function readEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  entry: string | StorageEntry,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n  let nameEntry: StorageEntry = getNameEntry(entry)\n\n  let request: StorageEntries = new StorageEntries()\n  request.addEntries(nameEntry)\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .readEntries(request, meta)\n    .then((entriesList: StorageEntries) => {\n      response = entriesList.getEntriesList()[0]\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function updateEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n  newContents: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n  request.setPayload(newContents)\n\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .updateEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      response = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function deleteEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n) {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n\n  let meta = getMetadata(jwt)\n\n  await client.deleteEntry(request, meta).catch((err: Error) => {\n    alert(err)\n  })\n}\n\nexport async function getUserStorageEntries(\n  address: string | CoLinkClient,\n  jwt: string,\n  prefix?: string,\n): Promise<StorageEntry[]> {\n  let client: CoLinkClient = getClient(address)\n\n  let entries: StorageEntry[] = []\n  let meta = getMetadata(jwt)\n\n  async function updateEntries(prefix: string): Promise<string[]> {\n    let req: ReadKeysRequest = new ReadKeysRequest()\n    req.setPrefix(prefix)\n    req.setIncludeHistory(false)\n\n    let newPrefixes: string[] = []\n    await client\n      .readKeys(req, meta)\n      .then((response) => {\n        let newEntries: StorageEntry[] = response.getEntriesList()\n        entries = entries.concat(newEntries)\n        newPrefixes = newEntries.map((entry: StorageEntry) => {\n          return prefix + ':' + lastKeyNameFromPath(entry.getKeyPath())\n        })\n      })\n      .catch((err) => {\n        alert(err)\n      })\n\n    return newPrefixes\n  }\n\n  let keyPrefixes: string[]\n  if (typeof prefix !== 'undefined') {\n    keyPrefixes = [prefix]\n  } else {\n    let userId: string = getUserId(jwt)\n    keyPrefixes = [userId + ':']\n  }\n\n  /* Generates all layers psuedo-recursively */\n  // while (keyPrefixes.length > 0) {\n  //     for (let prefix of keyPrefixes) {\n  //         let newKeys: string[] = await updateEntries(prefix);\n  //         keyPrefixes = keyPrefixes.concat(newKeys).slice(1);\n  //     }\n  // }\n\n  /* Generates one layer */\n  for (let prefix of keyPrefixes) {\n    keyPrefixes = keyPrefixes.concat(await updateEntries(prefix)).slice(1)\n  }\n\n  entries.sort((a, b) => {\n    return keyNameFromPath(a.getKeyPath()) < keyNameFromPath(b.getKeyPath()) ? -1 : 1\n  })\n  return Promise.resolve(entries)\n}\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CFormSelect,\n  CFormTextarea,\n  CInputGroup,\n  CInputGroupText,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilGlobeAlt, cilLockLocked, cilUser } from '@coreui/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setClient, setJwt, setAdmin, readFromFile } from 'src/utils'\nimport {\n  generateJwtMetaMask,\n  getUserConsentMM,\n  generateToken,\n  UserData,\n  Consent,\n  validateJwtAndPrivilege,\n} from 'src/lib'\n\nconst Login = () => {\n  const [visible, setVisible] = useState(false)\n  const [visibleMM, setVisibleMM] = useState(false)\n\n  const [address, setLocalAddress] = useState('')\n  const [localJwt, setLocalJwt] = useState('')\n  const [consentMM, setConsentMM] = useState({} as Consent)\n  const [localJwtMM, setLocalJwtMM] = useState('')\n\n  const { client } = useSelector((state: any) => state.client)\n  const dispatch = useDispatch()\n\n  async function loginWithJwt(jwt: string) {\n    await validateJwtAndPrivilege(client, jwt).then((status: string) => {\n      if (status !== 'invalid') {\n        dispatch(setJwt(jwt))\n        localStorage.setItem('jwt', jwt)\n        if (status === 'user') {\n          dispatch(setAdmin(false))\n          localStorage.setItem('isAdmin', 'false')\n        } else {\n          dispatch(setAdmin(true))\n          localStorage.setItem('isAdmin', 'true')\n        }\n      } else {\n        alert('Error: Invalid JWT or hostname.')\n      }\n    })\n  }\n\n  async function loginWithMetaMask() {\n    let consent: Consent = await getUserConsentMM(client, { authorization: '' })\n    await generateToken(client, '', consent)\n      .then((token: string) => {\n        loginWithJwt(token)\n      })\n      .catch(async (err: Error) => {\n        setConsentMM(consent)\n        setVisibleMM(true)\n      })\n  }\n\n  async function createMetaMask(jwt: string) {\n    await generateJwtMetaMask(client, jwt, consentMM)\n      .then((data: UserData) => {\n        loginWithJwt(data.userJwt)\n        setVisibleMM(false)\n        setVisible(false)\n      })\n      .catch((err: Error) => {\n        alert(err)\n      })\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={5}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody className=\"text-center\">\n                  <CForm>\n                    <h1 className=\"mb-3\">Welcome to CoLink</h1>\n                    <p className=\"text-medium-emphasis mb-3\">\n                      Connect to one of our default CoLink servers, or specify your own address\n                      below!\n                    </p>\n                    <hr />\n                    <h4>Official Servers</h4>\n                    <CInputGroup className=\"mb-3\" style={{ width: '80%', marginLeft: '10%' }}>\n                      <CInputGroupText>\n                        <CIcon icon={cilGlobeAlt} />\n                      </CInputGroupText>\n                      <CFormSelect\n                        className=\"mx-auto\"\n                        style={{ width: '80%' }}\n                        aria-label=\"Default select\"\n                        options={[\n                          { label: '' },\n                          {\n                            label: 'https://test-1.colink-server.colearn.cloud/',\n                            value: 'https://test-1.colink-server.colearn.cloud/',\n                          },\n                          {\n                            label: 'https://test-2.colink-server.colearn.cloud/',\n                            value: 'https://test-2.colink-server.colearn.cloud/',\n                          },\n                        ]}\n                        onChange={(e) => {\n                          setLocalAddress(e.target.value)\n                        }}\n                      />\n                    </CInputGroup>\n                    <h4>Custom Address</h4>\n                    <CInputGroup className=\"mb-3\" style={{ width: '80%', marginLeft: '10%' }}>\n                      <CInputGroupText>\n                        <CIcon icon={cilGlobeAlt} />\n                      </CInputGroupText>\n                      <CFormInput\n                        placeholder=\"Custom Address\"\n                        onChange={(e) => {\n                          setLocalAddress(e.target.value)\n                        }}\n                      />\n                    </CInputGroup>\n                  </CForm>\n                  <CButton\n                    color=\"primary\"\n                    active\n                    tabIndex={-1}\n                    onClick={() => {\n                      setVisible(!visible)\n                      dispatch(setClient(address))\n                      localStorage.setItem('address', address)\n                    }}\n                  >\n                    Connect\n                  </CButton>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n\n      <CModal\n        size=\"xl\"\n        backdrop=\"static\"\n        visible={visible}\n        onClose={() => setVisible(false)}\n        alignment=\"center\"\n      >\n        <CModalHeader>\n          <CModalTitle>Specify your JWT or use Metamask to connect to the server.</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CCardGroup>\n            <CCard className=\"p-4\">\n              <CCardBody className=\"text-center\">\n                <CForm>\n                  <h2>JWT</h2>\n                  <p className=\"mt-3 text-medium-emphasis\">\n                    Upload your JWT as a text file or manually paste it in the box below.\n                  </p>\n                  <div className=\"mb-3\">\n                    <CFormInput\n                      style={{ width: '55%' }}\n                      className=\"mx-auto\"\n                      type=\"file\"\n                      id=\"formFile\"\n                      onChange={(e) => {\n                        readFromFile(e, setLocalJwt)\n                      }}\n                    />\n                  </div>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>JWT</CInputGroupText>\n                    <CFormTextarea\n                      aria-label=\"text input\"\n                      style={{ resize: 'none', height: '150px' }}\n                      value={localJwt}\n                      onChange={(e) => {\n                        setLocalJwt(e.target.value)\n                      }}\n                    ></CFormTextarea>\n                  </CInputGroup>\n                </CForm>\n                <CButton\n                  color=\"primary\"\n                  active\n                  tabIndex={-1}\n                  onClick={() => loginWithJwt(localJwt)}\n                >\n                  Confirm\n                </CButton>\n              </CCardBody>\n            </CCard>\n            <CCard className=\"p-4\" style={{ width: '30%' }}>\n              <CCardBody className=\"text-center\">\n                <div>\n                  <h2>Metamask</h2>\n                  <p className=\"mt-3 mb-3 text-medium-emphasis\">\n                    Connect your Metamask wallet using the button below. <br /> Note: if you have\n                    not registered a Metamask account, you must provide an admin JWT to register it.\n                  </p>\n                  <CButton active tabIndex={-1} onClick={() => loginWithMetaMask()}>\n                    Connect Wallet\n                  </CButton>\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCardGroup>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      <CModal\n        size=\"lg\"\n        backdrop=\"static\"\n        style={{ maxWidth: '75%', marginLeft: '12.5%' }}\n        visible={visibleMM}\n        onClose={() => setVisibleMM(false)}\n        alignment=\"center\"\n      >\n        <CModalHeader>\n          <CModalTitle>Account not Registered</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <CCardGroup>\n            <CCard className=\"p-4\">\n              <CCardBody className=\"text-center\">\n                <CForm>\n                  <h2>JWT</h2>\n                  <p className=\"mt-3 text-medium-emphasis\">\n                    Provide an admin JWT to register your new MetaMask account!\n                  </p>\n                  <div className=\"mb-3\">\n                    <CFormInput\n                      style={{ width: '55%' }}\n                      className=\"mx-auto\"\n                      type=\"file\"\n                      id=\"formFile\"\n                      onChange={(e) => {\n                        readFromFile(e, setLocalJwtMM)\n                      }}\n                    />\n                  </div>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupText>JWT</CInputGroupText>\n                    <CFormTextarea\n                      aria-label=\"text input\"\n                      style={{ resize: 'none', height: '100px' }}\n                      value={localJwtMM}\n                      onChange={(e) => {\n                        setLocalJwtMM(e.target.value)\n                      }}\n                    ></CFormTextarea>\n                  </CInputGroup>\n                </CForm>\n                <CButton\n                  color=\"primary\"\n                  active\n                  tabIndex={-1}\n                  onClick={() => createMetaMask(localJwtMM)}\n                >\n                  Confirm\n                </CButton>\n              </CCardBody>\n            </CCard>\n          </CCardGroup>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["jspb","require","goog","global","this","window","self","Function","call","exportSymbol","proto","colink","Empty","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ListOfString","repeatedFields_","ListOfBytes","ListOfInt64","ListOfFloat","ListOfBool","Jwt","StorageEntry","StorageEntries","GenerateTokenRequest","UserConsent","ReadKeysRequest","Participant","Decision","Task","ConfirmTaskRequest","RequestInfoResponse","SubscribeRequest","SubscriptionMessage","MQQueueName","CoLinkInternalTaskIDWithKeyPath","CoLinkInternalTaskIDList","StartProtocolOperatorRequest","ProtocolOperatorInstanceId","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","listList","getRepeatedField","undefined","value","readString","addList","getListList","length","writeRepeatedString","setListList","setField","opt_index","addToRepeatedField","clearListList","getListList_asB64","readBytes","getListList_asU8","writeRepeatedBytes","bytesListAsB64","bytesListAsU8","values","isDelimited","readPackedInt64","readInt64","i","writePackedInt64","getRepeatedFloatingPointField","readPackedFloat","readFloat","writePackedFloat","getRepeatedBooleanField","readPackedBool","readBool","writePackedBool","jwt","getFieldWithDefault","setJwt","getJwt","writeString","setProto3StringField","keyName","keyPath","payload","getPayload_asB64","setKeyName","setKeyPath","setPayload","getKeyName","getKeyPath","getPayload_asU8","writeBytes","getPayload","bytesAsB64","bytesAsU8","setProto3BytesField","entriesList","toObjectList","getEntriesList","readMessage","addEntries","writeRepeatedMessage","getRepeatedWrapperField","setEntriesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearEntriesList","expirationTime","privilege","userConsent","getUserConsent","setExpirationTime","setPrivilege","setUserConsent","getExpirationTime","writeInt64","getPrivilege","writeMessage","setProto3IntField","getWrapperField","setWrapperField","clearUserConsent","hasUserConsent","getField","publicKey","getPublicKey_asB64","signatureTimestamp","expirationTimestamp","signature","getSignature_asB64","setPublicKey","setSignatureTimestamp","setExpirationTimestamp","setSignature","getPublicKey_asU8","getSignatureTimestamp","getExpirationTimestamp","getSignature_asU8","getPublicKey","getSignature","prefix","includeHistory","getBooleanFieldWithDefault","setPrefix","setIncludeHistory","getPrefix","getIncludeHistory","writeBool","setProto3BooleanField","userId","role","setUserId","setRole","getUserId","getRole","isApproved","isRejected","reason","corePublicKey","getCorePublicKey_asB64","setIsApproved","setIsRejected","setReason","setCorePublicKey","getIsApproved","getIsRejected","getReason","getCorePublicKey_asU8","getCorePublicKey","taskId","protocolName","protocolParam","getProtocolParam_asB64","participantsList","getParticipantsList","parentTask","requireAgreement","decisionsList","getDecisionsList","status","setTaskId","setProtocolName","setProtocolParam","addParticipants","setParentTask","setRequireAgreement","addDecisions","setStatus","getTaskId","getProtocolName","getProtocolParam_asU8","getParentTask","getRequireAgreement","getStatus","getProtocolParam","setParticipantsList","clearParticipantsList","setDecisionsList","clearDecisionsList","decision","getDecision","setDecision","clearDecision","hasDecision","mqUri","requestorIp","version","setMqUri","setRequestorIp","setVersion","getMqUri","getRequestorIp","getVersion","startTimestamp","setStartTimestamp","getStartTimestamp","changeType","setChangeType","getChangeType","queueName","setQueueName","getQueueName","taskIdsWithKeyPathsList","getTaskIdsWithKeyPathsList","addTaskIdsWithKeyPaths","setTaskIdsWithKeyPathsList","clearTaskIdsWithKeyPathsList","upgrade","setUpgrade","getUpgrade","instanceId","setInstanceId","getInstanceId","object","extend","exports","CoLinkClient","hostname","credentials","options","client_","hostname_","credentials_","options_","methodDescriptorGenerateToken","grpcWeb","proto_colink_pb","request","methodDescriptorImportUser","methodDescriptorCreateEntry","methodDescriptorReadEntries","methodDescriptorUpdateEntry","methodDescriptorDeleteEntry","methodDescriptorReadKeys","methodDescriptorCreateTask","methodDescriptorConfirmTask","methodDescriptorFinishTask","methodDescriptorRequestInfo","methodDescriptorSubscribe","methodDescriptorUnsubscribe","methodDescriptorStartProtocolOperator","methodDescriptorStopProtocolOperator","methodDescriptorInterCoreSyncTask","methodDescriptorInterCoreSyncTaskWithReverseConnection","metadata","callback","rpcCall","unaryCall","serverStreaming","getClient","input","getMetadata","authorization","i2hex","Buffer","toString","XMLHttpRequest","UserData","pk","privateKey","userJwt","Consent","c","consent","getUserConsentMM","address","meta","client","ethereum","Error","method","provider","ethers","signer","getSigner","sigTime","parseInt","Date","now","toFixed","sigTimeStr","expTimeStr","expTime","coreReq","requestInfo","response","corePubKey","signMessage","sigBuf","slice","generateJwtMetaMask","hostToken","jwtToken","importUser","then","catch","err","alert","Promise","resolve","generateToken","oldJwt","daysToTimestamp","newJwt","validateJwtAndPrivilege","days","useState","visible","setVisible","visibleMM","setVisibleMM","setLocalAddress","localJwt","setLocalJwt","consentMM","setConsentMM","localJwtMM","setLocalJwtMM","useSelector","state","dispatch","useDispatch","loginWithJwt","localStorage","setItem","setAdmin","token","data","className","md","style","width","marginLeft","icon","cilGlobeAlt","label","onChange","e","target","placeholder","color","active","tabIndex","onClick","setClient","size","backdrop","onClose","alignment","type","id","readFromFile","resize","height","loginWithMetaMask","maxWidth","createMetaMask"],"sourceRoot":""}