{"version":3,"file":"static/js/252.1d3f632c.chunk.js","mappings":"8eAiBaA,EAAY,WAMvB,WAAaC,EACAC,EACAC,IAA6C,oBAP1DC,aAAO,OACPC,eAAS,OACTC,kBAAY,OACZC,cAAQ,OAeRC,8BAAgC,IAAIC,EAAAA,iBAClC,+BACAA,EAAAA,WAAAA,MACAC,EAAAA,qBACAA,EAAAA,KACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,IAAAA,mBACA,KAkCFG,2BAA6B,IAAIJ,EAAAA,iBAC/B,4BACAA,EAAAA,WAAAA,MACAC,EAAAA,YACAA,EAAAA,KACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,IAAAA,mBACA,KAkCFI,4BAA8B,IAAIL,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,aACAA,EAAAA,cACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,aAAAA,mBACA,KAkCFK,4BAA8B,IAAIN,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,eACAA,EAAAA,gBACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,eAAAA,mBACA,KAkCFM,4BAA8B,IAAIP,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,aACAA,EAAAA,cACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,aAAAA,mBACA,KAkCFO,4BAA8B,IAAIR,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,aACAA,EAAAA,cACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,aAAAA,mBACA,KAkCFQ,yBAA2B,IAAIT,EAAAA,iBAC7B,0BACAA,EAAAA,WAAAA,MACAC,EAAAA,gBACAA,EAAAA,gBACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,eAAAA,mBACA,KAkCFS,2BAA6B,IAAIV,EAAAA,iBAC/B,4BACAA,EAAAA,WAAAA,MACAC,EAAAA,KACAA,EAAAA,MACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,KAAAA,mBACA,KAkCFU,4BAA8B,IAAIX,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,mBACAA,EAAAA,OACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,MAAAA,mBACA,KAkCFW,2BAA6B,IAAIZ,EAAAA,iBAC/B,4BACAA,EAAAA,WAAAA,MACAC,EAAAA,KACAA,EAAAA,OACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,MAAAA,mBACA,KAkCFY,4BAA8B,IAAIb,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,MACAA,EAAAA,qBACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,oBAAAA,mBACA,KAkCFa,0BAA4B,IAAId,EAAAA,iBAC9B,2BACAA,EAAAA,WAAAA,MACAC,EAAAA,iBACAA,EAAAA,aACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,YAAAA,mBACA,KAkCFc,4BAA8B,IAAIf,EAAAA,iBAChC,6BACAA,EAAAA,WAAAA,MACAC,EAAAA,YACAA,EAAAA,OACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,MAAAA,mBACA,KAkCFe,sCAAwC,IAAIhB,EAAAA,iBAC1C,uCACAA,EAAAA,WAAAA,MACAC,EAAAA,6BACAA,EAAAA,4BACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,2BAAAA,mBACA,KAkCFgB,qCAAuC,IAAIjB,EAAAA,iBACzC,sCACAA,EAAAA,WAAAA,MACAC,EAAAA,2BACAA,EAAAA,OACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,MAAAA,mBACA,KAkCFiB,kCAAoC,IAAIlB,EAAAA,iBACtC,mCACAA,EAAAA,WAAAA,MACAC,EAAAA,KACAA,EAAAA,OACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,MAAAA,mBACA,KAkCFkB,uDAAyD,IAAInB,EAAAA,iBAC3D,wDACAA,EAAAA,WAAAA,iBACAC,EAAAA,KACAA,EAAAA,MACA,SAACC,GACC,OAAOA,EAAQC,iBACjB,GACAF,EAAAA,KAAAA,mBAlsBKP,IAASA,EAAU,CAAC,GACpBD,IAAaA,EAAc,CAAC,GACjCC,EAAgB,OAAI,OAEpB0B,KAAKzB,QAAU,IAAIK,EAAAA,kBAA0BN,GAC7C0B,KAAKxB,UAAYJ,EACjB4B,KAAKvB,aAAeJ,EACpB2B,KAAKtB,SAAWJ,CAClB,CAssBC,OAtsBA,qCAuBD,SACEQ,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,+BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKrB,8BACLuB,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,+BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKrB,8BACP,GAAC,wBAuBD,SACEG,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKhB,2BACLkB,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKhB,2BACP,GAAC,yBAuBD,SACEF,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKf,4BACLiB,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKf,4BACP,GAAC,yBAuBD,SACEH,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKd,4BACLgB,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKd,4BACP,GAAC,yBAuBD,SACEJ,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKb,4BACLe,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKb,4BACP,GAAC,yBAuBD,SACEL,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKZ,4BACLc,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKZ,4BACP,GAAC,sBAuBD,SACEN,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,0BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKX,yBACLa,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,0BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKX,yBACP,GAAC,wBAuBD,SACEP,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKV,2BACLY,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKV,2BACP,GAAC,yBAuBD,SACER,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKT,4BACLW,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKT,4BACP,GAAC,wBAuBD,SACET,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKR,2BACLU,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,4BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKR,2BACP,GAAC,yBAuBD,SACEV,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKP,4BACLS,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKP,4BACP,GAAC,uBAuBD,SACEX,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,2BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKN,0BACLQ,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,2BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKN,0BACP,GAAC,yBAuBD,SACEZ,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKL,4BACLO,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,6BACFM,EACAmB,GAAY,CAAC,EACbD,KAAKL,4BACP,GAAC,mCAuBD,SACEb,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,uCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKJ,sCACLM,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,uCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKJ,sCACP,GAAC,kCAuBD,SACEd,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,sCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKH,qCACLK,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,sCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKH,qCACP,GAAC,+BAuBD,SACEf,EACAmB,EACAC,GAEA,YAAiBC,IAAbD,EACKF,KAAKzB,QAAQ6B,QAClBJ,KAAKxB,UACH,mCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKF,kCACLI,GAEGF,KAAKzB,QAAQ8B,UACpBL,KAAKxB,UACH,mCACFM,EACAmB,GAAY,CAAC,EACbD,KAAKF,kCACP,GAAC,oDAaD,SACEhB,EACAmB,GACA,OAAOD,KAAKzB,QAAQ+B,gBAClBN,KAAKxB,UACH,wDACFM,EACAmB,GAAY,CAAC,EACbD,KAAKD,uDACT,KAAC,EAvtBsB,G,4DCSzB,SAASQ,EAAUC,GACjB,MAAqB,kBAAVA,EACF,IAAIrC,EAAaqC,GAEjBA,CAEX,CAEO,SAAeC,EAAa,GAAD,+BAmBjC,8CAnBM,WAA4BD,GAA4B,gFAS7B,OAN9BE,EADmB,kBAAVF,EACA,IAAIrC,EAAaqC,GAEjBA,EAGPG,GAAoB,EACpBC,EAAiB,IAAIC,EAAAA,MAAO,SAC1BH,EACHI,YAAYF,EAASG,EAAY,KACjCC,MAAK,SAACC,GACLN,GAAW,CACb,IACCO,OAAM,SAACC,GACNR,GAAW,CACb,IAAE,gCACGS,QAAQC,QAAQV,IAAS,4CACjC,sBAED,SAASI,EAAYO,GAGnB,MADW,CAAEC,cAAeD,EAE9B,CAEA,SAASE,EAAahB,GACpB,GAAqB,kBAAVA,EAAoB,CAC7B,IAAIiB,EAAsB,IAAIC,EAAAA,aAE9B,OADAD,EAAME,WAAWnB,GACViB,CACT,CACE,OAAOjB,CAEX,CAEO,SAASoB,EAAUN,GACxB,IAAIO,EAAoBP,EAAIQ,MAAM,KAAK,GAEvC,OADqBC,KAAKC,MAAMC,EAAAA,GAAAA,KAAYJ,EAAW,UAAUK,YAAYC,OAE/E,CAvDAC,EAAAA,EAAOC,eAAiBC,EAAQ,OA8DzB,IAAMC,GAAQ,QAInB,WAAYC,EAAYlB,IAAc,oBAHtCmB,gBAAU,OACVC,aAAO,EAGL1C,KAAKyC,WAAaD,EAClBxC,KAAK0C,QAAUpB,CACjB,IAGWqB,GAAO,QAGlB,WAAYC,IAAiB,oBAF7BC,aAAO,EAGL7C,KAAK6C,QAAUD,CACjB,IACD,SAEcE,EAAiB,EAAD,qDAsC9B,OAtC8B,0BAA/B,WACEpC,EACAqC,EACAC,EACAC,EACAC,GAA4B,gGAkBI,OAf5BC,EAAkBC,UAAUC,KAAKC,MAAQ,KAAMC,YAC/CC,EAAqBvB,EAAAA,GAAAA,MAAa,IAC3BwB,iBAAiBC,OAAOP,IAIjCQ,EADiC,qBAAxBT,GAA+D,IAAxBA,EACtCA,EAEAC,EAAU,SAGlBS,EAAqB3B,EAAAA,GAAAA,MAAa,IAC3BwB,iBAAiBC,OAAOC,IAG/B/C,EAAiB,IAAIC,EAAAA,MAAO,SACUH,EAAOI,YAAYF,EAASmC,GAAK,OAWpC,OAXnCpC,EAA6B,OAC7BkD,EAAyBlD,EAASmD,wBAGlCC,EAAc9B,EAAAA,GAAAA,OAAc,CAACe,EAAQQ,EAAYI,EAAYC,IAC7DG,EAAOC,IAAAA,WAAkB,UAAUC,OAAOH,GAAKI,OAAO,OACtDC,EAAwBC,IAAAA,UAAoBpC,EAAAA,GAAAA,KAAY+B,EAAM,OAAQf,GAASmB,WAC/EtF,EAAuB,IAAIwF,EAAAA,aACvBC,aAAavB,GACrBlE,EAAQ0F,sBAAsBrB,GAC9BrE,EAAQ2F,aAAaL,GACrBtF,EAAQ4F,uBAAuBf,GAAQ,kBAEhC7E,GAAO,6CACf,sBAEM,SAAe6F,EAAiB,EAAD,oCA+CrC,8CA/CM,WACLC,EACA7B,EACAG,GAA4B,sGAK5B,GAFIxC,EAAuBH,EAAUqE,GAGhCC,OAAOC,SAAS,CAAD,qBAAQ,IAAIC,MAAM,8CAA6C,uBAE7EF,OAAOC,SAAShG,QAAQ,CAC5BkG,OAAQ,wBACR,OAkB8B,OAhB1BC,EAAW,IAAIC,EAAAA,EAA8BL,OAAOC,UACpDK,EAASF,EAASG,YAGpBjC,EAAkBC,UAAUC,KAAKC,MAAQ,KAAMC,WAC/C8B,EAAqBlC,EAAQjB,WAQ7BoD,GAJF3B,EADiC,qBAAxBT,GAA+D,IAAxBA,EACtCA,EAEAC,EAAU,SAEWjB,WAG7BtB,EAAiB,IAAIC,EAAAA,MAAO,UACUH,EAAOI,YAAYF,EAASmC,GAAK,QAIgB,OAJvFpC,EAA6B,OA/FpB4E,EAgGkB5E,EAASmD,wBAApCD,EA/FG5B,EAAAA,GAAAA,KAAYsD,GAAGrD,SAAS,OAkG3B6B,EAAW,mBAAesB,EAAU,sBAAcC,EAAU,yBAAiBzB,EAAU,gBAErEsB,EAAOK,YAAYzB,GAAI,QAMN,OANnCK,EAAS,OACTqB,EAASxD,EAAAA,GAAAA,KAAYmC,EAAUsB,MAAM,GAAI,QAEzC5G,EAAuB,IAAIwF,EAAAA,aACvBE,sBAAsBrB,GAC9BrE,EAAQ2F,aAAagB,GACrB3G,EAAQ4F,uBAAuBf,GAAQ,kBAEhC,IAAIhB,EAAQ7D,IAAQ,kCA7G7B,IAAeyG,CA6Gc,WAC5B,sBAEM,SAAeI,EAAkB,EAAD,oCAQtC,8CARM,WACLf,EACAgB,EACA1C,GAA4B,4EAGgD,OAD5E2C,QAAQC,IAAI7B,KACRxB,EAAqBR,EAAAA,GAAAA,KAAYgC,IAAAA,YAAmB,KAAK/B,SAAS,OAAM,kBACrE6D,EAAmBnB,EAASnC,EAAYmD,EAAW1C,IAAoB,4CAC/E,sBAEM,SAAe6C,EAAmB,EAAD,sCA+BvC,8CA/BM,WACLnB,EACAnC,EACAmD,EACA1C,GAA4B,sFAUqC,OAP7DxC,EAAuBH,EAAUqE,GAGjC7B,EAAiBhC,EAAY6E,GAG7B3C,EAAsB+C,WAAWC,KAAKhE,EAAAA,GAAAA,KAAYQ,EAAY,QAC9DO,EAAqBqB,IAAAA,gBAA0BpB,GAAS,GAAK,SAEhCH,EAC/BpC,EACAqC,EACAC,EACAC,EACAC,GACD,OAGwB,OATrBpE,EAAoB,OASpBoH,EAAmB,GAAE,UACnBxF,EAAOyF,WAAWrH,EAASiE,GAAM/B,MAAK,SAACM,GAC3C4E,EAAW5E,EAAI8E,QACjB,IAAE,iCAEKhF,QAAQC,QAAQ,IAAIkB,EAASE,EAAYyD,KAAU,6CAC3D,sBAEM,SAAeG,EAAoB,EAAD,sCA+BxC,8CA/BM,WACLzB,EACAgB,EACA/C,EACAK,GAA4B,kFAMe,GAHvCxC,EAAuBH,EAAUqE,GAGjC7B,EAAiBhC,EAAY6E,GAGV,qBAAZ/C,EAAuB,gCACf8B,EAAiBjE,EAAQqC,EAAMG,GAAoB,OAApEpE,EAAO,OAA+D+D,QAAO,sBAE7E/D,EAAU+D,EAAQA,QAAO,OAIF,OAArBqD,EAAmB,GAAE,UACnBxF,EACHyF,WAAWrH,EAASiE,GACpB/B,MAAK,SAACM,GACL4E,EAAW5E,EAAI8E,QACjB,IACClF,OAAM,SAACC,GACNmF,MAAMnF,EACR,IAAE,iCAEGC,QAAQC,QAAQ,IAAIkB,EAAS,GAAI2D,KAAU,6CACnD,sBAEM,SAAeK,EAAc,EAAD,sCAkClC,8CAlCM,WACL3B,EACA4B,EACA3D,EACA4D,GAAuB,kFAoBA,OAjBnB/F,EAAuBH,EAAUqE,GAEjC7B,EAAiBhC,EAAYyF,GAE7B1H,EAAgC,IAAI4H,EAAAA,qBACV,qBAAnBD,EACT3H,EAAQ6H,kBAAkBF,GAE1B3H,EAAQ6H,kBAAkBC,EAAgB,KAGrB,qBAAZ/D,GACT/D,EAAQ+H,eAAehE,EAAQA,SAGjC/D,EAAQgI,aAAa,QAEjBC,EAAiB,GAAE,SACjBrG,EACH6F,cAAczH,EAASiE,GACvB/B,MAAK,SAACM,GACLyF,EAASzF,EAAI8E,QACf,IACClF,OAAM,SAACC,GACN,MAAMA,CACR,IAAE,gCACGC,QAAQC,QAAQ0F,IAAO,6CAC/B,sBAEM,SAAeC,EAAwB,EAAD,kCAiB5C,8CAjBM,WACLpC,EACAtD,GAAW,gFAIqB,OAF5ByB,EAAOhC,EAAYO,GACnBZ,EAAuBH,EAAUqE,GACjChE,EAAiB,IAAIC,EAAAA,MAAO,kBAEYH,EAAOI,YAAYF,EAASmC,GAAK,OAA1C,YACpBkE,WAAWC,OAAS,GAAC,0CACzB,QAAM,iCAEN,QAAM,mFAGR,WAAS,2DAEnB,sBAEM,SAASN,EAAgBO,GAE9B,OAD0B/D,UAAUC,KAAKC,MAAQ,KAAMC,WAClC,MAAQ4D,CAC/B,CAGO,SAASC,EAAmB3F,EAAqB4F,GAMtD,IAAIC,EACJ,GAAmB,IAAfD,EACFC,EAAU7F,EACP8F,kBACAC,QAAO,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKxF,SAAS,GAAGyF,SAAS,EAAG,IAAI,GAAE,SAC7D,GAAmB,IAAfN,EACTC,EAAU7F,EAAMmG,wBAEhB,IACEN,EAAUO,KAAKpG,EAAMmG,mBAGvB,CAFE,SACAN,EAAU,aACZ,CAGF,MAAO,CACLQ,KAAMC,EAAgBtG,EAAMuG,cAC5BC,QAASxG,EAAMuG,aACfV,QAASA,EAEb,CAEO,SAASS,EAAgBE,GAC9B,IACIC,EAAUD,EAAQE,MADN,WAEhB,GAAe,MAAXD,EACF,OAAOA,EAAQ,GAEjB,MAAMnD,MAAM,2BACd,CAEO,SAASqD,EAAoBH,GAClC,IACIC,EAAUD,EAAQE,MADN,WAEhB,GAAe,MAAXD,EAAiB,CACnB,IAAIC,EAAgBD,EAAQ,GAC5B,OAAgC,IAA5BC,EAAMrG,MAAM,KAAKoF,OACZiB,EAEFA,EAAMrG,MAAM,KAAK4D,OAAO,GAAG,EACpC,CACA,MAAMX,MAAM,2BACd,CA4BO,SAAesD,EAAU,EAAD,oCAsB9B,8CAtBM,WACLzD,EACAtD,EACAG,GAA4B,oFASmB,OAP3Cf,EAAuBH,EAAUqE,GACjC0D,EAA0B9G,EAAaC,IAEvC3C,EAA0B,IAAIyJ,EAAAA,gBAC1BC,WAAWF,GACfvF,EAAOhC,EAAYO,GAEnBX,EAAyB,IAAIe,EAAAA,aAAc,SACzChB,EACH+H,YAAY3J,EAASiE,GACrB/B,MAAK,SAAC0H,GACL/H,EAAW+H,EAAYC,iBAAiB,EAC1C,IACCzH,OAAM,SAACC,GACNmF,MAAMnF,EACR,IAAE,gCACGC,QAAQC,QAAQV,IAAS,4CACjC,sBAqDM,SAAeiI,EAAsB,EAAD,oCAyD1C,8CAzDM,WACLhE,EACAtD,EACAuH,GAAe,UAOAC,EAAa,+FAoB3B,OApB2B,0BAA5B,WAA6BD,GAAc,8EAKX,OAJ1BE,EAAuB,IAAIC,EAAAA,iBAC3BC,UAAUJ,GACdE,EAAIG,mBAAkB,GAElBC,EAAwB,GAAE,SACxBzI,EACH0I,SAASL,EAAKhG,GACd/B,MAAK,SAACL,GACL,IAAI0I,EAA6B1I,EAASgI,iBAC1CW,EAAUA,EAAQC,OAAOF,GACzBF,EAAcE,EAAWG,KAAI,SAAC/H,GAC5B,OAAOoH,EAAS,IAAMT,EAAoB3G,EAAMuG,aAClD,GACF,IACC9G,OAAM,SAACC,GACNmF,MAAMnF,EACR,IAAE,gCAEGgI,GAAW,2CACnB,yBApBcL,EAAa,4CALxBpI,EAAuBH,EAAUqE,GAEjC0E,EAA0B,GAC1BvG,EAAOhC,EAAYO,GAyBD,qBAAXuH,EACTY,EAAc,CAACZ,IAEXa,EAAiB9H,EAAUN,GAC/BmI,EAAc,CAACC,EAAS,MAWD,GAAzB,OACmBD,GAAW,yDACH,OADlBZ,EAAM,aACCY,EAAW,UAAcX,EAAcD,GAAO,oBAA5DY,EAAW,KAAeF,OAAM,gBAA8B7D,MAAM,GAAC,+IAKrE,OAFF4D,EAAQK,MAAK,SAACC,EAAGC,GACf,OAAO9B,EAAgB6B,EAAE5B,cAAgBD,EAAgB8B,EAAE7B,eAAiB,EAAI,CAClF,IAAE,kBACK5G,QAAQC,QAAQiI,IAAQ,gEAChC,wB,wBCzgBD,IAAIQ,EAAOxH,EAAQ,OACfyH,EAAOD,EACP1H,EAAU,WAAa,OAAOpC,MAAQ6E,QAAUzC,GAAU4H,MAAQC,SAAS,cAATA,EAA2B,EAAGC,KAAK,MAEzGH,EAAKI,aAAa,wCAAyC,KAAM/H,GACjE2H,EAAKI,aAAa,+CAAgD,KAAM/H,GACxE2H,EAAKI,aAAa,kCAAmC,KAAM/H,GAC3D2H,EAAKI,aAAa,wBAAyB,KAAM/H,GACjD2H,EAAKI,aAAa,qBAAsB,KAAM/H,GAC9C2H,EAAKI,aAAa,oCAAqC,KAAM/H,GAC7D2H,EAAKI,aAAa,mBAAoB,KAAM/H,GAC5C2H,EAAKI,aAAa,0BAA2B,KAAM/H,GACnD2H,EAAKI,aAAa,2BAA4B,KAAM/H,GACpD2H,EAAKI,aAAa,2BAA4B,KAAM/H,GACpD2H,EAAKI,aAAa,2BAA4B,KAAM/H,GACpD2H,EAAKI,aAAa,4BAA6B,KAAM/H,GACrD2H,EAAKI,aAAa,2BAA4B,KAAM/H,GACpD2H,EAAKI,aAAa,2BAA4B,KAAM/H,GACpD2H,EAAKI,aAAa,0CAA2C,KAAM/H,GACnE2H,EAAKI,aAAa,+BAAgC,KAAM/H,GACxD2H,EAAKI,aAAa,mCAAoC,KAAM/H,GAC5D2H,EAAKI,aAAa,4CAA6C,KAAM/H,GACrE2H,EAAKI,aAAa,+CAAgD,KAAM/H,GACxE2H,EAAKI,aAAa,8BAA+B,KAAM/H,GACvD2H,EAAKI,aAAa,4BAA6B,KAAM/H,GACrD2H,EAAKI,aAAa,gCAAiC,KAAM/H,GACzD2H,EAAKI,aAAa,mCAAoC,KAAM/H,GAC5D2H,EAAKI,aAAa,oBAAqB,KAAM/H,GAC7C2H,EAAKI,aAAa,2BAA4B,KAAM/H,GAWpDgI,MAAMC,OAAOxJ,MAAQ,SAASyJ,GAC5BR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOxJ,MAAOiJ,EAAKS,SACnCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOxJ,MAAM+J,YAAc,sBAYnCR,MAAMC,OAAOQ,aAAe,SAASP,GACnCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOQ,aAAaC,gBAAiB,KAC5F,EACAf,EAAKU,SAASL,MAAMC,OAAOQ,aAAcf,EAAKS,SAC1CR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOQ,aAAaD,YAAc,6BAY1CR,MAAMC,OAAOU,YAAc,SAAST,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOU,YAAYD,gBAAiB,KAC3F,EACAf,EAAKU,SAASL,MAAMC,OAAOU,YAAajB,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOU,YAAYH,YAAc,4BAYzCR,MAAMC,OAAOW,YAAc,SAASV,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOW,YAAYF,gBAAiB,KAC3F,EACAf,EAAKU,SAASL,MAAMC,OAAOW,YAAalB,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOW,YAAYJ,YAAc,4BAYzCR,MAAMC,OAAOY,YAAc,SAASX,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOY,YAAYH,gBAAiB,KAC3F,EACAf,EAAKU,SAASL,MAAMC,OAAOY,YAAanB,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOY,YAAYL,YAAc,4BAYzCR,MAAMC,OAAOa,WAAa,SAASZ,GACjCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOa,WAAWJ,gBAAiB,KAC1F,EACAf,EAAKU,SAASL,MAAMC,OAAOa,WAAYpB,EAAKS,SACxCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOa,WAAWN,YAAc,2BAYxCR,MAAMC,OAAOc,IAAM,SAASb,GAC1BR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOc,IAAKrB,EAAKS,SACjCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOc,IAAIP,YAAc,oBAYjCR,MAAMC,OAAO3I,aAAe,SAAS4I,GACnCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAO3I,aAAcoI,EAAKS,SAC1CR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAO3I,aAAakJ,YAAc,6BAY1CR,MAAMC,OAAO9B,eAAiB,SAAS+B,GACrCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAO9B,eAAeuC,gBAAiB,KAC9F,EACAf,EAAKU,SAASL,MAAMC,OAAO9B,eAAgBuB,EAAKS,SAC5CR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAO9B,eAAeqC,YAAc,+BAY5CR,MAAMC,OAAO3D,qBAAuB,SAAS4D,GAC3CR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAO3D,qBAAsBoD,EAAKS,SAClDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAO3D,qBAAqBkE,YAAc,qCAYlDR,MAAMC,OAAO/F,YAAc,SAASgG,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAO/F,YAAawF,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAO/F,YAAYsG,YAAc,4BAYzCR,MAAMC,OAAOrB,gBAAkB,SAASsB,GACtCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOrB,gBAAiBc,EAAKS,SAC7CR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOrB,gBAAgB4B,YAAc,gCAY7CR,MAAMC,OAAOe,YAAc,SAASd,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOe,YAAatB,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOe,YAAYR,YAAc,4BAYzCR,MAAMC,OAAOgB,SAAW,SAASf,GAC/BR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOgB,SAAUvB,EAAKS,SACtCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOgB,SAAST,YAAc,yBAYtCR,MAAMC,OAAOiB,KAAO,SAAShB,GAC3BR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOiB,KAAKR,gBAAiB,KACpF,EACAf,EAAKU,SAASL,MAAMC,OAAOiB,KAAMxB,EAAKS,SAClCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOiB,KAAKV,YAAc,qBAYlCR,MAAMC,OAAOkB,mBAAqB,SAASjB,GACzCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOkB,mBAAoBzB,EAAKS,SAChDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOkB,mBAAmBX,YAAc,mCAYhDR,MAAMC,OAAOmB,oBAAsB,SAASlB,GAC1CR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOmB,oBAAqB1B,EAAKS,SACjDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOmB,oBAAoBZ,YAAc,oCAYjDR,MAAMC,OAAOoB,iBAAmB,SAASnB,GACvCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOoB,iBAAkB3B,EAAKS,SAC9CR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOoB,iBAAiBb,YAAc,iCAY9CR,MAAMC,OAAOqB,oBAAsB,SAASpB,GAC1CR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOqB,oBAAqB5B,EAAKS,SACjDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOqB,oBAAoBd,YAAc,oCAYjDR,MAAMC,OAAOsB,YAAc,SAASrB,GAClCR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOsB,YAAa7B,EAAKS,SACzCR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOsB,YAAYf,YAAc,4BAYzCR,MAAMC,OAAOuB,gCAAkC,SAAStB,GACtDR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOuB,gCAAiC9B,EAAKS,SAC7DR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOuB,gCAAgChB,YAAc,gDAY7DR,MAAMC,OAAOwB,yBAA2B,SAASvB,GAC/CR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAGF,MAAMC,OAAOwB,yBAAyBf,gBAAiB,KACxG,EACAf,EAAKU,SAASL,MAAMC,OAAOwB,yBAA0B/B,EAAKS,SACtDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOwB,yBAAyBjB,YAAc,yCAYtDR,MAAMC,OAAOyB,6BAA+B,SAASxB,GACnDR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAOyB,6BAA8BhC,EAAKS,SAC1DR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAOyB,6BAA6BlB,YAAc,6CAY1DR,MAAMC,OAAO0B,2BAA6B,SAASzB,GACjDR,EAAKS,QAAQC,WAAWxK,KAAMsK,EAAU,GAAI,EAAG,KAAM,KACvD,EACAP,EAAKU,SAASL,MAAMC,OAAO0B,2BAA4BjC,EAAKS,SACxDR,EAAKW,QAAUC,WAKjBP,MAAMC,OAAO0B,2BAA2BnB,YAAc,2CAKpDd,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOxJ,MAAMoL,UAAUC,SAAW,SAASC,GAC/C,OAAO/B,MAAMC,OAAOxJ,MAAMqL,SAASC,EAAqBnM,KAC1D,EAYAoK,MAAMC,OAAOxJ,MAAMqL,SAAW,SAASE,EAAiBrI,GACtD,IAAOsI,EAAM,CAEb,EAKA,OAHID,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOxJ,MAAM0L,kBAAoB,SAASC,GAC9C,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOxJ,MAC3B,OAAOuJ,MAAMC,OAAOxJ,MAAM8L,4BAA4B5I,EAAK0I,EAC7D,EAUArC,MAAMC,OAAOxJ,MAAM8L,4BAA8B,SAAS5I,EAAK0I,GAC7D,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAIbJ,EAAOK,iBAGjBL,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOxJ,MAAMoL,UAAUlN,gBAAkB,WAC7C,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOxJ,MAAMqM,wBAAwBlN,KAAMgN,GAC1CA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOxJ,MAAMqM,wBAA0B,SAASE,EAASJ,GAE/D,EASA5C,MAAMC,OAAOQ,aAAaC,gBAAkB,CAAC,GAIzChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOQ,aAAaoB,UAAUC,SAAW,SAASC,GACtD,OAAO/B,MAAMC,OAAOQ,aAAaqB,SAASC,EAAqBnM,KACjE,EAYAoK,MAAMC,OAAOQ,aAAaqB,SAAW,SAASE,EAAiBrI,GAC7D,IAAIsJ,EAAGhB,EAAM,CACXiB,SAAyD,OAA9CD,EAAIvD,EAAKS,QAAQgD,iBAAiBxJ,EAAK,SAAc5D,EAAYkN,GAM9E,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOQ,aAAa0B,kBAAoB,SAASC,GACrD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOQ,aAC3B,OAAOT,MAAMC,OAAOQ,aAAa8B,4BAA4B5I,EAAK0I,EACpE,EAUArC,MAAMC,OAAOQ,aAAa8B,4BAA8B,SAAS5I,EAAK0I,GACpE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAI2J,QAAQF,EACP,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOQ,aAAaoB,UAAUlN,gBAAkB,WACpD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOQ,aAAaqC,wBAAwBlN,KAAMgN,GACjDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOQ,aAAaqC,wBAA0B,SAASE,EAASJ,GACpE,IAAIK,GACJA,EAAID,EAAQO,eACNzG,OAAS,GACb8F,EAAOY,oBACL,EACAP,EAGN,EAOAjD,MAAMC,OAAOQ,aAAaoB,UAAU0B,YAAc,WAChD,OAAsC7D,EAAKS,QAAQgD,iBAAiBvN,KAAM,EAC5E,EAOAoK,MAAMC,OAAOQ,aAAaoB,UAAU4B,YAAc,SAASL,GACzD,OAAO1D,EAAKS,QAAQuD,SAAS9N,KAAM,EAAGwN,GAAS,GACjD,EAQApD,MAAMC,OAAOQ,aAAaoB,UAAUyB,QAAU,SAASF,EAAOO,GAC5D,OAAOjE,EAAKS,QAAQyD,mBAAmBhO,KAAM,EAAGwN,EAAOO,EACzD,EAOA3D,MAAMC,OAAOQ,aAAaoB,UAAUgC,cAAgB,WAClD,OAAOjO,KAAK6N,YAAY,GAC1B,EASAzD,MAAMC,OAAOU,YAAYD,gBAAkB,CAAC,GAIxChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOU,YAAYkB,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAOU,YAAYmB,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAOU,YAAYmB,SAAW,SAASE,EAAiBrI,GAC5D,IAAOsI,EAAM,CACXiB,SAAUvJ,EAAImK,qBAMhB,OAHI9B,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOU,YAAYwB,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOU,YAC3B,OAAOX,MAAMC,OAAOU,YAAY4B,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAOU,YAAY4B,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAAoCf,EAAO0B,YAC/CpK,EAAI2J,QAAQF,EACP,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOU,YAAYkB,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOU,YAAYmC,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOU,YAAYmC,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,GACJA,EAAID,EAAQgB,oBACNlH,OAAS,GACb8F,EAAOqB,mBACL,EACAhB,EAGN,EAOAjD,MAAMC,OAAOU,YAAYkB,UAAU0B,YAAc,WAC/C,OAAsC7D,EAAKS,QAAQgD,iBAAiBvN,KAAM,EAC5E,EAQAoK,MAAMC,OAAOU,YAAYkB,UAAUiC,kBAAoB,WACrD,OAAsCpE,EAAKS,QAAQ+D,eAC/CtO,KAAK2N,cACX,EAUAvD,MAAMC,OAAOU,YAAYkB,UAAUmC,iBAAmB,WACpD,OAA2CtE,EAAKS,QAAQgE,cACpDvO,KAAK2N,cACX,EAOAvD,MAAMC,OAAOU,YAAYkB,UAAU4B,YAAc,SAASL,GACxD,OAAO1D,EAAKS,QAAQuD,SAAS9N,KAAM,EAAGwN,GAAS,GACjD,EAQApD,MAAMC,OAAOU,YAAYkB,UAAUyB,QAAU,SAASF,EAAOO,GAC3D,OAAOjE,EAAKS,QAAQyD,mBAAmBhO,KAAM,EAAGwN,EAAOO,EACzD,EAOA3D,MAAMC,OAAOU,YAAYkB,UAAUgC,cAAgB,WACjD,OAAOjO,KAAK6N,YAAY,GAC1B,EASAzD,MAAMC,OAAOW,YAAYF,gBAAkB,CAAC,GAIxChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOW,YAAYiB,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAOW,YAAYkB,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAOW,YAAYkB,SAAW,SAASE,EAAiBrI,GAC5D,IAAIsJ,EAAGhB,EAAM,CACXiB,SAAyD,OAA9CD,EAAIvD,EAAKS,QAAQgD,iBAAiBxJ,EAAK,SAAc5D,EAAYkN,GAM9E,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOW,YAAYuB,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOW,YAC3B,OAAOZ,MAAMC,OAAOW,YAAY2B,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAOW,YAAY2B,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAIjB,IADA,IAAI0B,EAAwC/B,EAAOgC,cAAgBhC,EAAOiC,kBAAoB,CAACjC,EAAOkC,aAC7FpJ,EAAI,EAAGA,EAAIiJ,EAAOtH,OAAQ3B,IACjCxB,EAAI2J,QAAQc,EAAOjJ,SAIrBkH,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOW,YAAYiB,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOW,YAAYkC,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOW,YAAYkC,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,GACJA,EAAID,EAAQO,eACNzG,OAAS,GACb8F,EAAO4B,iBACL,EACAvB,EAGN,EAOAjD,MAAMC,OAAOW,YAAYiB,UAAU0B,YAAc,WAC/C,OAAsC7D,EAAKS,QAAQgD,iBAAiBvN,KAAM,EAC5E,EAOAoK,MAAMC,OAAOW,YAAYiB,UAAU4B,YAAc,SAASL,GACxD,OAAO1D,EAAKS,QAAQuD,SAAS9N,KAAM,EAAGwN,GAAS,GACjD,EAQApD,MAAMC,OAAOW,YAAYiB,UAAUyB,QAAU,SAASF,EAAOO,GAC3D,OAAOjE,EAAKS,QAAQyD,mBAAmBhO,KAAM,EAAGwN,EAAOO,EACzD,EAOA3D,MAAMC,OAAOW,YAAYiB,UAAUgC,cAAgB,WACjD,OAAOjO,KAAK6N,YAAY,GAC1B,EASAzD,MAAMC,OAAOY,YAAYH,gBAAkB,CAAC,GAIxChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOY,YAAYgB,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAOY,YAAYiB,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAOY,YAAYiB,SAAW,SAASE,EAAiBrI,GAC5D,IAAIsJ,EAAGhB,EAAM,CACXiB,SAAsE,OAA3DD,EAAIvD,EAAKS,QAAQsE,8BAA8B9K,EAAK,SAAc5D,EAAYkN,GAM3F,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOY,YAAYsB,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOY,YAC3B,OAAOb,MAAMC,OAAOY,YAAY0B,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAOY,YAAY0B,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAIjB,IADA,IAAI0B,EAAwC/B,EAAOgC,cAAgBhC,EAAOqC,kBAAoB,CAACrC,EAAOsC,aAC7FxJ,EAAI,EAAGA,EAAIiJ,EAAOtH,OAAQ3B,IACjCxB,EAAI2J,QAAQc,EAAOjJ,SAIrBkH,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOY,YAAYgB,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOY,YAAYiC,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOY,YAAYiC,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,GACJA,EAAID,EAAQO,eACNzG,OAAS,GACb8F,EAAOgC,iBACL,EACA3B,EAGN,EAOAjD,MAAMC,OAAOY,YAAYgB,UAAU0B,YAAc,WAC/C,OAAsC7D,EAAKS,QAAQsE,8BAA8B7O,KAAM,EACzF,EAOAoK,MAAMC,OAAOY,YAAYgB,UAAU4B,YAAc,SAASL,GACxD,OAAO1D,EAAKS,QAAQuD,SAAS9N,KAAM,EAAGwN,GAAS,GACjD,EAQApD,MAAMC,OAAOY,YAAYgB,UAAUyB,QAAU,SAASF,EAAOO,GAC3D,OAAOjE,EAAKS,QAAQyD,mBAAmBhO,KAAM,EAAGwN,EAAOO,EACzD,EAOA3D,MAAMC,OAAOY,YAAYgB,UAAUgC,cAAgB,WACjD,OAAOjO,KAAK6N,YAAY,GAC1B,EASAzD,MAAMC,OAAOa,WAAWJ,gBAAkB,CAAC,GAIvChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOa,WAAWe,UAAUC,SAAW,SAASC,GACpD,OAAO/B,MAAMC,OAAOa,WAAWgB,SAASC,EAAqBnM,KAC/D,EAYAoK,MAAMC,OAAOa,WAAWgB,SAAW,SAASE,EAAiBrI,GAC3D,IAAIsJ,EAAGhB,EAAM,CACXiB,SAAgE,OAArDD,EAAIvD,EAAKS,QAAQ0E,wBAAwBlL,EAAK,SAAc5D,EAAYkN,GAMrF,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOa,WAAWqB,kBAAoB,SAASC,GACnD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOa,WAC3B,OAAOd,MAAMC,OAAOa,WAAWyB,4BAA4B5I,EAAK0I,EAClE,EAUArC,MAAMC,OAAOa,WAAWyB,4BAA8B,SAAS5I,EAAK0I,GAClE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAIjB,IADA,IAAI0B,EAAyC/B,EAAOgC,cAAgBhC,EAAOyC,iBAAmB,CAACzC,EAAO0C,YAC7F5J,EAAI,EAAGA,EAAIiJ,EAAOtH,OAAQ3B,IACjCxB,EAAI2J,QAAQc,EAAOjJ,SAIrBkH,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOa,WAAWe,UAAUlN,gBAAkB,WAClD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOa,WAAWgC,wBAAwBlN,KAAMgN,GAC/CA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOa,WAAWgC,wBAA0B,SAASE,EAASJ,GAClE,IAAIK,GACJA,EAAID,EAAQO,eACNzG,OAAS,GACb8F,EAAOoC,gBACL,EACA/B,EAGN,EAOAjD,MAAMC,OAAOa,WAAWe,UAAU0B,YAAc,WAC9C,OAAuC7D,EAAKS,QAAQ0E,wBAAwBjP,KAAM,EACpF,EAOAoK,MAAMC,OAAOa,WAAWe,UAAU4B,YAAc,SAASL,GACvD,OAAO1D,EAAKS,QAAQuD,SAAS9N,KAAM,EAAGwN,GAAS,GACjD,EAQApD,MAAMC,OAAOa,WAAWe,UAAUyB,QAAU,SAASF,EAAOO,GAC1D,OAAOjE,EAAKS,QAAQyD,mBAAmBhO,KAAM,EAAGwN,EAAOO,EACzD,EAOA3D,MAAMC,OAAOa,WAAWe,UAAUgC,cAAgB,WAChD,OAAOjO,KAAK6N,YAAY,GAC1B,EAMI/D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOc,IAAIc,UAAUC,SAAW,SAASC,GAC7C,OAAO/B,MAAMC,OAAOc,IAAIe,SAASC,EAAqBnM,KACxD,EAYAoK,MAAMC,OAAOc,IAAIe,SAAW,SAASE,EAAiBrI,GACpD,IAAOsI,EAAM,CACX/K,IAAKwI,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMhD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOc,IAAIoB,kBAAoB,SAASC,GAC5C,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOc,IAC3B,OAAOf,MAAMC,OAAOc,IAAIwB,4BAA4B5I,EAAK0I,EAC3D,EAUArC,MAAMC,OAAOc,IAAIwB,4BAA8B,SAAS5I,EAAK0I,GAC3D,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIuL,OAAO9B,EACN,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOc,IAAIc,UAAUlN,gBAAkB,WAC3C,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOc,IAAI+B,wBAAwBlN,KAAMgN,GACxCA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOc,IAAI+B,wBAA0B,SAASE,EAASJ,GAC3D,IAAIK,GACJA,EAAID,EAAQhH,UACNc,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOc,IAAIc,UAAU7F,OAAS,WAClC,OAA8B0D,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOc,IAAIc,UAAUqD,OAAS,SAAS9B,GAC3C,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAO3I,aAAauK,UAAUC,SAAW,SAASC,GACtD,OAAO/B,MAAMC,OAAO3I,aAAawK,SAASC,EAAqBnM,KACjE,EAYAoK,MAAMC,OAAO3I,aAAawK,SAAW,SAASE,EAAiBrI,GAC7D,IAAOsI,EAAM,CACXoD,QAAS3F,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAClDkE,QAAS6B,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAClDuD,QAASvD,EAAI6D,oBAMf,OAHIwE,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAO3I,aAAa6K,kBAAoB,SAASC,GACrD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAO3I,aAC3B,OAAO0I,MAAMC,OAAO3I,aAAaiL,4BAA4B5I,EAAK0I,EACpE,EAUArC,MAAMC,OAAO3I,aAAaiL,4BAA8B,SAAS5I,EAAK0I,GACpE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIpC,WAAW6L,GACf,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI2L,WAAWlC,GACf,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAI4L,WAAWnC,GACf,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAO3I,aAAauK,UAAUlN,gBAAkB,WACpD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAO3I,aAAawL,wBAAwBlN,KAAMgN,GACjDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAO3I,aAAawL,wBAA0B,SAASE,EAASJ,GACpE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQwC,cACN1I,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQpF,cACNd,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ7F,mBACNL,OAAS,GACb8F,EAAO6C,WACL,EACAxC,EAGN,EAOAjD,MAAMC,OAAO3I,aAAauK,UAAU2D,WAAa,WAC/C,OAA8B9F,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAO3I,aAAauK,UAAUtK,WAAa,SAAS6L,GACxD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAO3I,aAAauK,UAAUjE,WAAa,WAC/C,OAA8B8B,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAO3I,aAAauK,UAAUyD,WAAa,SAASlC,GACxD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAO3I,aAAauK,UAAU6D,WAAa,WAC/C,OAA8BhG,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAO3I,aAAauK,UAAUrE,iBAAmB,WACrD,OAA8BkC,EAAKS,QAAQwF,WACvC/P,KAAK8P,aACX,EAUA1F,MAAMC,OAAO3I,aAAauK,UAAU1E,gBAAkB,WACpD,OAAmCuC,EAAKS,QAAQyF,UAC5ChQ,KAAK8P,aACX,EAOA1F,MAAMC,OAAO3I,aAAauK,UAAU0D,WAAa,SAASnC,GACxD,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EASApD,MAAMC,OAAO9B,eAAeuC,gBAAkB,CAAC,GAI3ChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAO9B,eAAe0D,UAAUC,SAAW,SAASC,GACxD,OAAO/B,MAAMC,OAAO9B,eAAe2D,SAASC,EAAqBnM,KACnE,EAYAoK,MAAMC,OAAO9B,eAAe2D,SAAW,SAASE,EAAiBrI,GAC/D,IAAOsI,EAAM,CACX3D,YAAaoB,EAAKS,QAAQ2F,aAAanM,EAAI4E,iBAC3CyB,MAAMC,OAAO3I,aAAawK,SAAUE,IAMtC,OAHIA,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAO9B,eAAegE,kBAAoB,SAASC,GACvD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAO9B,eAC3B,OAAO6B,MAAMC,OAAO9B,eAAeoE,4BAA4B5I,EAAK0I,EACtE,EAUArC,MAAMC,OAAO9B,eAAeoE,4BAA8B,SAAS5I,EAAK0I,GACtE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAAQ,IAAIpD,MAAMC,OAAO3I,aAC7B+K,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAO3I,aAAaiL,6BACnD5I,EAAIyE,WAAWgF,EACV,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAO9B,eAAe0D,UAAUlN,gBAAkB,WACtD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAO9B,eAAe2E,wBAAwBlN,KAAMgN,GACnDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAO9B,eAAe2E,wBAA0B,SAASE,EAASJ,GACtE,IAAIK,GACJA,EAAID,EAAQzE,kBACNzB,OAAS,GACb8F,EAAOoD,qBACL,EACA/C,EACAjD,MAAMC,OAAO3I,aAAawL,wBAGhC,EAOA9C,MAAMC,OAAO9B,eAAe0D,UAAUtD,eAAiB,WACrD,OACEmB,EAAKS,QAAQ8F,wBAAwBrQ,KAAMoK,MAAMC,OAAO3I,aAAc,EAC1E,EAOA0I,MAAMC,OAAO9B,eAAe0D,UAAUqE,eAAiB,SAAS9C,GAC9D,OAAO1D,EAAKS,QAAQgG,wBAAwBvQ,KAAM,EAAGwN,EACvD,EAQApD,MAAMC,OAAO9B,eAAe0D,UAAUzD,WAAa,SAASgI,EAAWzC,GACrE,OAAOjE,EAAKS,QAAQkG,0BAA0BzQ,KAAM,EAAGwQ,EAAWpG,MAAMC,OAAO3I,aAAcqM,EAC/F,EAOA3D,MAAMC,OAAO9B,eAAe0D,UAAUyE,iBAAmB,WACvD,OAAO1Q,KAAKsQ,eAAe,GAC7B,EAMIxG,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAO3D,qBAAqBuF,UAAUC,SAAW,SAASC,GAC9D,OAAO/B,MAAMC,OAAO3D,qBAAqBwF,SAASC,EAAqBnM,KACzE,EAYAoK,MAAMC,OAAO3D,qBAAqBwF,SAAW,SAASE,EAAiBrI,GACrE,IAAIsJ,EAAGhB,EAAM,CACX5F,eAAgBqD,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,GACzD4M,UAAW7G,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACpD6M,aAAcvD,EAAItJ,EAAI8M,mBAAqBzG,MAAMC,OAAO/F,YAAY4H,SAASE,EAAiBiB,IAMhG,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAO3D,qBAAqB6F,kBAAoB,SAASC,GAC7D,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAO3D,qBAC3B,OAAO0D,MAAMC,OAAO3D,qBAAqBiG,4BAA4B5I,EAAK0I,EAC5E,EAUArC,MAAMC,OAAO3D,qBAAqBiG,4BAA8B,SAAS5I,EAAK0I,GAC5E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOkC,YAC1C5K,EAAI4C,kBAAkB6G,GACtB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI+C,aAAa0G,GACjB,MACF,KAAK,EACCA,EAAQ,IAAIpD,MAAMC,OAAO/F,YAC7BmI,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAO/F,YAAYqI,6BAClD5I,EAAI8C,eAAe2G,GACnB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAO3D,qBAAqBuF,UAAUlN,gBAAkB,WAC5D,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAO3D,qBAAqBwG,wBAAwBlN,KAAMgN,GACzDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAO3D,qBAAqBwG,wBAA0B,SAASE,EAASJ,GAC5E,IAAIK,OAAIlN,EAEE,KADVkN,EAAID,EAAQ0D,sBAEV9D,EAAO+D,WACL,EACA1D,IAGJA,EAAID,EAAQ4D,gBACN9J,OAAS,GACb8F,EAAOuC,YACL,EACAlC,GAIK,OADTA,EAAID,EAAQyD,mBAEV7D,EAAOiE,aACL,EACA5D,EACAjD,MAAMC,OAAO/F,YAAY4I,wBAG/B,EAOA9C,MAAMC,OAAO3D,qBAAqBuF,UAAU6E,kBAAoB,WAC9D,OAA8BhH,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EAC1E,EAOAoK,MAAMC,OAAO3D,qBAAqBuF,UAAUtF,kBAAoB,SAAS6G,GACvE,OAAO1D,EAAKS,QAAQ2G,kBAAkBlR,KAAM,EAAGwN,EACjD,EAOApD,MAAMC,OAAO3D,qBAAqBuF,UAAU+E,aAAe,WACzD,OAA8BlH,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAO3D,qBAAqBuF,UAAUnF,aAAe,SAAS0G,GAClE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAO3D,qBAAqBuF,UAAU4E,eAAiB,WAC3D,OACE/G,EAAKS,QAAQ4G,gBAAgBnR,KAAMoK,MAAMC,OAAO/F,YAAa,EACjE,EAOA8F,MAAMC,OAAO3D,qBAAqBuF,UAAUpF,eAAiB,SAAS2G,GACpE,OAAO1D,EAAKS,QAAQ6G,gBAAgBpR,KAAM,EAAGwN,EAC/C,EAOApD,MAAMC,OAAO3D,qBAAqBuF,UAAUoF,iBAAmB,WAC7D,OAAOrR,KAAK6G,oBAAe1G,EAC7B,EAOAiK,MAAMC,OAAO3D,qBAAqBuF,UAAUqF,eAAiB,WAC3D,OAAyC,MAAlCxH,EAAKS,QAAQgH,SAASvR,KAAM,EACrC,EAMI8J,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAO/F,YAAY2H,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAO/F,YAAY4H,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAO/F,YAAY4H,SAAW,SAASE,EAAiBrI,GAC5D,IAAOsI,EAAM,CACXmF,UAAWzN,EAAI0N,qBACfC,mBAAoB5H,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,GAC7Db,oBAAqB4G,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,GAC9DK,UAAWL,EAAI4N,sBAMjB,OAHIvF,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAO/F,YAAYiI,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAO/F,YAC3B,OAAO8F,MAAMC,OAAO/F,YAAYqI,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAO/F,YAAYqI,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAAoCf,EAAO0B,YAC/CpK,EAAIQ,aAAaiJ,GACjB,MACF,KAAK,EACCA,EAA+Bf,EAAOkC,YAC1C5K,EAAIS,sBAAsBgJ,GAC1B,MACF,KAAK,EACCA,EAA+Bf,EAAOkC,YAC1C5K,EAAIW,uBAAuB8I,GAC3B,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAIU,aAAa+I,GACjB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAO/F,YAAY2H,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAO/F,YAAY4I,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAO/F,YAAY4I,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQwE,qBACN1K,OAAS,GACb8F,EAAO6C,WACL,EACAxC,GAIM,KADVA,EAAID,EAAQyE,0BAEV7E,EAAO+D,WACL,EACA1D,GAIM,KADVA,EAAID,EAAQ0E,2BAEV9E,EAAO+D,WACL,EACA1D,IAGJA,EAAID,EAAQ2E,qBACN7K,OAAS,GACb8F,EAAO6C,WACL,EACAxC,EAGN,EAOAjD,MAAMC,OAAO/F,YAAY2H,UAAU+F,aAAe,WAChD,OAA8BlI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAO/F,YAAY2H,UAAUwF,mBAAqB,WACtD,OAA8B3H,EAAKS,QAAQwF,WACvC/P,KAAKgS,eACX,EAUA5H,MAAMC,OAAO/F,YAAY2H,UAAU2F,kBAAoB,WACrD,OAAmC9H,EAAKS,QAAQyF,UAC5ChQ,KAAKgS,eACX,EAOA5H,MAAMC,OAAO/F,YAAY2H,UAAU1H,aAAe,SAASiJ,GACzD,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAOApD,MAAMC,OAAO/F,YAAY2H,UAAU4F,sBAAwB,WACzD,OAA8B/H,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EAC1E,EAOAoK,MAAMC,OAAO/F,YAAY2H,UAAUzH,sBAAwB,SAASgJ,GAClE,OAAO1D,EAAKS,QAAQ2G,kBAAkBlR,KAAM,EAAGwN,EACjD,EAOApD,MAAMC,OAAO/F,YAAY2H,UAAU6F,uBAAyB,WAC1D,OAA8BhI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EAC1E,EAOAoK,MAAMC,OAAO/F,YAAY2H,UAAUvH,uBAAyB,SAAS8I,GACnE,OAAO1D,EAAKS,QAAQ2G,kBAAkBlR,KAAM,EAAGwN,EACjD,EAOApD,MAAMC,OAAO/F,YAAY2H,UAAUgG,aAAe,WAChD,OAA8BnI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAO/F,YAAY2H,UAAU0F,mBAAqB,WACtD,OAA8B7H,EAAKS,QAAQwF,WACvC/P,KAAKiS,eACX,EAUA7H,MAAMC,OAAO/F,YAAY2H,UAAU8F,kBAAoB,WACrD,OAAmCjI,EAAKS,QAAQyF,UAC5ChQ,KAAKiS,eACX,EAOA7H,MAAMC,OAAO/F,YAAY2H,UAAUxH,aAAe,SAAS+I,GACzD,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOrB,gBAAgBiD,UAAUC,SAAW,SAASC,GACzD,OAAO/B,MAAMC,OAAOrB,gBAAgBkD,SAASC,EAAqBnM,KACpE,EAYAoK,MAAMC,OAAOrB,gBAAgBkD,SAAW,SAASE,EAAiBrI,GAChE,IAAOsI,EAAM,CACXxD,OAAQiB,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDmO,eAAgBpI,EAAKS,QAAQ4H,2BAA2BpO,EAAK,GAAG,IAMlE,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOrB,gBAAgBuD,kBAAoB,SAASC,GACxD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOrB,gBAC3B,OAAOoB,MAAMC,OAAOrB,gBAAgB2D,4BAA4B5I,EAAK0I,EACvE,EAUArC,MAAMC,OAAOrB,gBAAgB2D,4BAA8B,SAAS5I,EAAK0I,GACvE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIkF,UAAUuE,GACd,MACF,KAAK,EACCA,EAAgCf,EAAO0C,WAC3CpL,EAAImF,kBAAkBsE,GACtB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOrB,gBAAgBiD,UAAUlN,gBAAkB,WACvD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOrB,gBAAgBkE,wBAAwBlN,KAAMgN,GACpDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOrB,gBAAgBkE,wBAA0B,SAASE,EAASJ,GACvE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQgF,aACNlL,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQiF,sBAEVrF,EAAOsF,UACL,EACAjF,EAGN,EAOAjD,MAAMC,OAAOrB,gBAAgBiD,UAAUmG,UAAY,WACjD,OAA8BtI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOrB,gBAAgBiD,UAAUhD,UAAY,SAASuE,GAC1D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOrB,gBAAgBiD,UAAUoG,kBAAoB,WACzD,OAA+BvI,EAAKS,QAAQ4H,2BAA2BnS,KAAM,GAAG,EAClF,EAOAoK,MAAMC,OAAOrB,gBAAgBiD,UAAU/C,kBAAoB,SAASsE,GAClE,OAAO1D,EAAKS,QAAQgI,sBAAsBvS,KAAM,EAAGwN,EACrD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOe,YAAYa,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAOe,YAAYc,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAOe,YAAYc,SAAW,SAASE,EAAiBrI,GAC5D,IAAOsI,EAAM,CACX3C,OAAQI,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDyO,KAAM1I,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMjD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOe,YAAYmB,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOe,YAC3B,OAAOhB,MAAMC,OAAOe,YAAYuB,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAOe,YAAYuB,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAI0O,UAAUjF,GACd,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI2O,QAAQlF,GACZ,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOe,YAAYa,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOe,YAAY8B,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOe,YAAY8B,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQxL,aACNsF,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQuF,WACNzL,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOe,YAAYa,UAAUrK,UAAY,WAC7C,OAA8BkI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOe,YAAYa,UAAUwG,UAAY,SAASjF,GACtD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOe,YAAYa,UAAU0G,QAAU,WAC3C,OAA8B7I,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOe,YAAYa,UAAUyG,QAAU,SAASlF,GACpD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOgB,SAASY,UAAUC,SAAW,SAASC,GAClD,OAAO/B,MAAMC,OAAOgB,SAASa,SAASC,EAAqBnM,KAC7D,EAYAoK,MAAMC,OAAOgB,SAASa,SAAW,SAASE,EAAiBrI,GACzD,IAAIsJ,EAAGhB,EAAM,CACXuG,WAAY9I,EAAKS,QAAQ4H,2BAA2BpO,EAAK,GAAG,GAC5D8O,WAAY/I,EAAKS,QAAQ4H,2BAA2BpO,EAAK,GAAG,GAC5D+O,OAAQhJ,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDK,UAAWL,EAAI4N,qBACfoB,cAAehP,EAAIiP,yBACnBpC,aAAcvD,EAAItJ,EAAI8M,mBAAqBzG,MAAMC,OAAO/F,YAAY4H,SAASE,EAAiBiB,IAMhG,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOgB,SAASkB,kBAAoB,SAASC,GACjD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOgB,SAC3B,OAAOjB,MAAMC,OAAOgB,SAASsB,4BAA4B5I,EAAK0I,EAChE,EAUArC,MAAMC,OAAOgB,SAASsB,4BAA8B,SAAS5I,EAAK0I,GAChE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAAgCf,EAAO0C,WAC3CpL,EAAIkP,cAAczF,GAClB,MACF,KAAK,EACCA,EAAgCf,EAAO0C,WAC3CpL,EAAImP,cAAc1F,GAClB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIoP,UAAU3F,GACd,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAIU,aAAa+I,GACjB,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAIqP,iBAAiB5F,GACrB,MACF,KAAK,EACCA,EAAQ,IAAIpD,MAAMC,OAAO/F,YAC7BmI,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAO/F,YAAYqI,6BAClD5I,EAAI8C,eAAe2G,GACnB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOgB,SAASY,UAAUlN,gBAAkB,WAChD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOgB,SAAS6B,wBAAwBlN,KAAMgN,GAC7CA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOgB,SAAS6B,wBAA0B,SAASE,EAASJ,GAChE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQiG,kBAEVrG,EAAOsF,UACL,EACAjF,IAGJA,EAAID,EAAQkG,kBAEVtG,EAAOsF,UACL,EACAjF,IAGJA,EAAID,EAAQmG,aACNrM,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ2E,qBACN7K,OAAS,GACb8F,EAAO6C,WACL,EACAxC,IAGJA,EAAID,EAAQtJ,yBACNoD,OAAS,GACb8F,EAAO6C,WACL,EACAxC,GAIK,OADTA,EAAID,EAAQyD,mBAEV7D,EAAOiE,aACL,EACA5D,EACAjD,MAAMC,OAAO/F,YAAY4I,wBAG/B,EAOA9C,MAAMC,OAAOgB,SAASY,UAAUoH,cAAgB,WAC9C,OAA+BvJ,EAAKS,QAAQ4H,2BAA2BnS,KAAM,GAAG,EAClF,EAOAoK,MAAMC,OAAOgB,SAASY,UAAUgH,cAAgB,SAASzF,GACvD,OAAO1D,EAAKS,QAAQgI,sBAAsBvS,KAAM,EAAGwN,EACrD,EAOApD,MAAMC,OAAOgB,SAASY,UAAUqH,cAAgB,WAC9C,OAA+BxJ,EAAKS,QAAQ4H,2BAA2BnS,KAAM,GAAG,EAClF,EAOAoK,MAAMC,OAAOgB,SAASY,UAAUiH,cAAgB,SAAS1F,GACvD,OAAO1D,EAAKS,QAAQgI,sBAAsBvS,KAAM,EAAGwN,EACrD,EAOApD,MAAMC,OAAOgB,SAASY,UAAUsH,UAAY,WAC1C,OAA8BzJ,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOgB,SAASY,UAAUkH,UAAY,SAAS3F,GACnD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOgB,SAASY,UAAUgG,aAAe,WAC7C,OAA8BnI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAOgB,SAASY,UAAU0F,mBAAqB,WACnD,OAA8B7H,EAAKS,QAAQwF,WACvC/P,KAAKiS,eACX,EAUA7H,MAAMC,OAAOgB,SAASY,UAAU8F,kBAAoB,WAClD,OAAmCjI,EAAKS,QAAQyF,UAC5ChQ,KAAKiS,eACX,EAOA7H,MAAMC,OAAOgB,SAASY,UAAUxH,aAAe,SAAS+I,GACtD,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAOApD,MAAMC,OAAOgB,SAASY,UAAUuH,iBAAmB,WACjD,OAA8B1J,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAOgB,SAASY,UAAU+G,uBAAyB,WACvD,OAA8BlJ,EAAKS,QAAQwF,WACvC/P,KAAKwT,mBACX,EAUApJ,MAAMC,OAAOgB,SAASY,UAAUnI,sBAAwB,WACtD,OAAmCgG,EAAKS,QAAQyF,UAC5ChQ,KAAKwT,mBACX,EAOApJ,MAAMC,OAAOgB,SAASY,UAAUmH,iBAAmB,SAAS5F,GAC1D,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAOApD,MAAMC,OAAOgB,SAASY,UAAU4E,eAAiB,WAC/C,OACE/G,EAAKS,QAAQ4G,gBAAgBnR,KAAMoK,MAAMC,OAAO/F,YAAa,EACjE,EAOA8F,MAAMC,OAAOgB,SAASY,UAAUpF,eAAiB,SAAS2G,GACxD,OAAO1D,EAAKS,QAAQ6G,gBAAgBpR,KAAM,EAAGwN,EAC/C,EAOApD,MAAMC,OAAOgB,SAASY,UAAUoF,iBAAmB,WACjD,OAAOrR,KAAK6G,oBAAe1G,EAC7B,EAOAiK,MAAMC,OAAOgB,SAASY,UAAUqF,eAAiB,WAC/C,OAAyC,MAAlCxH,EAAKS,QAAQgH,SAASvR,KAAM,EACrC,EASAoK,MAAMC,OAAOiB,KAAKR,gBAAkB,CAAC,EAAE,GAInChB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOiB,KAAKW,UAAUC,SAAW,SAASC,GAC9C,OAAO/B,MAAMC,OAAOiB,KAAKY,SAASC,EAAqBnM,KACzD,EAYAoK,MAAMC,OAAOiB,KAAKY,SAAW,SAASE,EAAiBrI,GACrD,IAAOsI,EAAM,CACXoH,OAAQ3J,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjD2P,aAAc5J,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACvD4P,cAAe5P,EAAI6P,yBACnBC,iBAAkB/J,EAAKS,QAAQ2F,aAAanM,EAAI+P,sBAChD1J,MAAMC,OAAOe,YAAYc,SAAUE,GACnC2H,WAAYjK,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACrDiQ,iBAAkBlK,EAAKS,QAAQ4H,2BAA2BpO,EAAK,GAAG,GAClEkQ,cAAenK,EAAKS,QAAQ2F,aAAanM,EAAImQ,mBAC7C9J,MAAMC,OAAOgB,SAASa,SAAUE,GAChC+H,OAAQrK,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjD0C,eAAgBqD,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAM3D,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOiB,KAAKiB,kBAAoB,SAASC,GAC7C,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOiB,KAC3B,OAAOlB,MAAMC,OAAOiB,KAAKqB,4BAA4B5I,EAAK0I,EAC5D,EAUArC,MAAMC,OAAOiB,KAAKqB,4BAA8B,SAAS5I,EAAK0I,GAC5D,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIqQ,UAAU5G,GACd,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIsQ,gBAAgB7G,GACpB,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAIuQ,iBAAiB9G,GACrB,MACF,KAAK,EACCA,EAAQ,IAAIpD,MAAMC,OAAOe,YAC7BqB,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAOe,YAAYuB,6BAClD5I,EAAIwQ,gBAAgB/G,GACpB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIyQ,cAAchH,GAClB,MACF,KAAK,EACCA,EAAgCf,EAAO0C,WAC3CpL,EAAI0Q,oBAAoBjH,GACxB,MACF,KAAK,EACCA,EAAQ,IAAIpD,MAAMC,OAAOgB,SAC7BoB,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAOgB,SAASsB,6BAC/C5I,EAAI2Q,aAAalH,GACjB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI4Q,UAAUnH,GACd,MACF,KAAK,EACCA,EAA+Bf,EAAOkC,YAC1C5K,EAAI4C,kBAAkB6G,GACtB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOiB,KAAKW,UAAUlN,gBAAkB,WAC5C,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOiB,KAAK4B,wBAAwBlN,KAAMgN,GACzCA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOiB,KAAK4B,wBAA0B,SAASE,EAASJ,GAC5D,IAAIK,OAAIlN,GACRkN,EAAID,EAAQwH,aACN1N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQyH,mBACN3N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ0H,yBACN5N,OAAS,GACb8F,EAAO6C,WACL,EACAxC,IAGJA,EAAID,EAAQ0G,uBACN5M,OAAS,GACb8F,EAAOoD,qBACL,EACA/C,EACAjD,MAAMC,OAAOe,YAAY8B,0BAG7BG,EAAID,EAAQ2H,iBACN7N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ4H,wBAEVhI,EAAOsF,UACL,EACAjF,IAGJA,EAAID,EAAQ8G,oBACNhN,OAAS,GACb8F,EAAOoD,qBACL,EACA/C,EACAjD,MAAMC,OAAOgB,SAAS6B,0BAG1BG,EAAID,EAAQ6H,aACN/N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,GAIM,KADVA,EAAID,EAAQ0D,sBAEV9D,EAAO+D,WACL,EACA1D,EAGN,EAOAjD,MAAMC,OAAOiB,KAAKW,UAAU2I,UAAY,WACtC,OAA8B9K,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAUmI,UAAY,SAAS5G,GAC/C,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAU4I,gBAAkB,WAC5C,OAA8B/K,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAUoI,gBAAkB,SAAS7G,GACrD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAUiJ,iBAAmB,WAC7C,OAA8BpL,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAOiB,KAAKW,UAAU2H,uBAAyB,WACnD,OAA8B9J,EAAKS,QAAQwF,WACvC/P,KAAKkV,mBACX,EAUA9K,MAAMC,OAAOiB,KAAKW,UAAU6I,sBAAwB,WAClD,OAAmChL,EAAKS,QAAQyF,UAC5ChQ,KAAKkV,mBACX,EAOA9K,MAAMC,OAAOiB,KAAKW,UAAUqI,iBAAmB,SAAS9G,GACtD,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAU6H,oBAAsB,WAChD,OACEhK,EAAKS,QAAQ8F,wBAAwBrQ,KAAMoK,MAAMC,OAAOe,YAAa,EACzE,EAOAhB,MAAMC,OAAOiB,KAAKW,UAAUkJ,oBAAsB,SAAS3H,GACzD,OAAO1D,EAAKS,QAAQgG,wBAAwBvQ,KAAM,EAAGwN,EACvD,EAQApD,MAAMC,OAAOiB,KAAKW,UAAUsI,gBAAkB,SAAS/D,EAAWzC,GAChE,OAAOjE,EAAKS,QAAQkG,0BAA0BzQ,KAAM,EAAGwQ,EAAWpG,MAAMC,OAAOe,YAAa2C,EAC9F,EAOA3D,MAAMC,OAAOiB,KAAKW,UAAUmJ,sBAAwB,WAClD,OAAOpV,KAAKmV,oBAAoB,GAClC,EAOA/K,MAAMC,OAAOiB,KAAKW,UAAU8I,cAAgB,WAC1C,OAA8BjL,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAUuI,cAAgB,SAAShH,GACnD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAU+I,oBAAsB,WAChD,OAA+BlL,EAAKS,QAAQ4H,2BAA2BnS,KAAM,GAAG,EAClF,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAUwI,oBAAsB,SAASjH,GACzD,OAAO1D,EAAKS,QAAQgI,sBAAsBvS,KAAM,EAAGwN,EACrD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAUiI,iBAAmB,WAC7C,OACEpK,EAAKS,QAAQ8F,wBAAwBrQ,KAAMoK,MAAMC,OAAOgB,SAAU,EACtE,EAOAjB,MAAMC,OAAOiB,KAAKW,UAAUoJ,iBAAmB,SAAS7H,GACtD,OAAO1D,EAAKS,QAAQgG,wBAAwBvQ,KAAM,EAAGwN,EACvD,EAQApD,MAAMC,OAAOiB,KAAKW,UAAUyI,aAAe,SAASlE,EAAWzC,GAC7D,OAAOjE,EAAKS,QAAQkG,0BAA0BzQ,KAAM,EAAGwQ,EAAWpG,MAAMC,OAAOgB,SAAU0C,EAC3F,EAOA3D,MAAMC,OAAOiB,KAAKW,UAAUqJ,mBAAqB,WAC/C,OAAOtV,KAAKqV,iBAAiB,GAC/B,EAOAjL,MAAMC,OAAOiB,KAAKW,UAAUgJ,UAAY,WACtC,OAA8BnL,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAU0I,UAAY,SAASnH,GAC/C,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOiB,KAAKW,UAAU6E,kBAAoB,WAC9C,OAA8BhH,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EAC1E,EAOAoK,MAAMC,OAAOiB,KAAKW,UAAUtF,kBAAoB,SAAS6G,GACvD,OAAO1D,EAAKS,QAAQ2G,kBAAkBlR,KAAM,EAAGwN,EACjD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOkB,mBAAmBU,UAAUC,SAAW,SAASC,GAC5D,OAAO/B,MAAMC,OAAOkB,mBAAmBW,SAASC,EAAqBnM,KACvE,EAYAoK,MAAMC,OAAOkB,mBAAmBW,SAAW,SAASE,EAAiBrI,GACnE,IAAIsJ,EAAGhB,EAAM,CACXoH,OAAQ3J,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDwR,UAAWlI,EAAItJ,EAAIyR,gBAAkBpL,MAAMC,OAAOgB,SAASa,SAASE,EAAiBiB,IAMvF,OAHIjB,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOkB,mBAAmBgB,kBAAoB,SAASC,GAC3D,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOkB,mBAC3B,OAAOnB,MAAMC,OAAOkB,mBAAmBoB,4BAA4B5I,EAAK0I,EAC1E,EAUArC,MAAMC,OAAOkB,mBAAmBoB,4BAA8B,SAAS5I,EAAK0I,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIqQ,UAAU5G,GACd,MACF,KAAK,EACCA,EAAQ,IAAIpD,MAAMC,OAAOgB,SAC7BoB,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAOgB,SAASsB,6BAC/C5I,EAAI0R,YAAYjI,GAChB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOkB,mBAAmBU,UAAUlN,gBAAkB,WAC1D,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOkB,mBAAmB2B,wBAAwBlN,KAAMgN,GACvDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOkB,mBAAmB2B,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIlN,GACRkN,EAAID,EAAQwH,aACN1N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,GAIK,OADTA,EAAID,EAAQoI,gBAEVxI,EAAOiE,aACL,EACA5D,EACAjD,MAAMC,OAAOgB,SAAS6B,wBAG5B,EAOA9C,MAAMC,OAAOkB,mBAAmBU,UAAU2I,UAAY,WACpD,OAA8B9K,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOkB,mBAAmBU,UAAUmI,UAAY,SAAS5G,GAC7D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOkB,mBAAmBU,UAAUuJ,YAAc,WACtD,OACE1L,EAAKS,QAAQ4G,gBAAgBnR,KAAMoK,MAAMC,OAAOgB,SAAU,EAC9D,EAOAjB,MAAMC,OAAOkB,mBAAmBU,UAAUwJ,YAAc,SAASjI,GAC/D,OAAO1D,EAAKS,QAAQ6G,gBAAgBpR,KAAM,EAAGwN,EAC/C,EAOApD,MAAMC,OAAOkB,mBAAmBU,UAAUyJ,cAAgB,WACxD,OAAO1V,KAAKyV,iBAAYtV,EAC1B,EAOAiK,MAAMC,OAAOkB,mBAAmBU,UAAU0J,YAAc,WACtD,OAAyC,MAAlC7L,EAAKS,QAAQgH,SAASvR,KAAM,EACrC,EAMI8J,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOmB,oBAAoBS,UAAUC,SAAW,SAASC,GAC7D,OAAO/B,MAAMC,OAAOmB,oBAAoBU,SAASC,EAAqBnM,KACxE,EAYAoK,MAAMC,OAAOmB,oBAAoBU,SAAW,SAASE,EAAiBrI,GACpE,IAAOsI,EAAM,CACXuJ,MAAO9L,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAChDgP,cAAehP,EAAIiP,yBACnB6C,YAAa/L,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACtD+R,QAAShM,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMpD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOmB,oBAAoBe,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOmB,oBAC3B,OAAOpB,MAAMC,OAAOmB,oBAAoBmB,4BAA4B5I,EAAK0I,EAC3E,EAUArC,MAAMC,OAAOmB,oBAAoBmB,4BAA8B,SAAS5I,EAAK0I,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIgS,SAASvI,GACb,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAIqP,iBAAiB5F,GACrB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIiS,eAAexI,GACnB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIkS,WAAWzI,GACf,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOmB,oBAAoBS,UAAUlN,gBAAkB,WAC3D,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOmB,oBAAoB0B,wBAAwBlN,KAAMgN,GACxDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOmB,oBAAoB0B,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIlN,GACRkN,EAAID,EAAQnG,YACNC,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQtJ,yBACNoD,OAAS,GACb8F,EAAO6C,WACL,EACAxC,IAGJA,EAAID,EAAQ8I,kBACNhP,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ+I,cACNjP,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOmB,oBAAoBS,UAAUhF,SAAW,WACpD,OAA8B6C,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOmB,oBAAoBS,UAAU8J,SAAW,SAASvI,GAC7D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOmB,oBAAoBS,UAAUuH,iBAAmB,WAC5D,OAA8B1J,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAOmB,oBAAoBS,UAAU+G,uBAAyB,WAClE,OAA8BlJ,EAAKS,QAAQwF,WACvC/P,KAAKwT,mBACX,EAUApJ,MAAMC,OAAOmB,oBAAoBS,UAAUnI,sBAAwB,WACjE,OAAmCgG,EAAKS,QAAQyF,UAC5ChQ,KAAKwT,mBACX,EAOApJ,MAAMC,OAAOmB,oBAAoBS,UAAUmH,iBAAmB,SAAS5F,GACrE,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAOApD,MAAMC,OAAOmB,oBAAoBS,UAAUiK,eAAiB,WAC1D,OAA8BpM,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOmB,oBAAoBS,UAAU+J,eAAiB,SAASxI,GACnE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOmB,oBAAoBS,UAAUkK,WAAa,WACtD,OAA8BrM,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOmB,oBAAoBS,UAAUgK,WAAa,SAASzI,GAC/D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOoB,iBAAiBQ,UAAUC,SAAW,SAASC,GAC1D,OAAO/B,MAAMC,OAAOoB,iBAAiBS,SAASC,EAAqBnM,KACrE,EAYAoK,MAAMC,OAAOoB,iBAAiBS,SAAW,SAASE,EAAiBrI,GACjE,IAAOsI,EAAM,CACXoD,QAAS3F,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAClDqS,eAAgBtM,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAM3D,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOoB,iBAAiBc,kBAAoB,SAASC,GACzD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOoB,iBAC3B,OAAOrB,MAAMC,OAAOoB,iBAAiBkB,4BAA4B5I,EAAK0I,EACxE,EAUArC,MAAMC,OAAOoB,iBAAiBkB,4BAA8B,SAAS5I,EAAK0I,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIpC,WAAW6L,GACf,MACF,KAAK,EACCA,EAA+Bf,EAAOkC,YAC1C5K,EAAIsS,kBAAkB7I,GACtB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOoB,iBAAiBQ,UAAUlN,gBAAkB,WACxD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOoB,iBAAiByB,wBAAwBlN,KAAMgN,GACrDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOoB,iBAAiByB,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,OAAIlN,GACRkN,EAAID,EAAQwC,cACN1I,OAAS,GACb8F,EAAOuC,YACL,EACAlC,GAIM,KADVA,EAAID,EAAQkJ,sBAEVtJ,EAAO+D,WACL,EACA1D,EAGN,EAOAjD,MAAMC,OAAOoB,iBAAiBQ,UAAU2D,WAAa,WACnD,OAA8B9F,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOoB,iBAAiBQ,UAAUtK,WAAa,SAAS6L,GAC5D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOoB,iBAAiBQ,UAAUqK,kBAAoB,WAC1D,OAA8BxM,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EAC1E,EAOAoK,MAAMC,OAAOoB,iBAAiBQ,UAAUoK,kBAAoB,SAAS7I,GACnE,OAAO1D,EAAKS,QAAQ2G,kBAAkBlR,KAAM,EAAGwN,EACjD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOqB,oBAAoBO,UAAUC,SAAW,SAASC,GAC7D,OAAO/B,MAAMC,OAAOqB,oBAAoBQ,SAASC,EAAqBnM,KACxE,EAYAoK,MAAMC,OAAOqB,oBAAoBQ,SAAW,SAASE,EAAiBrI,GACpE,IAAOsI,EAAM,CACXkK,WAAYzM,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACrDkE,QAAS6B,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAClDuD,QAASvD,EAAI6D,oBAMf,OAHIwE,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOqB,oBAAoBa,kBAAoB,SAASC,GAC5D,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOqB,oBAC3B,OAAOtB,MAAMC,OAAOqB,oBAAoBiB,4BAA4B5I,EAAK0I,EAC3E,EAUArC,MAAMC,OAAOqB,oBAAoBiB,4BAA8B,SAAS5I,EAAK0I,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIyS,cAAchJ,GAClB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI2L,WAAWlC,GACf,MACF,KAAK,EACCA,EAAoCf,EAAO0B,YAC/CpK,EAAI4L,WAAWnC,GACf,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOqB,oBAAoBO,UAAUlN,gBAAkB,WAC3D,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOqB,oBAAoBwB,wBAAwBlN,KAAMgN,GACxDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOqB,oBAAoBwB,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIlN,GACRkN,EAAID,EAAQqJ,iBACNvP,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQpF,cACNd,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ7F,mBACNL,OAAS,GACb8F,EAAO6C,WACL,EACAxC,EAGN,EAOAjD,MAAMC,OAAOqB,oBAAoBO,UAAUwK,cAAgB,WACzD,OAA8B3M,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOqB,oBAAoBO,UAAUuK,cAAgB,SAAShJ,GAClE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOqB,oBAAoBO,UAAUjE,WAAa,WACtD,OAA8B8B,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOqB,oBAAoBO,UAAUyD,WAAa,SAASlC,GAC/D,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOqB,oBAAoBO,UAAU6D,WAAa,WACtD,OAA8BhG,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAQAoK,MAAMC,OAAOqB,oBAAoBO,UAAUrE,iBAAmB,WAC5D,OAA8BkC,EAAKS,QAAQwF,WACvC/P,KAAK8P,aACX,EAUA1F,MAAMC,OAAOqB,oBAAoBO,UAAU1E,gBAAkB,WAC3D,OAAmCuC,EAAKS,QAAQyF,UAC5ChQ,KAAK8P,aACX,EAOA1F,MAAMC,OAAOqB,oBAAoBO,UAAU0D,WAAa,SAASnC,GAC/D,OAAO1D,EAAKS,QAAQ0F,oBAAoBjQ,KAAM,EAAGwN,EACnD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOsB,YAAYM,UAAUC,SAAW,SAASC,GACrD,OAAO/B,MAAMC,OAAOsB,YAAYO,SAASC,EAAqBnM,KAChE,EAYAoK,MAAMC,OAAOsB,YAAYO,SAAW,SAASE,EAAiBrI,GAC5D,IAAOsI,EAAM,CACXqK,UAAW5M,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMtD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOsB,YAAYY,kBAAoB,SAASC,GACpD,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOsB,YAC3B,OAAOvB,MAAMC,OAAOsB,YAAYgB,4BAA4B5I,EAAK0I,EACnE,EAUArC,MAAMC,OAAOsB,YAAYgB,4BAA8B,SAAS5I,EAAK0I,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAI4S,aAAanJ,EACZ,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOsB,YAAYM,UAAUlN,gBAAkB,WACnD,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOsB,YAAYuB,wBAAwBlN,KAAMgN,GAChDA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOsB,YAAYuB,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,GACJA,EAAID,EAAQwJ,gBACN1P,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOsB,YAAYM,UAAU2K,aAAe,WAChD,OAA8B9M,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOsB,YAAYM,UAAU0K,aAAe,SAASnJ,GACzD,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOuB,gCAAgCK,UAAUC,SAAW,SAASC,GACzE,OAAO/B,MAAMC,OAAOuB,gCAAgCM,SAASC,EAAqBnM,KACpF,EAYAoK,MAAMC,OAAOuB,gCAAgCM,SAAW,SAASE,EAAiBrI,GAChF,IAAOsI,EAAM,CACXpE,QAAS6B,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IAClD0P,OAAQ3J,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMnD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOuB,gCAAgCW,kBAAoB,SAASC,GACxE,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOuB,gCAC3B,OAAOxB,MAAMC,OAAOuB,gCAAgCe,4BAA4B5I,EAAK0I,EACvF,EAUArC,MAAMC,OAAOuB,gCAAgCe,4BAA8B,SAAS5I,EAAK0I,GACvF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAI2L,WAAWlC,GACf,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAIqQ,UAAU5G,GACd,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOuB,gCAAgCK,UAAUlN,gBAAkB,WACvE,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOuB,gCAAgCsB,wBAAwBlN,KAAMgN,GACpEA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOuB,gCAAgCsB,wBAA0B,SAASE,EAASJ,GACvF,IAAIK,OAAIlN,GACRkN,EAAID,EAAQpF,cACNd,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQwH,aACN1N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOuB,gCAAgCK,UAAUjE,WAAa,WAClE,OAA8B8B,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOuB,gCAAgCK,UAAUyD,WAAa,SAASlC,GAC3E,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOuB,gCAAgCK,UAAU2I,UAAY,WACjE,OAA8B9K,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOuB,gCAAgCK,UAAUmI,UAAY,SAAS5G,GAC1E,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EASApD,MAAMC,OAAOwB,yBAAyBf,gBAAkB,CAAC,GAIrDhB,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOwB,yBAAyBI,UAAUC,SAAW,SAASC,GAClE,OAAO/B,MAAMC,OAAOwB,yBAAyBK,SAASC,EAAqBnM,KAC7E,EAYAoK,MAAMC,OAAOwB,yBAAyBK,SAAW,SAASE,EAAiBrI,GACzE,IAAOsI,EAAM,CACXwK,wBAAyB/M,EAAKS,QAAQ2F,aAAanM,EAAI+S,6BACvD1M,MAAMC,OAAOuB,gCAAgCM,SAAUE,IAMzD,OAHIA,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOwB,yBAAyBU,kBAAoB,SAASC,GACjE,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOwB,yBAC3B,OAAOzB,MAAMC,OAAOwB,yBAAyBc,4BAA4B5I,EAAK0I,EAChF,EAUArC,MAAMC,OAAOwB,yBAAyBc,4BAA8B,SAAS5I,EAAK0I,GAChF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAAQ,IAAIpD,MAAMC,OAAOuB,gCAC7Ba,EAAO0D,YAAY3C,EAAMpD,MAAMC,OAAOuB,gCAAgCe,6BACtE5I,EAAIgT,uBAAuBvJ,EACtB,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOwB,yBAAyBI,UAAUlN,gBAAkB,WAChE,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOwB,yBAAyBqB,wBAAwBlN,KAAMgN,GAC7DA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOwB,yBAAyBqB,wBAA0B,SAASE,EAASJ,GAChF,IAAIK,GACJA,EAAID,EAAQ0J,8BACN5P,OAAS,GACb8F,EAAOoD,qBACL,EACA/C,EACAjD,MAAMC,OAAOuB,gCAAgCsB,wBAGnD,EAOA9C,MAAMC,OAAOwB,yBAAyBI,UAAU6K,2BAA6B,WAC3E,OACEhN,EAAKS,QAAQ8F,wBAAwBrQ,KAAMoK,MAAMC,OAAOuB,gCAAiC,EAC7F,EAOAxB,MAAMC,OAAOwB,yBAAyBI,UAAU+K,2BAA6B,SAASxJ,GACpF,OAAO1D,EAAKS,QAAQgG,wBAAwBvQ,KAAM,EAAGwN,EACvD,EAQApD,MAAMC,OAAOwB,yBAAyBI,UAAU8K,uBAAyB,SAASvG,EAAWzC,GAC3F,OAAOjE,EAAKS,QAAQkG,0BAA0BzQ,KAAM,EAAGwQ,EAAWpG,MAAMC,OAAOuB,gCAAiCmC,EAClH,EAOA3D,MAAMC,OAAOwB,yBAAyBI,UAAUgL,6BAA+B,WAC7E,OAAOjX,KAAKgX,2BAA2B,GACzC,EAMIlN,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAOyB,6BAA6BG,UAAUC,SAAW,SAASC,GACtE,OAAO/B,MAAMC,OAAOyB,6BAA6BI,SAASC,EAAqBnM,KACjF,EAYAoK,MAAMC,OAAOyB,6BAA6BI,SAAW,SAASE,EAAiBrI,GAC7E,IAAOsI,EAAM,CACXqH,aAAc5J,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACvD2F,OAAQI,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDmT,QAASpN,EAAKS,QAAQ4H,2BAA2BpO,EAAK,GAAG,GACzDoT,WAAYrN,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,GACrDqT,WAAYtN,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACrDsT,OAAQvN,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,IACjDuT,aAAcxN,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMzD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAOyB,6BAA6BS,kBAAoB,SAASC,GACrE,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAOyB,6BAC3B,OAAO1B,MAAMC,OAAOyB,6BAA6Ba,4BAA4B5I,EAAK0I,EACpF,EAUArC,MAAMC,OAAOyB,6BAA6Ba,4BAA8B,SAAS5I,EAAK0I,GACpF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIsQ,gBAAgB7G,GACpB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI0O,UAAUjF,GACd,MACF,KAAK,EACCA,EAAgCf,EAAO0C,WAC3CpL,EAAIwT,WAAW/J,GACf,MACF,KAAK,EACCA,EAAsEf,EAAO+K,WACjFzT,EAAI0T,cAAcjK,GAClB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI2T,cAAclK,GAClB,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI4T,UAAUnK,GACd,MACF,KAAK,EACCA,EAA+Bf,EAAOgB,aAC1C1J,EAAI6T,gBAAgBpK,GACpB,MACF,QACEf,EAAOM,YAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAOyB,6BAA6BG,UAAUlN,gBAAkB,WACpE,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAOyB,6BAA6BoB,wBAAwBlN,KAAMgN,GACjEA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAOyB,6BAA6BoB,wBAA0B,SAASE,EAASJ,GACpF,IAAIK,OAAIlN,GACRkN,EAAID,EAAQyH,mBACN3N,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQxL,aACNsF,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQyK,eAEV7K,EAAOsF,UACL,EACAjF,GAIM,KADVA,EAAID,EAAQ0K,kBAEV9K,EAAO+K,UACL,EACA1K,IAGJA,EAAID,EAAQ4K,iBACN9Q,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ6K,aACN/Q,OAAS,GACb8F,EAAOuC,YACL,EACAlC,IAGJA,EAAID,EAAQ8K,mBACNhR,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAOyB,6BAA6BG,UAAU4I,gBAAkB,WACpE,OAA8B/K,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAUoI,gBAAkB,SAAS7G,GAC7E,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAUrK,UAAY,WAC9D,OAA8BkI,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAUwG,UAAY,SAASjF,GACvE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAU4L,WAAa,WAC/D,OAA+B/N,EAAKS,QAAQ4H,2BAA2BnS,KAAM,GAAG,EAClF,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAUsL,WAAa,SAAS/J,GACxE,OAAO1D,EAAKS,QAAQgI,sBAAsBvS,KAAM,EAAGwN,EACrD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAU6L,cAAgB,WAClE,OAAqEhO,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,EACjH,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAUwL,cAAgB,SAASjK,GAC3E,OAAO1D,EAAKS,QAAQ4N,mBAAmBnY,KAAM,EAAGwN,EAClD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAU+L,cAAgB,WAClE,OAA8BlO,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAUyL,cAAgB,SAASlK,GAC3E,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAUgM,UAAY,WAC9D,OAA8BnO,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAU0L,UAAY,SAASnK,GACvE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAOApD,MAAMC,OAAOyB,6BAA6BG,UAAUiM,gBAAkB,WACpE,OAA8BpO,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAOyB,6BAA6BG,UAAU2L,gBAAkB,SAASpK,GAC7E,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMI1D,EAAKS,QAAQyB,qBAajB5B,MAAMC,OAAO0B,2BAA2BE,UAAUC,SAAW,SAASC,GACpE,OAAO/B,MAAMC,OAAO0B,2BAA2BG,SAASC,EAAqBnM,KAC/E,EAYAoK,MAAMC,OAAO0B,2BAA2BG,SAAW,SAASE,EAAiBrI,GAC3E,IAAOsI,EAAM,CACX+L,WAAYtO,EAAKS,QAAQ8E,oBAAoBtL,EAAK,EAAG,KAMvD,OAHIqI,IACFC,EAAIC,qBAAuBvI,GAEtBsI,CACT,GASAjC,MAAMC,OAAO0B,2BAA2BQ,kBAAoB,SAASC,GACnE,IAAIC,EAAS,IAAI3C,EAAK4C,aAAaF,GAC/BzI,EAAM,IAAIqG,MAAMC,OAAO0B,2BAC3B,OAAO3B,MAAMC,OAAO0B,2BAA2BY,4BAA4B5I,EAAK0I,EAClF,EAUArC,MAAMC,OAAO0B,2BAA2BY,4BAA8B,SAAS5I,EAAK0I,GAClF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,GACK,IAFOJ,EAAOK,iBAEnB,CACE,IAAIU,EAA+Bf,EAAOgB,aAC1C1J,EAAIsU,cAAc7K,EACb,MAELf,EAAOM,WAGX,CACA,OAAOhJ,CACT,EAOAqG,MAAMC,OAAO0B,2BAA2BE,UAAUlN,gBAAkB,WAClE,IAAIiO,EAAS,IAAIlD,EAAKmD,aAEtB,OADA7C,MAAMC,OAAO0B,2BAA2BmB,wBAAwBlN,KAAMgN,GAC/DA,EAAOG,iBAChB,EAUA/C,MAAMC,OAAO0B,2BAA2BmB,wBAA0B,SAASE,EAASJ,GAClF,IAAIK,GACJA,EAAID,EAAQkL,iBACNpR,OAAS,GACb8F,EAAOuC,YACL,EACAlC,EAGN,EAOAjD,MAAMC,OAAO0B,2BAA2BE,UAAUqM,cAAgB,WAChE,OAA8BxO,EAAKS,QAAQ8E,oBAAoBrP,KAAM,EAAG,GAC1E,EAOAoK,MAAMC,OAAO0B,2BAA2BE,UAAUoM,cAAgB,SAAS7K,GACzE,OAAO1D,EAAKS,QAAQiF,qBAAqBxP,KAAM,EAAGwN,EACpD,EAMApD,MAAMC,OAAOkO,gCAAkC,CAC7CC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,OAAQ,GAGV5O,EAAK6O,OAAOC,OAAOC,EAAS1O,MAAMC,O","sources":["proto_js/ColinkServiceClientPb.ts","lib.ts","proto_js/colink_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for colink\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\n\n\nimport * as grpcWeb from 'grpc-web';\n\nimport * as proto_colink_pb from './colink_pb';\n\n\nexport class CoLinkClient {\n  client_: grpcWeb.AbstractClientBase;\n  hostname_: string;\n  credentials_: null | { [index: string]: string; };\n  options_: null | { [index: string]: any; };\n\n  constructor (hostname: string,\n               credentials?: null | { [index: string]: string; },\n               options?: null | { [index: string]: any; }) {\n    if (!options) options = {};\n    if (!credentials) credentials = {};\n    options['format'] = 'text';\n\n    this.client_ = new grpcWeb.GrpcWebClientBase(options);\n    this.hostname_ = hostname;\n    this.credentials_ = credentials;\n    this.options_ = options;\n  }\n\n  methodDescriptorGenerateToken = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/GenerateToken',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.GenerateTokenRequest,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.GenerateTokenRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  generateToken(\n    request: proto_colink_pb.GenerateTokenRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/GenerateToken',\n        request,\n        metadata || {},\n        this.methodDescriptorGenerateToken,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/GenerateToken',\n    request,\n    metadata || {},\n    this.methodDescriptorGenerateToken);\n  }\n\n  methodDescriptorImportUser = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ImportUser',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.UserConsent,\n    proto_colink_pb.Jwt,\n    (request: proto_colink_pb.UserConsent) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Jwt.deserializeBinary\n  );\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Jwt>;\n\n  importUser(\n    request: proto_colink_pb.UserConsent,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Jwt) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ImportUser',\n        request,\n        metadata || {},\n        this.methodDescriptorImportUser,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ImportUser',\n    request,\n    metadata || {},\n    this.methodDescriptorImportUser);\n  }\n\n  methodDescriptorCreateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  createEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateEntry);\n  }\n\n  methodDescriptorReadEntries = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadEntries',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntries,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.StorageEntries) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readEntries(\n    request: proto_colink_pb.StorageEntries,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadEntries',\n        request,\n        metadata || {},\n        this.methodDescriptorReadEntries,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadEntries',\n    request,\n    metadata || {},\n    this.methodDescriptorReadEntries);\n  }\n\n  methodDescriptorUpdateEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/UpdateEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  updateEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/UpdateEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorUpdateEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/UpdateEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorUpdateEntry);\n  }\n\n  methodDescriptorDeleteEntry = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/DeleteEntry',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StorageEntry,\n    proto_colink_pb.StorageEntry,\n    (request: proto_colink_pb.StorageEntry) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntry.deserializeBinary\n  );\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntry>;\n\n  deleteEntry(\n    request: proto_colink_pb.StorageEntry,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntry) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/DeleteEntry',\n        request,\n        metadata || {},\n        this.methodDescriptorDeleteEntry,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/DeleteEntry',\n    request,\n    metadata || {},\n    this.methodDescriptorDeleteEntry);\n  }\n\n  methodDescriptorReadKeys = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ReadKeys',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ReadKeysRequest,\n    proto_colink_pb.StorageEntries,\n    (request: proto_colink_pb.ReadKeysRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.StorageEntries.deserializeBinary\n  );\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void): grpcWeb.ClientReadableStream<proto_colink_pb.StorageEntries>;\n\n  readKeys(\n    request: proto_colink_pb.ReadKeysRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.StorageEntries) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ReadKeys',\n        request,\n        metadata || {},\n        this.methodDescriptorReadKeys,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ReadKeys',\n    request,\n    metadata || {},\n    this.methodDescriptorReadKeys);\n  }\n\n  methodDescriptorCreateTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/CreateTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Task>;\n\n  createTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Task) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/CreateTask',\n        request,\n        metadata || {},\n        this.methodDescriptorCreateTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/CreateTask',\n    request,\n    metadata || {},\n    this.methodDescriptorCreateTask);\n  }\n\n  methodDescriptorConfirmTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/ConfirmTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ConfirmTaskRequest,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ConfirmTaskRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  confirmTask(\n    request: proto_colink_pb.ConfirmTaskRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/ConfirmTask',\n        request,\n        metadata || {},\n        this.methodDescriptorConfirmTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/ConfirmTask',\n    request,\n    metadata || {},\n    this.methodDescriptorConfirmTask);\n  }\n\n  methodDescriptorFinishTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/FinishTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  finishTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/FinishTask',\n        request,\n        metadata || {},\n        this.methodDescriptorFinishTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/FinishTask',\n    request,\n    metadata || {},\n    this.methodDescriptorFinishTask);\n  }\n\n  methodDescriptorRequestInfo = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/RequestInfo',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Empty,\n    proto_colink_pb.RequestInfoResponse,\n    (request: proto_colink_pb.Empty) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.RequestInfoResponse.deserializeBinary\n  );\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void): grpcWeb.ClientReadableStream<proto_colink_pb.RequestInfoResponse>;\n\n  requestInfo(\n    request: proto_colink_pb.Empty,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.RequestInfoResponse) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/RequestInfo',\n        request,\n        metadata || {},\n        this.methodDescriptorRequestInfo,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/RequestInfo',\n    request,\n    metadata || {},\n    this.methodDescriptorRequestInfo);\n  }\n\n  methodDescriptorSubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Subscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.SubscribeRequest,\n    proto_colink_pb.MQQueueName,\n    (request: proto_colink_pb.SubscribeRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.MQQueueName.deserializeBinary\n  );\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void): grpcWeb.ClientReadableStream<proto_colink_pb.MQQueueName>;\n\n  subscribe(\n    request: proto_colink_pb.SubscribeRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.MQQueueName) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Subscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorSubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Subscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorSubscribe);\n  }\n\n  methodDescriptorUnsubscribe = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/Unsubscribe',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.MQQueueName,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.MQQueueName) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  unsubscribe(\n    request: proto_colink_pb.MQQueueName,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/Unsubscribe',\n        request,\n        metadata || {},\n        this.methodDescriptorUnsubscribe,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/Unsubscribe',\n    request,\n    metadata || {},\n    this.methodDescriptorUnsubscribe);\n  }\n\n  methodDescriptorStartProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StartProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.StartProtocolOperatorRequest,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    (request: proto_colink_pb.StartProtocolOperatorRequest) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.ProtocolOperatorInstanceId.deserializeBinary\n  );\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void): grpcWeb.ClientReadableStream<proto_colink_pb.ProtocolOperatorInstanceId>;\n\n  startProtocolOperator(\n    request: proto_colink_pb.StartProtocolOperatorRequest,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.ProtocolOperatorInstanceId) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StartProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStartProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StartProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStartProtocolOperator);\n  }\n\n  methodDescriptorStopProtocolOperator = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/StopProtocolOperator',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.ProtocolOperatorInstanceId,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.ProtocolOperatorInstanceId) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  stopProtocolOperator(\n    request: proto_colink_pb.ProtocolOperatorInstanceId,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/StopProtocolOperator',\n        request,\n        metadata || {},\n        this.methodDescriptorStopProtocolOperator,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/StopProtocolOperator',\n    request,\n    metadata || {},\n    this.methodDescriptorStopProtocolOperator);\n  }\n\n  methodDescriptorInterCoreSyncTask = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTask',\n    grpcWeb.MethodType.UNARY,\n    proto_colink_pb.Task,\n    proto_colink_pb.Empty,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Empty.deserializeBinary\n  );\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null): Promise<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void): grpcWeb.ClientReadableStream<proto_colink_pb.Empty>;\n\n  interCoreSyncTask(\n    request: proto_colink_pb.Task,\n    metadata: grpcWeb.Metadata | null,\n    callback?: (err: grpcWeb.RpcError,\n               response: proto_colink_pb.Empty) => void) {\n    if (callback !== undefined) {\n      return this.client_.rpcCall(\n        this.hostname_ +\n          '/colink.CoLink/InterCoreSyncTask',\n        request,\n        metadata || {},\n        this.methodDescriptorInterCoreSyncTask,\n        callback);\n    }\n    return this.client_.unaryCall(\n    this.hostname_ +\n      '/colink.CoLink/InterCoreSyncTask',\n    request,\n    metadata || {},\n    this.methodDescriptorInterCoreSyncTask);\n  }\n\n  methodDescriptorInterCoreSyncTaskWithReverseConnection = new grpcWeb.MethodDescriptor(\n    '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n    grpcWeb.MethodType.SERVER_STREAMING,\n    proto_colink_pb.Task,\n    proto_colink_pb.Task,\n    (request: proto_colink_pb.Task) => {\n      return request.serializeBinary();\n    },\n    proto_colink_pb.Task.deserializeBinary\n  );\n\n  interCoreSyncTaskWithReverseConnection(\n    request: proto_colink_pb.Task,\n    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<proto_colink_pb.Task> {\n    return this.client_.serverStreaming(\n      this.hostname_ +\n        '/colink.CoLink/InterCoreSyncTaskWithReverseConnection',\n      request,\n      metadata || {},\n      this.methodDescriptorInterCoreSyncTaskWithReverseConnection);\n  }\n\n}\n\n","/* TEMPORARY FILE - will convert to npm package in the future via colink-sdk-a-js-dev */\n\nimport {\n  RequestInfoResponse,\n  Empty,\n  UserConsent,\n  Jwt,\n  GenerateTokenRequest,\n  StorageEntry,\n  StorageEntries,\n  ReadKeysRequest,\n} from './proto_js/colink_pb'\nimport { CoLinkClient } from './proto_js/ColinkServiceClientPb'\nimport secp256k1 from 'secp256k1'\nimport { Buffer } from 'buffer'\nimport { ethers } from 'ethers'\nimport { Metadata } from 'grpc-web'\nimport crypto from 'crypto'\n\n// Required for grpc-web on SSR\nglobal.XMLHttpRequest = require('xhr2')\n\n// Required for MetaMask wallet detection\ndeclare let window: any\n\n/* Utility functions */\nfunction getClient(input: string | CoLinkClient): CoLinkClient {\n  if (typeof input === 'string') {\n    return new CoLinkClient(input)\n  } else {\n    return input\n  }\n}\n\nexport async function verifyClient(input: string | CoLinkClient): Promise<boolean> {\n  let client: CoLinkClient\n  if (typeof input === 'string') {\n    client = new CoLinkClient(input)\n  } else {\n    client = input\n  }\n\n  let response: boolean = false\n  let coreReq: Empty = new Empty()\n  await client\n    .requestInfo(coreReq, getMetadata(''))\n    .then((resp: RequestInfoResponse) => {\n      response = true\n    })\n    .catch((err: Error) => {\n      response = false\n    })\n  return Promise.resolve(response)\n}\n\nfunction getMetadata(jwt: string): {} {\n  // set metadata with admin token\n  let meta = { authorization: jwt }\n  return meta\n}\n\nfunction getNameEntry(input: string | StorageEntry): StorageEntry {\n  if (typeof input === 'string') {\n    let entry: StorageEntry = new StorageEntry()\n    entry.setKeyName(input)\n    return entry\n  } else {\n    return input\n  }\n}\n\nexport function getUserId(jwt: string): string {\n  let encodedId: string = jwt.split('.')[1]\n  let userId: string = JSON.parse(Buffer.from(encodedId, 'base64').toString()).user_id\n  return userId\n}\n\nfunction i2hex(i: Uint8Array): string {\n  return Buffer.from(i).toString('hex')\n}\n\n/* Handles USER DATA (private keys, Jwts, etc) */\nexport class UserData {\n  privateKey: string\n  userJwt: string\n\n  constructor(pk: string, jwt: string) {\n    this.privateKey = pk\n    this.userJwt = jwt\n  }\n}\n\nexport class Consent {\n  consent: UserConsent\n\n  constructor(c: UserConsent) {\n    this.consent = c\n  }\n}\n\nasync function getUserConsentPK(\n  client: CoLinkClient,\n  meta: Metadata | null,\n  pubKey: Uint8Array,\n  privKey: Uint8Array,\n  expirationTimestamp?: number,\n): Promise<UserConsent> {\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeBuf: Buffer = Buffer.alloc(8)\n  sigTimeBuf.writeBigUInt64LE(BigInt(sigTime))\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n\n  let expTimeBuf: Buffer = Buffer.alloc(8)\n  expTimeBuf.writeBigUInt64LE(BigInt(expTime))\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: Uint8Array = response.getCorePublicKey_asU8()\n\n  // prep signature + request\n  let msg: Buffer = Buffer.concat([pubKey, sigTimeBuf, expTimeBuf, corePubKey])\n  let hash = crypto.createHash('sha256').update(msg).digest('hex')\n  let signature: Uint8Array = secp256k1.ecdsaSign(Buffer.from(hash, 'hex'), privKey).signature\n  let request: UserConsent = new UserConsent()\n  request.setPublicKey(pubKey)\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(signature)\n  request.setExpirationTimestamp(expTime)\n\n  return request\n}\n\nexport async function getUserConsentMM(\n  address: CoLinkClient | string,\n  meta: Metadata | null,\n  expirationTimestamp?: number,\n): Promise<Consent> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // connect to MetaMask wallet\n  if (!window.ethereum) throw new Error('No crypto wallet found. Please install it.')\n\n  await window.ethereum.request({\n    method: 'eth_requestAccounts',\n  })\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum)\n  const signer = provider.getSigner()\n\n  // get timestamps\n  let sigTime: number = parseInt((Date.now() / 1000).toFixed()) // Date.now() returns milliseconds, must convert to seconds\n  let sigTimeStr: string = sigTime.toString()\n\n  let expTime: number\n  if (typeof expirationTimestamp !== 'undefined' && expirationTimestamp !== 0) {\n    expTime = expirationTimestamp\n  } else {\n    expTime = sigTime + 86400 * 31 // 31 day expiration date by default\n  }\n  let expTimeStr: string = expTime.toString()\n\n  // get core public key\n  let coreReq: Empty = new Empty()\n  let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n  let corePubKey: string = i2hex(response.getCorePublicKey_asU8())\n\n  // prep signature + request\n  let msg: string = `sigTime: ${sigTimeStr}\\nexpTime: ${expTimeStr}\\ncorePubKey: ${corePubKey}\\n`\n\n  let signature = await signer.signMessage(msg)\n  let sigBuf = Buffer.from(signature.slice(2), 'hex')\n\n  let request: UserConsent = new UserConsent()\n  request.setSignatureTimestamp(sigTime)\n  request.setSignature(sigBuf)\n  request.setExpirationTimestamp(expTime)\n\n  return new Consent(request)\n}\n\nexport async function generateKeyAndJwt(\n  address: string | CoLinkClient,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  console.log(crypto)\n  let privateKey: string = Buffer.from(crypto.randomBytes(32)).toString('hex')\n  return generateJwtFromKey(address, privateKey, hostToken, expirationTimestamp)\n}\n\nexport async function generateJwtFromKey(\n  address: string | CoLinkClient,\n  privateKey: string,\n  hostToken: string,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n\n  // generate new (pubKey, privKey) pair with privateKey\n  let privKey: Uint8Array = Uint8Array.from(Buffer.from(privateKey, 'hex'))\n  let pubKey: Uint8Array = secp256k1.publicKeyCreate(privKey, true)\n\n  let request: UserConsent = await getUserConsentPK(\n    client,\n    meta,\n    pubKey,\n    privKey,\n    expirationTimestamp,\n  )\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client.importUser(request, meta).then((jwt: Jwt) => {\n    jwtToken = jwt.getJwt()\n  })\n\n  return Promise.resolve(new UserData(privateKey, jwtToken))\n}\n\nexport async function generateJwtMetaMask(\n  address: string | CoLinkClient,\n  hostToken: string,\n  consent?: Consent,\n  expirationTimestamp?: number,\n): Promise<UserData> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  // set metadata with admin token\n  let meta: Metadata = getMetadata(hostToken)\n  let request: UserConsent\n\n  if (typeof consent === 'undefined') {\n    request = (await getUserConsentMM(client, meta, expirationTimestamp)).consent\n  } else {\n    request = consent.consent\n  }\n\n  // initiate jwt request\n  let jwtToken: string = ''\n  await client\n    .importUser(request, meta)\n    .then((jwt: Jwt) => {\n      jwtToken = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      alert(err)\n    })\n\n  return Promise.resolve(new UserData('', jwtToken))\n}\n\nexport async function generateToken(\n  address: string | CoLinkClient,\n  oldJwt: string,\n  consent?: Consent,\n  expirationTime?: number,\n): Promise<string> {\n  // generate CoLinkClient connection\n  let client: CoLinkClient = getClient(address)\n\n  let meta: Metadata = getMetadata(oldJwt)\n\n  let request: GenerateTokenRequest = new GenerateTokenRequest()\n  if (typeof expirationTime !== 'undefined') {\n    request.setExpirationTime(expirationTime)\n  } else {\n    request.setExpirationTime(daysToTimestamp(31)) // 31 day default\n  }\n\n  if (typeof consent !== 'undefined') {\n    request.setUserConsent(consent.consent)\n  }\n\n  request.setPrivilege('user')\n\n  let newJwt: string = ''\n  await client\n    .generateToken(request, meta)\n    .then((jwt: Jwt) => {\n      newJwt = jwt.getJwt()\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return Promise.resolve(newJwt)\n}\n\nexport async function validateJwtAndPrivilege(\n  address: string | CoLinkClient,\n  jwt: string,\n): Promise<string> {\n  let meta = getMetadata(jwt)\n  let client: CoLinkClient = getClient(address)\n  let coreReq: Empty = new Empty()\n  try {\n    let response: RequestInfoResponse = await client.requestInfo(coreReq, meta)\n    if (response.getMqUri().length > 0) {\n      return 'user'\n    } else {\n      return 'host'\n    }\n  } catch (err) {\n    return 'invalid'\n  }\n}\n\nexport function daysToTimestamp(days: number) {\n  let currentTime: number = parseInt((Date.now() / 1000).toFixed()) // convert milliseconds to seconds\n  return currentTime + 86400 * days\n}\n\n/* Handles STORAGE OPERATIONS (read, write, update, etc.) */\nexport function storageEntryToJSON(entry: StorageEntry, displayTab: number) {\n  // 1: Binary\n  // 2: Base64\n  // 3: String\n  // 4: JSON\n\n  let payload: string\n  if (displayTab === 1) {\n    payload = entry\n      .getPayload_asU8()\n      .reduce((str, byte) => str + byte.toString(2).padStart(8, '0'), '')\n  } else if (displayTab === 2) {\n    payload = entry.getPayload_asB64()\n  } else {\n    try {\n      payload = atob(entry.getPayload_asB64())\n    } catch {\n      payload = 'unsupported'\n    }\n  }\n\n  return {\n    name: keyNameFromPath(entry.getKeyPath()),\n    keyPath: entry.getKeyPath(),\n    payload: payload,\n  }\n}\n\nexport function keyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    return matches[1]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport function lastKeyNameFromPath(keyPath: string): string {\n  const pattern = /::(.+)@/\n  let matches = keyPath.match(pattern)\n  if (matches != null) {\n    let match: string = matches[1]\n    if (match.split(':').length === 1) {\n      return match\n    }\n    return match.split(':').slice(-1)[0]\n  }\n  throw Error('Error in keyPath parsing')\n}\n\nexport async function createEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  keyname: string,\n  payload: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  request.setKeyName(keyname)\n  request.setPayload(payload)\n\n  let meta = getMetadata(jwt)\n\n  let newEntry: StorageEntry = new StorageEntry()\n  await client\n    .createEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      newEntry = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(newEntry)\n}\n\nexport async function readEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  entry: string | StorageEntry,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n  let nameEntry: StorageEntry = getNameEntry(entry)\n\n  let request: StorageEntries = new StorageEntries()\n  request.addEntries(nameEntry)\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .readEntries(request, meta)\n    .then((entriesList: StorageEntries) => {\n      response = entriesList.getEntriesList()[0]\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function updateEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n  newContents: string,\n): Promise<StorageEntry> {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n  request.setPayload(newContents)\n\n  let meta = getMetadata(jwt)\n\n  let response: StorageEntry = new StorageEntry()\n  await client\n    .updateEntry(request, meta)\n    .then((entry: StorageEntry) => {\n      response = entry\n    })\n    .catch((err) => {\n      alert(err)\n    })\n  return Promise.resolve(response)\n}\n\nexport async function deleteEntry(\n  address: string | CoLinkClient,\n  jwt: string,\n  oldEntry: string | StorageEntry,\n) {\n  let client: CoLinkClient = getClient(address)\n\n  let request: StorageEntry = new StorageEntry()\n  if (typeof oldEntry === 'string') {\n    request.setKeyName(oldEntry)\n  } else {\n    request.setKeyName(keyNameFromPath(oldEntry.getKeyPath()))\n  }\n\n  let meta = getMetadata(jwt)\n\n  await client.deleteEntry(request, meta).catch((err: Error) => {\n    alert(err)\n  })\n}\n\nexport async function getUserStorageEntries(\n  address: string | CoLinkClient,\n  jwt: string,\n  prefix?: string,\n): Promise<StorageEntry[]> {\n  let client: CoLinkClient = getClient(address)\n\n  let entries: StorageEntry[] = []\n  let meta = getMetadata(jwt)\n\n  async function updateEntries(prefix: string): Promise<string[]> {\n    let req: ReadKeysRequest = new ReadKeysRequest()\n    req.setPrefix(prefix)\n    req.setIncludeHistory(false)\n\n    let newPrefixes: string[] = []\n    await client\n      .readKeys(req, meta)\n      .then((response) => {\n        let newEntries: StorageEntry[] = response.getEntriesList()\n        entries = entries.concat(newEntries)\n        newPrefixes = newEntries.map((entry: StorageEntry) => {\n          return prefix + ':' + lastKeyNameFromPath(entry.getKeyPath())\n        })\n      })\n      .catch((err) => {\n        alert(err)\n      })\n\n    return newPrefixes\n  }\n\n  let keyPrefixes: string[]\n  if (typeof prefix !== 'undefined') {\n    keyPrefixes = [prefix]\n  } else {\n    let userId: string = getUserId(jwt)\n    keyPrefixes = [userId + ':']\n  }\n\n  /* Generates all layers psuedo-recursively */\n  // while (keyPrefixes.length > 0) {\n  //     for (let prefix of keyPrefixes) {\n  //         let newKeys: string[] = await updateEntries(prefix);\n  //         keyPrefixes = keyPrefixes.concat(newKeys).slice(1);\n  //     }\n  // }\n\n  /* Generates one layer */\n  for (let prefix of keyPrefixes) {\n    keyPrefixes = keyPrefixes.concat(await updateEntries(prefix)).slice(1)\n  }\n\n  entries.sort((a, b) => {\n    return keyNameFromPath(a.getKeyPath()) < keyNameFromPath(b.getKeyPath()) ? -1 : 1\n  })\n  return Promise.resolve(entries)\n}\n","// source: proto/colink.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {missingRequire} reports error on implicit type usages.\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n// @ts-nocheck\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = (function() { return this || window || global || self || Function('return this')(); }).call(null);\n\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDList', null, global);\ngoog.exportSymbol('proto.colink.CoLinkInternalTaskIDWithKeyPath', null, global);\ngoog.exportSymbol('proto.colink.ConfirmTaskRequest', null, global);\ngoog.exportSymbol('proto.colink.Decision', null, global);\ngoog.exportSymbol('proto.colink.Empty', null, global);\ngoog.exportSymbol('proto.colink.GenerateTokenRequest', null, global);\ngoog.exportSymbol('proto.colink.Jwt', null, global);\ngoog.exportSymbol('proto.colink.ListOfBool', null, global);\ngoog.exportSymbol('proto.colink.ListOfBytes', null, global);\ngoog.exportSymbol('proto.colink.ListOfFloat', null, global);\ngoog.exportSymbol('proto.colink.ListOfInt64', null, global);\ngoog.exportSymbol('proto.colink.ListOfString', null, global);\ngoog.exportSymbol('proto.colink.MQQueueName', null, global);\ngoog.exportSymbol('proto.colink.Participant', null, global);\ngoog.exportSymbol('proto.colink.ProtocolOperatorInstanceId', null, global);\ngoog.exportSymbol('proto.colink.ReadKeysRequest', null, global);\ngoog.exportSymbol('proto.colink.RequestInfoResponse', null, global);\ngoog.exportSymbol('proto.colink.StartProtocolOperatorRequest', null, global);\ngoog.exportSymbol('proto.colink.StartProtocolOperatorSourceType', null, global);\ngoog.exportSymbol('proto.colink.StorageEntries', null, global);\ngoog.exportSymbol('proto.colink.StorageEntry', null, global);\ngoog.exportSymbol('proto.colink.SubscribeRequest', null, global);\ngoog.exportSymbol('proto.colink.SubscriptionMessage', null, global);\ngoog.exportSymbol('proto.colink.Task', null, global);\ngoog.exportSymbol('proto.colink.UserConsent', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Empty.displayName = 'proto.colink.Empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfString = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfString.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfString, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfString.displayName = 'proto.colink.ListOfString';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBytes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBytes.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBytes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBytes.displayName = 'proto.colink.ListOfBytes';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfInt64 = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfInt64.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfInt64, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfInt64.displayName = 'proto.colink.ListOfInt64';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfFloat = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfFloat.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfFloat, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfFloat.displayName = 'proto.colink.ListOfFloat';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ListOfBool = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.ListOfBool.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.ListOfBool, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ListOfBool.displayName = 'proto.colink.ListOfBool';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Jwt = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Jwt, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Jwt.displayName = 'proto.colink.Jwt';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntry = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StorageEntry, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntry.displayName = 'proto.colink.StorageEntry';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StorageEntries = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.StorageEntries.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.StorageEntries, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StorageEntries.displayName = 'proto.colink.StorageEntries';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.GenerateTokenRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.GenerateTokenRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.GenerateTokenRequest.displayName = 'proto.colink.GenerateTokenRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.UserConsent = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.UserConsent, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.UserConsent.displayName = 'proto.colink.UserConsent';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ReadKeysRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ReadKeysRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ReadKeysRequest.displayName = 'proto.colink.ReadKeysRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Participant = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Participant, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Participant.displayName = 'proto.colink.Participant';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Decision = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.Decision, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Decision.displayName = 'proto.colink.Decision';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.Task = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.Task.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.Task, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.Task.displayName = 'proto.colink.Task';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ConfirmTaskRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ConfirmTaskRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ConfirmTaskRequest.displayName = 'proto.colink.ConfirmTaskRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.RequestInfoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.RequestInfoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.RequestInfoResponse.displayName = 'proto.colink.RequestInfoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscribeRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscribeRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscribeRequest.displayName = 'proto.colink.SubscribeRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.SubscriptionMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.SubscriptionMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.SubscriptionMessage.displayName = 'proto.colink.SubscriptionMessage';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.MQQueueName = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.MQQueueName, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.MQQueueName.displayName = 'proto.colink.MQQueueName';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDWithKeyPath, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.displayName = 'proto.colink.CoLinkInternalTaskIDWithKeyPath';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.CoLinkInternalTaskIDList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.colink.CoLinkInternalTaskIDList.repeatedFields_, null);\n};\ngoog.inherits(proto.colink.CoLinkInternalTaskIDList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.CoLinkInternalTaskIDList.displayName = 'proto.colink.CoLinkInternalTaskIDList';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.StartProtocolOperatorRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.StartProtocolOperatorRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.StartProtocolOperatorRequest.displayName = 'proto.colink.StartProtocolOperatorRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.colink.ProtocolOperatorInstanceId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.colink.ProtocolOperatorInstanceId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.colink.ProtocolOperatorInstanceId.displayName = 'proto.colink.ProtocolOperatorInstanceId';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Empty;\n  return proto.colink.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Empty}\n */\nproto.colink.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfString.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfString.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfString.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfString} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfString;\n  return proto.colink.ListOfString.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfString} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfString}\n */\nproto.colink.ListOfString.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfString.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfString.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfString} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfString.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated string list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfString.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfString} returns this\n */\nproto.colink.ListOfString.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBytes.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBytes.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBytes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBytes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: msg.getListList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBytes;\n  return proto.colink.ListOfBytes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBytes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBytes}\n */\nproto.colink.ListOfBytes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBytes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBytes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBytes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBytes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bytes list = 1;\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * repeated bytes list = 1;\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<string>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asB64 = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(\n      this.getListList()));\n};\n\n\n/**\n * repeated bytes list = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getListList()`\n * @return {!Array<!Uint8Array>}\n */\nproto.colink.ListOfBytes.prototype.getListList_asU8 = function() {\n  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getListList()));\n};\n\n\n/**\n * @param {!(Array<!Uint8Array>|Array<string>)} value\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBytes} returns this\n */\nproto.colink.ListOfBytes.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfInt64.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfInt64.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfInt64.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfInt64} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfInt64;\n  return proto.colink.ListOfInt64.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfInt64} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfInt64}\n */\nproto.colink.ListOfInt64.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfInt64.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfInt64.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfInt64} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfInt64.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated int64 list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfInt64.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfInt64} returns this\n */\nproto.colink.ListOfInt64.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfFloat.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfFloat.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfFloat.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfFloat} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfFloat;\n  return proto.colink.ListOfFloat.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfFloat} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfFloat}\n */\nproto.colink.ListOfFloat.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfFloat.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfFloat.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfFloat} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfFloat.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedFloat(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated float list = 1;\n * @return {!Array<number>}\n */\nproto.colink.ListOfFloat.prototype.getListList = function() {\n  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));\n};\n\n\n/**\n * @param {!Array<number>} value\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {number} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfFloat} returns this\n */\nproto.colink.ListOfFloat.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.ListOfBool.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ListOfBool.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ListOfBool.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ListOfBool} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    listList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ListOfBool;\n  return proto.colink.ListOfBool.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ListOfBool} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ListOfBool}\n */\nproto.colink.ListOfBool.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);\n      for (var i = 0; i < values.length; i++) {\n        msg.addList(values[i]);\n      }\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ListOfBool.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ListOfBool.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ListOfBool} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ListOfBool.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getListList();\n  if (f.length > 0) {\n    writer.writePackedBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * repeated bool list = 1;\n * @return {!Array<boolean>}\n */\nproto.colink.ListOfBool.prototype.getListList = function() {\n  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));\n};\n\n\n/**\n * @param {!Array<boolean>} value\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.setListList = function(value) {\n  return jspb.Message.setField(this, 1, value || []);\n};\n\n\n/**\n * @param {boolean} value\n * @param {number=} opt_index\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.addList = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.ListOfBool} returns this\n */\nproto.colink.ListOfBool.prototype.clearListList = function() {\n  return this.setListList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Jwt.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Jwt.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Jwt} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    jwt: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Jwt;\n  return proto.colink.Jwt.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Jwt} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Jwt}\n */\nproto.colink.Jwt.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setJwt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Jwt.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Jwt.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Jwt} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Jwt.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getJwt();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string jwt = 1;\n * @return {string}\n */\nproto.colink.Jwt.prototype.getJwt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Jwt} returns this\n */\nproto.colink.Jwt.prototype.setJwt = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntry.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntry.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntry} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntry;\n  return proto.colink.StorageEntry.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntry} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntry.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntry.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntry} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntry.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.StorageEntry.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntry.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.StorageEntry} returns this\n */\nproto.colink.StorageEntry.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.StorageEntries.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StorageEntries.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StorageEntries.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StorageEntries} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),\n    proto.colink.StorageEntry.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StorageEntries;\n  return proto.colink.StorageEntries.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StorageEntries} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StorageEntries}\n */\nproto.colink.StorageEntries.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.StorageEntry;\n      reader.readMessage(value,proto.colink.StorageEntry.deserializeBinaryFromReader);\n      msg.addEntries(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StorageEntries.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StorageEntries.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StorageEntries} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StorageEntries.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEntriesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.StorageEntry.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated StorageEntry entries = 1;\n * @return {!Array<!proto.colink.StorageEntry>}\n */\nproto.colink.StorageEntries.prototype.getEntriesList = function() {\n  return /** @type{!Array<!proto.colink.StorageEntry>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.StorageEntry, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.StorageEntry>} value\n * @return {!proto.colink.StorageEntries} returns this\n*/\nproto.colink.StorageEntries.prototype.setEntriesList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.StorageEntry=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.StorageEntry}\n */\nproto.colink.StorageEntries.prototype.addEntries = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.StorageEntry, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.StorageEntries} returns this\n */\nproto.colink.StorageEntries.prototype.clearEntriesList = function() {\n  return this.setEntriesList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.GenerateTokenRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.GenerateTokenRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.GenerateTokenRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    privilege: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.GenerateTokenRequest;\n  return proto.colink.GenerateTokenRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.GenerateTokenRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.GenerateTokenRequest}\n */\nproto.colink.GenerateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrivilege(value);\n      break;\n    case 3:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.GenerateTokenRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.GenerateTokenRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.GenerateTokenRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.GenerateTokenRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPrivilege();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      3,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional int64 expiration_time = 1;\n * @return {number}\n */\nproto.colink.GenerateTokenRequest.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string privilege = 2;\n * @return {string}\n */\nproto.colink.GenerateTokenRequest.prototype.getPrivilege = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.setPrivilege = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 3;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.GenerateTokenRequest.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 3));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.GenerateTokenRequest} returns this\n*/\nproto.colink.GenerateTokenRequest.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 3, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.GenerateTokenRequest} returns this\n */\nproto.colink.GenerateTokenRequest.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.GenerateTokenRequest.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 3) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.UserConsent.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.UserConsent.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.UserConsent} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    publicKey: msg.getPublicKey_asB64(),\n    signatureTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    expirationTimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.UserConsent;\n  return proto.colink.UserConsent.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.UserConsent} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.UserConsent}\n */\nproto.colink.UserConsent.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPublicKey(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setSignatureTimestamp(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTimestamp(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.UserConsent.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.UserConsent} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.UserConsent.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getSignatureTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getExpirationTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes public_key = 1;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPublicKey()));\n};\n\n\n/**\n * optional bytes public_key = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getPublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setPublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 signature_timestamp = 2;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getSignatureTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignatureTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 expiration_timestamp = 4;\n * @return {number}\n */\nproto.colink.UserConsent.prototype.getExpirationTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setExpirationTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional bytes signature = 3;\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes signature = 3;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.UserConsent.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.UserConsent.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.UserConsent} returns this\n */\nproto.colink.UserConsent.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ReadKeysRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ReadKeysRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ReadKeysRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    prefix: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    includeHistory: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ReadKeysRequest;\n  return proto.colink.ReadKeysRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ReadKeysRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ReadKeysRequest}\n */\nproto.colink.ReadKeysRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPrefix(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIncludeHistory(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ReadKeysRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ReadKeysRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ReadKeysRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ReadKeysRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPrefix();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getIncludeHistory();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string prefix = 1;\n * @return {string}\n */\nproto.colink.ReadKeysRequest.prototype.getPrefix = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setPrefix = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bool include_history = 2;\n * @return {boolean}\n */\nproto.colink.ReadKeysRequest.prototype.getIncludeHistory = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.ReadKeysRequest} returns this\n */\nproto.colink.ReadKeysRequest.prototype.setIncludeHistory = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Participant.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Participant.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Participant} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    role: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Participant;\n  return proto.colink.Participant.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Participant} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Participant}\n */\nproto.colink.Participant.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRole(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Participant.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Participant.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Participant} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Participant.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getRole();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string user_id = 1;\n * @return {string}\n */\nproto.colink.Participant.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string role = 2;\n * @return {string}\n */\nproto.colink.Participant.prototype.getRole = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Participant} returns this\n */\nproto.colink.Participant.prototype.setRole = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Decision.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Decision.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Decision} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    isApproved: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),\n    isRejected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),\n    reason: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    signature: msg.getSignature_asB64(),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    userConsent: (f = msg.getUserConsent()) && proto.colink.UserConsent.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Decision;\n  return proto.colink.Decision.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Decision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Decision}\n */\nproto.colink.Decision.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsApproved(value);\n      break;\n    case 2:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsRejected(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setReason(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    case 5:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 6:\n      var value = new proto.colink.UserConsent;\n      reader.readMessage(value,proto.colink.UserConsent.deserializeBinaryFromReader);\n      msg.setUserConsent(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Decision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Decision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Decision.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIsApproved();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getIsRejected();\n  if (f) {\n    writer.writeBool(\n      2,\n      f\n    );\n  }\n  f = message.getReason();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      5,\n      f\n    );\n  }\n  f = message.getUserConsent();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.colink.UserConsent.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bool is_approved = 1;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsApproved = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsApproved = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional bool is_rejected = 2;\n * @return {boolean}\n */\nproto.colink.Decision.prototype.getIsRejected = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setIsRejected = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 2, value);\n};\n\n\n/**\n * optional string reason = 3;\n * @return {string}\n */\nproto.colink.Decision.prototype.getReason = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setReason = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional bytes signature = 4;\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes signature = 4;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setSignature = function(value) {\n  return jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 5;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.Decision.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 5, value);\n};\n\n\n/**\n * optional UserConsent user_consent = 6;\n * @return {?proto.colink.UserConsent}\n */\nproto.colink.Decision.prototype.getUserConsent = function() {\n  return /** @type{?proto.colink.UserConsent} */ (\n    jspb.Message.getWrapperField(this, proto.colink.UserConsent, 6));\n};\n\n\n/**\n * @param {?proto.colink.UserConsent|undefined} value\n * @return {!proto.colink.Decision} returns this\n*/\nproto.colink.Decision.prototype.setUserConsent = function(value) {\n  return jspb.Message.setWrapperField(this, 6, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.Decision} returns this\n */\nproto.colink.Decision.prototype.clearUserConsent = function() {\n  return this.setUserConsent(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.Decision.prototype.hasUserConsent = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.Task.repeatedFields_ = [4,6];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.Task.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.Task.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.Task} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    protocolName: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    protocolParam: msg.getProtocolParam_asB64(),\n    participantsList: jspb.Message.toObjectList(msg.getParticipantsList(),\n    proto.colink.Participant.toObject, includeInstance),\n    parentTask: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    requireAgreement: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),\n    decisionsList: jspb.Message.toObjectList(msg.getDecisionsList(),\n    proto.colink.Decision.toObject, includeInstance),\n    status: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    expirationTime: jspb.Message.getFieldWithDefault(msg, 8, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.Task;\n  return proto.colink.Task.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.Task} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.Task}\n */\nproto.colink.Task.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProtocolParam(value);\n      break;\n    case 4:\n      var value = new proto.colink.Participant;\n      reader.readMessage(value,proto.colink.Participant.deserializeBinaryFromReader);\n      msg.addParticipants(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setParentTask(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setRequireAgreement(value);\n      break;\n    case 6:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.addDecisions(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpirationTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.Task.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.Task} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.Task.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getProtocolParam_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getParticipantsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.colink.Participant.serializeBinaryToWriter\n    );\n  }\n  f = message.getParentTask();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getRequireAgreement();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n  f = message.getDecisionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      6,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getExpirationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.Task.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string protocol_name = 2;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {string}\n */\nproto.colink.Task.prototype.getProtocolParam_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProtocolParam()));\n};\n\n\n/**\n * optional bytes protocol_param = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProtocolParam()`\n * @return {!Uint8Array}\n */\nproto.colink.Task.prototype.getProtocolParam_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProtocolParam()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setProtocolParam = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * repeated Participant participants = 4;\n * @return {!Array<!proto.colink.Participant>}\n */\nproto.colink.Task.prototype.getParticipantsList = function() {\n  return /** @type{!Array<!proto.colink.Participant>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Participant, 4));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Participant>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setParticipantsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.colink.Participant=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Participant}\n */\nproto.colink.Task.prototype.addParticipants = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.colink.Participant, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearParticipantsList = function() {\n  return this.setParticipantsList([]);\n};\n\n\n/**\n * optional string parent_task = 5;\n * @return {string}\n */\nproto.colink.Task.prototype.getParentTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setParentTask = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional bool require_agreement = 9;\n * @return {boolean}\n */\nproto.colink.Task.prototype.getRequireAgreement = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setRequireAgreement = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n/**\n * repeated Decision decisions = 6;\n * @return {!Array<!proto.colink.Decision>}\n */\nproto.colink.Task.prototype.getDecisionsList = function() {\n  return /** @type{!Array<!proto.colink.Decision>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.Decision, 6));\n};\n\n\n/**\n * @param {!Array<!proto.colink.Decision>} value\n * @return {!proto.colink.Task} returns this\n*/\nproto.colink.Task.prototype.setDecisionsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 6, value);\n};\n\n\n/**\n * @param {!proto.colink.Decision=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.Decision}\n */\nproto.colink.Task.prototype.addDecisions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.colink.Decision, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.clearDecisionsList = function() {\n  return this.setDecisionsList([]);\n};\n\n\n/**\n * optional string status = 7;\n * @return {string}\n */\nproto.colink.Task.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setStatus = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional int64 expiration_time = 8;\n * @return {number}\n */\nproto.colink.Task.prototype.getExpirationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.Task} returns this\n */\nproto.colink.Task.prototype.setExpirationTime = function(value) {\n  return jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ConfirmTaskRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ConfirmTaskRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ConfirmTaskRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskId: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    decision: (f = msg.getDecision()) && proto.colink.Decision.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ConfirmTaskRequest;\n  return proto.colink.ConfirmTaskRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ConfirmTaskRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ConfirmTaskRequest}\n */\nproto.colink.ConfirmTaskRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    case 2:\n      var value = new proto.colink.Decision;\n      reader.readMessage(value,proto.colink.Decision.deserializeBinaryFromReader);\n      msg.setDecision(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ConfirmTaskRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ConfirmTaskRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ConfirmTaskRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ConfirmTaskRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getDecision();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.colink.Decision.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional string task_id = 1;\n * @return {string}\n */\nproto.colink.ConfirmTaskRequest.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional Decision decision = 2;\n * @return {?proto.colink.Decision}\n */\nproto.colink.ConfirmTaskRequest.prototype.getDecision = function() {\n  return /** @type{?proto.colink.Decision} */ (\n    jspb.Message.getWrapperField(this, proto.colink.Decision, 2));\n};\n\n\n/**\n * @param {?proto.colink.Decision|undefined} value\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n*/\nproto.colink.ConfirmTaskRequest.prototype.setDecision = function(value) {\n  return jspb.Message.setWrapperField(this, 2, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n * @return {!proto.colink.ConfirmTaskRequest} returns this\n */\nproto.colink.ConfirmTaskRequest.prototype.clearDecision = function() {\n  return this.setDecision(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.colink.ConfirmTaskRequest.prototype.hasDecision = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.RequestInfoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.RequestInfoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.RequestInfoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    mqUri: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    corePublicKey: msg.getCorePublicKey_asB64(),\n    requestorIp: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    version: jspb.Message.getFieldWithDefault(msg, 4, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.RequestInfoResponse;\n  return proto.colink.RequestInfoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.RequestInfoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.RequestInfoResponse}\n */\nproto.colink.RequestInfoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMqUri(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCorePublicKey(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setRequestorIp(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVersion(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.RequestInfoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.RequestInfoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.RequestInfoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMqUri();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getCorePublicKey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRequestorIp();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getVersion();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string mq_uri = 1;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getMqUri = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setMqUri = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * optional bytes core_public_key = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCorePublicKey()`\n * @return {!Uint8Array}\n */\nproto.colink.RequestInfoResponse.prototype.getCorePublicKey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCorePublicKey()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setCorePublicKey = function(value) {\n  return jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional string requestor_ip = 3;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getRequestorIp = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setRequestorIp = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string version = 4;\n * @return {string}\n */\nproto.colink.RequestInfoResponse.prototype.getVersion = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.RequestInfoResponse} returns this\n */\nproto.colink.RequestInfoResponse.prototype.setVersion = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscribeRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscribeRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    startTimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscribeRequest;\n  return proto.colink.SubscribeRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscribeRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscribeRequest}\n */\nproto.colink.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyName(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscribeRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscribeRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscribeRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getStartTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_name = 1;\n * @return {string}\n */\nproto.colink.SubscribeRequest.prototype.getKeyName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setKeyName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional int64 start_timestamp = 2;\n * @return {number}\n */\nproto.colink.SubscribeRequest.prototype.getStartTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.colink.SubscribeRequest} returns this\n */\nproto.colink.SubscribeRequest.prototype.setStartTimestamp = function(value) {\n  return jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.SubscriptionMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.SubscriptionMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.SubscriptionMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    changeType: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    keyPath: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    payload: msg.getPayload_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.SubscriptionMessage;\n  return proto.colink.SubscriptionMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.SubscriptionMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.SubscriptionMessage}\n */\nproto.colink.SubscriptionMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setChangeType(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPayload(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.SubscriptionMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.SubscriptionMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.SubscriptionMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getChangeType();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getPayload_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string change_type = 1;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getChangeType = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setChangeType = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string key_path = 2;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bytes payload = 3;\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes payload = 3;\n * This is a type-conversion wrapper around `getPayload()`\n * @return {string}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPayload()));\n};\n\n\n/**\n * optional bytes payload = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPayload()`\n * @return {!Uint8Array}\n */\nproto.colink.SubscriptionMessage.prototype.getPayload_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPayload()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.colink.SubscriptionMessage} returns this\n */\nproto.colink.SubscriptionMessage.prototype.setPayload = function(value) {\n  return jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.MQQueueName.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.MQQueueName.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.MQQueueName} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    queueName: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.MQQueueName;\n  return proto.colink.MQQueueName.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.MQQueueName} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.MQQueueName}\n */\nproto.colink.MQQueueName.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setQueueName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.MQQueueName.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.MQQueueName.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.MQQueueName} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.MQQueueName.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getQueueName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string queue_name = 1;\n * @return {string}\n */\nproto.colink.MQQueueName.prototype.getQueueName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.MQQueueName} returns this\n */\nproto.colink.MQQueueName.prototype.setQueueName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    keyPath: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    taskId: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n  return proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setKeyPath(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTaskId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getKeyPath();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTaskId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string key_path = 1;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getKeyPath = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setKeyPath = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string task_id = 2;\n * @return {string}\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.getTaskId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath} returns this\n */\nproto.colink.CoLinkInternalTaskIDWithKeyPath.prototype.setTaskId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.colink.CoLinkInternalTaskIDList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.CoLinkInternalTaskIDList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    taskIdsWithKeyPathsList: jspb.Message.toObjectList(msg.getTaskIdsWithKeyPathsList(),\n    proto.colink.CoLinkInternalTaskIDWithKeyPath.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.CoLinkInternalTaskIDList;\n  return proto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.CoLinkInternalTaskIDList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.CoLinkInternalTaskIDList}\n */\nproto.colink.CoLinkInternalTaskIDList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.colink.CoLinkInternalTaskIDWithKeyPath;\n      reader.readMessage(value,proto.colink.CoLinkInternalTaskIDWithKeyPath.deserializeBinaryFromReader);\n      msg.addTaskIdsWithKeyPaths(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.CoLinkInternalTaskIDList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.CoLinkInternalTaskIDList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTaskIdsWithKeyPathsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.colink.CoLinkInternalTaskIDWithKeyPath.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated CoLinkInternalTaskIDWithKeyPath task_ids_with_key_paths = 1;\n * @return {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.getTaskIdsWithKeyPathsList = function() {\n  return /** @type{!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.colink.CoLinkInternalTaskIDWithKeyPath, 1));\n};\n\n\n/**\n * @param {!Array<!proto.colink.CoLinkInternalTaskIDWithKeyPath>} value\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n*/\nproto.colink.CoLinkInternalTaskIDList.prototype.setTaskIdsWithKeyPathsList = function(value) {\n  return jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.colink.CoLinkInternalTaskIDWithKeyPath=} opt_value\n * @param {number=} opt_index\n * @return {!proto.colink.CoLinkInternalTaskIDWithKeyPath}\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.addTaskIdsWithKeyPaths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.colink.CoLinkInternalTaskIDWithKeyPath, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.colink.CoLinkInternalTaskIDList} returns this\n */\nproto.colink.CoLinkInternalTaskIDList.prototype.clearTaskIdsWithKeyPathsList = function() {\n  return this.setTaskIdsWithKeyPathsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.StartProtocolOperatorRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    protocolName: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    userId: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    upgrade: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    sourceType: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    deployMode: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    source: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    vtPublicAddr: jspb.Message.getFieldWithDefault(msg, 7, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.StartProtocolOperatorRequest;\n  return proto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.StartProtocolOperatorRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.StartProtocolOperatorRequest}\n */\nproto.colink.StartProtocolOperatorRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setProtocolName(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUserId(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setUpgrade(value);\n      break;\n    case 4:\n      var value = /** @type {!proto.colink.StartProtocolOperatorSourceType} */ (reader.readEnum());\n      msg.setSourceType(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setDeployMode(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSource(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setVtPublicAddr(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.StartProtocolOperatorRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.StartProtocolOperatorRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getProtocolName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getUserId();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getUpgrade();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getSourceType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      4,\n      f\n    );\n  }\n  f = message.getDeployMode();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getSource();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getVtPublicAddr();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string protocol_name = 1;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getProtocolName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setProtocolName = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string user_id = 2;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUserId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUserId = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool upgrade = 3;\n * @return {boolean}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getUpgrade = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/**\n * @param {boolean} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setUpgrade = function(value) {\n  return jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional StartProtocolOperatorSourceType source_type = 4;\n * @return {!proto.colink.StartProtocolOperatorSourceType}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getSourceType = function() {\n  return /** @type {!proto.colink.StartProtocolOperatorSourceType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/**\n * @param {!proto.colink.StartProtocolOperatorSourceType} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setSourceType = function(value) {\n  return jspb.Message.setProto3EnumField(this, 4, value);\n};\n\n\n/**\n * optional string deploy_mode = 5;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getDeployMode = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setDeployMode = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string source = 6;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getSource = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setSource = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string vt_public_addr = 7;\n * @return {string}\n */\nproto.colink.StartProtocolOperatorRequest.prototype.getVtPublicAddr = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.StartProtocolOperatorRequest} returns this\n */\nproto.colink.StartProtocolOperatorRequest.prototype.setVtPublicAddr = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.toObject = function(opt_includeInstance) {\n  return proto.colink.ProtocolOperatorInstanceId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    instanceId: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.colink.ProtocolOperatorInstanceId;\n  return proto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.colink.ProtocolOperatorInstanceId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.colink.ProtocolOperatorInstanceId}\n */\nproto.colink.ProtocolOperatorInstanceId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setInstanceId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.colink.ProtocolOperatorInstanceId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.colink.ProtocolOperatorInstanceId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getInstanceId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string instance_id = 1;\n * @return {string}\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.getInstanceId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.colink.ProtocolOperatorInstanceId} returns this\n */\nproto.colink.ProtocolOperatorInstanceId.prototype.setInstanceId = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * @enum {number}\n */\nproto.colink.StartProtocolOperatorSourceType = {\n  NONE: 0,\n  TGZ: 1,\n  GIT: 2,\n  DOCKER: 3\n};\n\ngoog.object.extend(exports, proto.colink);\n"],"names":["CoLinkClient","hostname","credentials","options","client_","hostname_","credentials_","options_","methodDescriptorGenerateToken","grpcWeb","proto_colink_pb","request","serializeBinary","methodDescriptorImportUser","methodDescriptorCreateEntry","methodDescriptorReadEntries","methodDescriptorUpdateEntry","methodDescriptorDeleteEntry","methodDescriptorReadKeys","methodDescriptorCreateTask","methodDescriptorConfirmTask","methodDescriptorFinishTask","methodDescriptorRequestInfo","methodDescriptorSubscribe","methodDescriptorUnsubscribe","methodDescriptorStartProtocolOperator","methodDescriptorStopProtocolOperator","methodDescriptorInterCoreSyncTask","methodDescriptorInterCoreSyncTaskWithReverseConnection","this","metadata","callback","undefined","rpcCall","unaryCall","serverStreaming","getClient","input","verifyClient","client","response","coreReq","Empty","requestInfo","getMetadata","then","resp","catch","err","Promise","resolve","jwt","authorization","getNameEntry","entry","StorageEntry","setKeyName","getUserId","encodedId","split","JSON","parse","Buffer","toString","user_id","global","XMLHttpRequest","require","UserData","pk","privateKey","userJwt","Consent","c","consent","getUserConsentPK","meta","pubKey","privKey","expirationTimestamp","sigTime","parseInt","Date","now","toFixed","sigTimeBuf","writeBigUInt64LE","BigInt","expTime","expTimeBuf","corePubKey","getCorePublicKey_asU8","msg","hash","crypto","update","digest","signature","secp256k1","UserConsent","setPublicKey","setSignatureTimestamp","setSignature","setExpirationTimestamp","getUserConsentMM","address","window","ethereum","Error","method","provider","ethers","signer","getSigner","sigTimeStr","expTimeStr","i","signMessage","sigBuf","slice","generateKeyAndJwt","hostToken","console","log","generateJwtFromKey","Uint8Array","from","jwtToken","importUser","getJwt","generateJwtMetaMask","alert","generateToken","oldJwt","expirationTime","GenerateTokenRequest","setExpirationTime","daysToTimestamp","setUserConsent","setPrivilege","newJwt","validateJwtAndPrivilege","getMqUri","length","days","storageEntryToJSON","displayTab","payload","getPayload_asU8","reduce","str","byte","padStart","getPayload_asB64","atob","name","keyNameFromPath","getKeyPath","keyPath","matches","match","lastKeyNameFromPath","readEntry","nameEntry","StorageEntries","addEntries","readEntries","entriesList","getEntriesList","getUserStorageEntries","prefix","updateEntries","req","ReadKeysRequest","setPrefix","setIncludeHistory","newPrefixes","readKeys","newEntries","entries","concat","map","keyPrefixes","userId","sort","a","b","jspb","goog","self","Function","call","exportSymbol","proto","colink","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","ListOfString","repeatedFields_","ListOfBytes","ListOfInt64","ListOfFloat","ListOfBool","Jwt","Participant","Decision","Task","ConfirmTaskRequest","RequestInfoResponse","SubscribeRequest","SubscriptionMessage","MQQueueName","CoLinkInternalTaskIDWithKeyPath","CoLinkInternalTaskIDList","StartProtocolOperatorRequest","ProtocolOperatorInstanceId","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","listList","getRepeatedField","value","readString","addList","getListList","writeRepeatedString","setListList","setField","opt_index","addToRepeatedField","clearListList","getListList_asB64","readBytes","getListList_asU8","writeRepeatedBytes","bytesListAsB64","bytesListAsU8","values","isDelimited","readPackedInt64","readInt64","writePackedInt64","getRepeatedFloatingPointField","readPackedFloat","readFloat","writePackedFloat","getRepeatedBooleanField","readPackedBool","readBool","writePackedBool","getFieldWithDefault","setJwt","writeString","setProto3StringField","keyName","setKeyPath","setPayload","getKeyName","writeBytes","getPayload","bytesAsB64","bytesAsU8","setProto3BytesField","toObjectList","readMessage","writeRepeatedMessage","getRepeatedWrapperField","setEntriesList","setRepeatedWrapperField","opt_value","addToRepeatedWrapperField","clearEntriesList","privilege","userConsent","getUserConsent","getExpirationTime","writeInt64","getPrivilege","writeMessage","setProto3IntField","getWrapperField","setWrapperField","clearUserConsent","hasUserConsent","getField","publicKey","getPublicKey_asB64","signatureTimestamp","getSignature_asB64","getPublicKey_asU8","getSignatureTimestamp","getExpirationTimestamp","getSignature_asU8","getPublicKey","getSignature","includeHistory","getBooleanFieldWithDefault","getPrefix","getIncludeHistory","writeBool","setProto3BooleanField","role","setUserId","setRole","getRole","isApproved","isRejected","reason","corePublicKey","getCorePublicKey_asB64","setIsApproved","setIsRejected","setReason","setCorePublicKey","getIsApproved","getIsRejected","getReason","getCorePublicKey","taskId","protocolName","protocolParam","getProtocolParam_asB64","participantsList","getParticipantsList","parentTask","requireAgreement","decisionsList","getDecisionsList","status","setTaskId","setProtocolName","setProtocolParam","addParticipants","setParentTask","setRequireAgreement","addDecisions","setStatus","getTaskId","getProtocolName","getProtocolParam_asU8","getParentTask","getRequireAgreement","getStatus","getProtocolParam","setParticipantsList","clearParticipantsList","setDecisionsList","clearDecisionsList","decision","getDecision","setDecision","clearDecision","hasDecision","mqUri","requestorIp","version","setMqUri","setRequestorIp","setVersion","getRequestorIp","getVersion","startTimestamp","setStartTimestamp","getStartTimestamp","changeType","setChangeType","getChangeType","queueName","setQueueName","getQueueName","taskIdsWithKeyPathsList","getTaskIdsWithKeyPathsList","addTaskIdsWithKeyPaths","setTaskIdsWithKeyPathsList","clearTaskIdsWithKeyPathsList","upgrade","sourceType","deployMode","source","vtPublicAddr","setUpgrade","readEnum","setSourceType","setDeployMode","setSource","setVtPublicAddr","getUpgrade","getSourceType","writeEnum","getDeployMode","getSource","getVtPublicAddr","setProto3EnumField","instanceId","setInstanceId","getInstanceId","StartProtocolOperatorSourceType","NONE","TGZ","GIT","DOCKER","object","extend","exports"],"sourceRoot":""}